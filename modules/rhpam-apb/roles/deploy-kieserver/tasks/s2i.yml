---
- name: "[KIE SERVER {{ kieserver_deployment_index }}] set imagestream state to {{ state }}"
  k8s:
    state: '{{ state }}'
    definition:
      apiVersion: v1
      kind: ImageStream
      metadata:
        name: '{{ kieserver_deployment_name }}'
        namespace: '{{ namespace }}'
        labels:
          app: '{{ kieserver_deployment_name }}'
          application: '{{ application_name }}'
          service: '{{ kieserver_service_name }}'

- name: "[KIE SERVER {{ kieserver_deployment_index }}] set buildconfig state to {{ state }}"
  k8s:
    state: '{{ state }}'
    definition:
      apiVersion: v1
      kind: BuildConfig
      metadata:
        name: '{{ kieserver_deployment_name }}'
        namespace: '{{ namespace }}'
        labels:
          app: '{{ kieserver_deployment_name }}'
          application: '{{ application_name }}'
          service: '{{ kieserver_service_name }}'
      spec:
        source:
          type: Git
          git:
            uri: "{{ kieserver_source_url }}"
            ref: "{{ kieserver_source_ref }}"
          contextDir: "{{ kieserver_source_context }}"
        strategy:
          type: Source
          sourceStrategy:
            env:
              - name: KIE_SERVER_CONTAINER_DEPLOYMENT
                value: "{{ kieserver_container_deployment }}"
              - name: MAVEN_MIRROR_URL
                value: "{{ maven_mirror_url }}"
              - name: ARTIFACT_DIR
                value: "{{ kieserver_artifact_dir }}"
            forcePull: true
            from:
              kind: ImageStreamTag
              namespace: "{{ kieserver_image_namespace }}"
              name: "{{ kieserver_image_name }}:{{ kieserver_image_tag }}"
        output:
          to:
            kind: ImageStreamTag
            name: "{{ kieserver_deployment_name }}:latest"
        triggers:
        - type: GitHub
          github:
            secret: "{{ kieserver_github_webhook_secret }}"
        - type: Generic
          generic:
            secret: "{{ kieserver_generic_webhook_secret }}"
        - type: ImageChange
          imageChange: {}
        - type: ConfigChange
