schema_version: 1

name: "rhpam-7/rhpam-apb"
description: "Red Hat Business Central 7.3 OpenShift Ansible Playbook Bundle"
version: "1.1"
from: "openshift3/apb-base:v3.11"
labels:
  - name: "com.redhat.component"
    value: "rhpam-apb"
  - name: "io.k8s.description"
    value: "Platform for running Red Hat Process Automation Manager"
  - name: "io.k8s.display-name"
    value: "Red Hat Process Automation Manager 7.3"
  - name: "io.openshift.tags"
    value: "javaee,eap,eap7,rhpam,rhpam7,apb"
  - name: "com.redhat.apb.spec"
    value: "LS0tCiMgQ29tbW9uIENyZWRlbnRpYWxzCl9hcGJfa2llX2FkbWluX3VzZXI6ICZfYXBiX2tpZV9hZG1pbl91c2VyCiAgbmFtZTogYXBiX2tpZV9hZG1pbl91c2VyCiAgdGl0bGU6IEFkbWluIFVzZXJuYW1lCiAgZGVzY3JpcHRpb246IEFkbWluIHVzZXIgbmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJhbCBhbmQgUHJvY2VzcyBTZXJ2ZXIKICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IGFkbWluVXNlcgpfYXBiX2tpZV9hZG1pbl9wd2Q6ICZfYXBiX2tpZV9hZG1pbl9wd2QKICBuYW1lOiBhcGJfa2llX2FkbWluX3B3ZAogIHRpdGxlOiBBZG1pbiBQYXNzd29yZAogIGRlc2NyaXB0aW9uOiBBZG1pbiB1c2VyIHBhc3N3b3JkIGZvciBCdXNpbmVzcyBDZW50\
cmFsIGFuZCBQcm9jZXNzIFNlcnZlci4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAojIEltYWdlU3RyZWFtcwpfYXBiX2ltYWdlX3N0cmVhbV90YWc6ICZfYXBiX2ltYWdlX3N0cmVhbV90YWcKICBuYW1lOiBhcGJfaW1hZ2Vfc3RyZWFtX3RhZwogIHRpdGxlOiBJbWFnZSB2ZXJzaW9uCiAgZGVzY3JpcHRpb246IFRhZyB2ZXJzaW9uIG9mIHRoZSBSSFBBTSBJbWFnZVN0cmVhbSB0byB1c2UuIEl0IG11c3QgZXhpc3QgaW4gdGhlIG9wZW5zaGlmdCBuYW1lc3BhY2UuCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBzdHJpbmcKICBkZWZhdWx0OiAnMS4wJwojIEhBCl9hcGJfcmVwbGljYXM6ICZfYXBiX3JlcGxpY2FzCiAg\
dGl0bGU6IE51bWJlciBvZiByZXBsaWNhcwogIGRlc2NyaXB0aW9uOiBOdW1iZXIgb2YgUmVwbGljYXMgdGhhdCB3aWxsIGJlIGluaXRpYWxseSBkZXBsb3llZAogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogbnVtYmVyCiAgZGVmYXVsdDogMwojIE1hdmVuCl9hcGJfbWF2ZW5fbWlycm9yX3VybDogJl9hcGJfbWF2ZW5fbWlycm9yX3VybAogIG5hbWU6IGFwYl9tYXZlbl9taXJyb3JfdXJsCiAgdGl0bGU6IE1hdmVuIE1pcnJvciBVUkwKICBkZXNjcmlwdGlvbjogTWF2ZW4gTWlycm9yIHRvIHVzZSBieSBCdXNpbmVzcyBDZW50cmFsIGFuZCBQcm9jZXNzIFNlcnZlcgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IE1hdmVuCl9hcGJfbWF2ZW5fcmVwb191cmw6ICZfYXBi\
X21hdmVuX3JlcG9fdXJsCiAgbmFtZTogYXBiX21hdmVuX3JlcG9fdXJsCiAgdGl0bGU6IE1hdmVuIFJlcG9zaXRvcnkgVVJMCiAgZGVzY3JpcHRpb246IEV4dGVybmFsIE1hdmVuIFJlcG9zaXRvcnkgVVJMLiBMZWF2ZSBlbXB0eSB0byB1c2UgdGhlIHJlcG9zaXRvcnkgcHJvdmlkZWQgYnkgQnVzaW5lc3MgQ2VudHJhbAogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IE1hdmVuCl9hcGJfbWF2ZW5fcmVwb19pZDogJl9hcGJfbWF2ZW5fcmVwb19pZAogIG5hbWU6IGFwYl9tYXZlbl9yZXBvX2lkCiAgdGl0bGU6IE1hdmVuIFJlcG9zaXRvcnkgSUQKICBkZXNjcmlwdGlvbjogVGhlIElEIHRvIHVzZSBmb3IgdGhlIG1hdmVuIHJlcG9zaXRvcnksIGlmIHNldC4gRGVmYXVs\
dCBpcyBnZW5lcmF0ZWQgcmFuZG9tbHkuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTWF2ZW4KX2FwYl9tYXZlbl9yZXBvX3VzZXI6ICZfYXBiX21hdmVuX3JlcG9fdXNlcgogIG5hbWU6IGFwYl9tYXZlbl9yZXBvX3VzZXIKICB0aXRsZTogTWF2ZW4gUmVwb3NpdG9yeSBVc2VybmFtZQogIGRlc2NyaXB0aW9uOiBVc2VybmFtZSB0byB1c2UgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgZXh0ZXJuYWwgTWF2ZW4gcmVwb3NpdG9yeS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBNYXZlbgpfYXBiX21hdmVuX3JlcG9fcHdkOiAmX2FwYl9tYXZlbl9yZXBvX3B3ZAogIG5hbWU6IGFwYl9tYXZlbl9yZXBvX3B3ZAogIHRpdGxlOiBNYXZlbiBSZXBvc2l0b3J5IFBh\
c3N3b3JkCiAgZGVzY3JpcHRpb246IFBhc3N3b3JkIHRvIHVzZSB0byBpbnRlcmFjdCB3aXRoIHRoZSBleHRlcm5hbCBNYXZlbiByZXBvc2l0b3J5LgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfdHlwZTogcGFzc3dvcmQKICBkaXNwbGF5X2dyb3VwOiBNYXZlbgojIEdlbmVyaWMgS2V5c3RvcmUgcGFyYW1ldGVycwpfYXBiX3NlY3JldF9uYW1lOiAmX2FwYl9zZWNyZXRfbmFtZQogIHRpdGxlOiBTZWNyZXQgTmFtZQogIGRlc2NyaXB0aW9uOiBOYW1lIG9mIHRoZSBzZWNyZXQgY29udGFpbmluZyB0aGUga2V5c3RvcmUgdG8gYmUgdXNlZCBieSB0aGUgc2VydmVyIHRvIGFjY2VwdCBIVFRQUyBjb25uZWN0aW9ucy4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgdHlwZTogc3RyaW5nCl9h\
cGJfa2V5c3RvcmVfbmFtZTogJl9hcGJfa2V5c3RvcmVfbmFtZQogIHRpdGxlOiBLZXlzdG9yZSBGaWxlIE5hbWUKICBkZXNjcmlwdGlvbjogTmFtZSBvZiB0aGUga2V5c3RvcmUgZmlsZSBjb250YWluaW5nIHRoZSBjZXJ0aWZpY2F0ZSB0byBiZSB1c2VkIGJ5IHRoZSBzZXJ2ZXIgdG8gYWNjZXB0IEhUVFBTIGNvbm5lY3Rpb25zLiBJZiBhIHNlY3JldCBuYW1lIGlzIG5vdCBwcm92aWRlZCwgdGhlIHNlcnZlciBnZW5lcmF0ZXMgYSBzZWNyZXQgd2l0aCB0aGlzIGtleXN0b3JlIGZpbGUgbmFtZS4KICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IGtleXN0b3JlLmprcwpfYXBiX2tleXN0b3JlX2FsaWFzOiAmX2FwYl9rZXlzdG9yZV9hbGlhcwogIHRp\
dGxlOiBLZXlzdG9yZSBjZXJ0aWZpY2F0ZSBhbGlhcwogIGRlc2NyaXB0aW9uOiBOYW1lIG9mIHRoZSBjZXJ0aWZpY2F0ZSBhbGlhcyBpbmNsdWRlZCBpbiB0aGUga2V5c3RvcmUgdG8gYmUgdXNlZCBieSB0aGUgc2VydmVyIHRvIGFjY2VwdCBIVFRQUyBjb25uZWN0aW9ucy4gSWYgYSBzZWNyZXQgbmFtZSBpcyBub3QgcHJvdmlkZWQsIHRoZSBzZXJ2ZXIgZ2VuZXJhdGVzIGEgc2VyZXQgd2l0aCB0aGlzIGFsaWFzLgogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogc3RyaW5nCiAgZGVmYXVsdDogamJvc3MKX2FwYl9rZXlzdG9yZV9wd2Q6ICZfYXBiX2tleXN0b3JlX3B3ZAogIHRpdGxlOiBLZXlzdG9yZSBhbmQgQ2VydGlmaWNhdGUgUGFzc3dvcmQKICBkZXNjcmlwdGlvbjogUGFz\
c3dvcmQgcHJvdGVjdGluZyBib3RoIHRoZSBLZXlzdG9yZSBhbmQgdGhlIENlcnRpZmljYXRlLiBHZW5lcmF0ZWQgaWYgZW1wdHkKICB0eXBlOiBzdHJpbmcKICBtaW5fbGVuZ3RoOiA2CiAgZGlzcGxheV90eXBlOiBwYXNzd29yZApfYXBiX3ZvbHVtZV9zaXplOiAmX2FwYl92b2x1bWVfc2l6ZQogIHRpdGxlOiBXb3Jrc3BhY2UgU3RvcmFnZSBTaXplCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBzdHJpbmcKICBwYXR0ZXJuOiAiXlswLTldK1ttTWdHdFRdaT8kIgpfYXBiX2hvc3RuYW1lOiAmX2FwYl9ob3N0bmFtZQogIHRpdGxlOiBQdWJsaWMgSG9zdG5hbWUKICB0eXBlOiBzdHJpbmcKIyBCdXNpbmVzcyBDZW50cmFsCl9hcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lOiAm\
X2FwYl9idXNpbmVzc2NlbnRyYWxfaG9zdG5hbWUKICA8PDogKl9hcGJfaG9zdG5hbWUKICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lCiAgZGVzY3JpcHRpb246IFB1YmxpYyBob3N0bmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJhbC4gR2VuZXJhdGVkIGlmIGVtcHR5CiMgT0NQIEVuYWJsZW1lbnQKX2FwYl9jb250cm9sbGVyX2dsb2JhbF9kaXNjb3Zlcnk6ICZfYXBiX2NvbnRyb2xsZXJfZ2xvYmFsX2Rpc2NvdmVyeQogIG5hbWU6IGFwYl9jb250cm9sbGVyX2dsb2JhbF9kaXNjb3ZlcnkKICB0aXRsZTogRW5hYmxlIEtJRSBzZXJ2ZXIgZ2xvYmFsIGRpc2NvdmVyeQogIGRlc2NyaXB0aW9uOiBJZiBzZXQgdG8gdHJ1ZSwgdHVybnMgb24gS0lFIHNlcnZlciBnbG9i\
YWwgZGlzY292ZXJ5IGZlYXR1cmUgKFNldHMgdGhlIG9yZy5raWUuc2VydmVyLmNvbnRyb2xsZXIub3BlbnNoaWZ0Lmdsb2JhbC5kaXNjb3ZlcnkuZW5hYmxlZCBzeXN0ZW0gcHJvcGVydHkpCiAgdHlwZTogYm9vbGVhbgogIGRlZmF1bHQ6IGZhbHNlCiAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbApfYXBiX2NvbnRyb2xsZXJfcHJlZmVyX2tpZXNlcnZlcl9zdmM6ICZfYXBiX2NvbnRyb2xsZXJfcHJlZmVyX2tpZXNlcnZlcl9zdmMKICBuYW1lOiBhcGJfY29udHJvbGxlcl9wcmVmZXJfa2llc2VydmVyX3N2YwogIHRpdGxlOiBQcmVmZXIgUHJvY2VzcyBTZXJ2ZXIgT3BlblNoaWZ0IFNlcnZpY2UKICBkZXNjcmlwdGlvbjogRW5hYmxlcyBjb25uZWN0aW9uIHRvIFBy\
b2Nlc3MgU2VydmVyIHZpYSBPcGVuU2hpZnQgaW50ZXJuYWwgU2VydmljZSBlbmRwb2ludCAoU2V0cyB0aGUgb3JnLmtpZS5zZXJ2ZXIuY29udHJvbGxlci5vcGVuc2hpZnQucHJlZmVyLmtpZXNlcnZlci5zZXJ2aWNlIHN5c3RlbSBwcm9wZXJ0eSkKICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDogZmFsc2UKICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCl9hcGJfY29udHJvbGxlcl90ZW1wbGF0ZV9jYWNoZV90dGw6ICZfYXBiX2NvbnRyb2xsZXJfdGVtcGxhdGVfY2FjaGVfdHRsCiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfdGVtcGxhdGVfY2FjaGVfdHRsCiAgdGl0bGU6IFByb2Nlc3MgU2VydmVyIFRlbXBsYXRlIENhY2hlIFRUTAogIGRlc2NyaXB0aW9uOiBQcm9j\
ZXNzIFNlcnZlciBUZW1wbGF0ZSBDYWNoZSBUVEwgaW4gbWlsbGlzZWNvbmRzIChTZXRzIHRoZSBvcmcua2llLnNlcnZlci5jb250cm9sbGVyLnRlbXBsYXRlLmNhY2hlLnR0bCBzeXN0ZW0gcHJvcGVydHkpCiAgdHlwZTogbnVtYmVyCiAgZGVmYXVsdDogNjAwMDAKICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCl9hcGJfYnVzaW5lc3NjZW50cmFsX3NlY3JldF9uYW1lOiAmX2FwYl9idXNpbmVzc2NlbnRyYWxfc2VjcmV0X25hbWUKICA8PDogKl9hcGJfc2VjcmV0X25hbWUKICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX3NlY3JldF9uYW1lCiAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCl9hcGJfYnVzaW5lc3NjZW50cmFsX2tl\
eXN0b3JlX25hbWU6ICZfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9uYW1lCiAgPDw6ICpfYXBiX2tleXN0b3JlX25hbWUKICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX25hbWUKICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfYWxpYXM6ICZfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9hbGlhcwogIDw8OiAqX2FwYl9rZXlzdG9yZV9hbGlhcwogIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfYWxpYXMKICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfcHdk\
OiAmX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfcHdkCiAgPDw6ICpfYXBiX2tleXN0b3JlX3B3ZAogIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfcHdkCiAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiMgR2l0IEhvb2tzCl9hcGJfZ2l0X2hvb2tzX2RpcjogJl9hcGJfZ2l0X2hvb2tzX2RpcgogIG5hbWU6IGFwYl9naXRfaG9va3NfZGlyCiAgdGl0bGU6IEdpdCBob29rcyBkaXJlY3RvcnkKICBkZXNjcmlwdGlvbjogVGhlIGRpcmVjdG9yeSB0byB1c2UgZm9yIGdpdCBob29rcywgaWYgcmVxdWlyZWQuIGUuZy4gL29wdC9raWUvZGF0YS9naXQvaG9va3MKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBCdXNp\
bmVzcyBDZW50cmFsCl9hcGJfYnVzaW5lc3NjZW50cmFsX21hdmVuX3JlcG9fdXNlcjogJl9hcGJfYnVzaW5lc3NjZW50cmFsX21hdmVuX3JlcG9fdXNlcgogIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfbWF2ZW5fcmVwb191c2VyCiAgdGl0bGU6IE1hdmVuIFJlcG9zaXRvcnkgVXNlcm5hbWUKICBkZXNjcmlwdGlvbjogVXNlcm5hbWUgdG8gdXNlIHRvIGludGVyYWN0IHdpdGggdGhlIEJ1c2luZXNzIENlbnRyYWwgTWF2ZW4gcmVwb3NpdG9yeS4KICB0eXBlOiBzdHJpbmcKICBkZWZhdWx0OiBtYXZlblVzZXIKICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCl9hcGJfYnVzaW5lc3NjZW50cmFsX21hdmVuX3JlcG9fcHdkOiAmX2FwYl9idXNpbmVzc2NlbnRyYWxf\
bWF2ZW5fcmVwb19wd2QKICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX21hdmVuX3JlcG9fcHdkCiAgdGl0bGU6IE1hdmVuIFJlcG9zaXRvcnkgUGFzc3dvcmQKICBkZXNjcmlwdGlvbjogUGFzc3dvcmQgdG8gdXNlIHRvIGludGVyYWN0IHdpdGggdGhlIEJ1c2luZXNzIENlbnRyYWwgTWF2ZW4gcmVwb3NpdG9yeS4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKIyBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9tb2RlOiAmX2FwYl9raWVzZXJ2ZXJfbW9kZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfbW9kZQogIHRpdGxlOiBQcm9jZXNzIFNlcnZlciBN\
b2RlCiAgZGVzY3JpcHRpb246IFRoZSBLSUUgU2VydmVyIG1vZGUuIFZhbGlkIHZhbHVlcyBhcmUgJ0RFVkVMT1BNRU5UJyBvciAnUFJPRFVDVElPTicuIChTZXRzIHRoZSBvcmcua2llLnNlcnZlci5tb2RlIHN5c3RlbSBwcm9wZXJ0eSkuCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBlbnVtCiAgZW51bTogWydERVZFTE9QTUVOVCcsICdQUk9EVUNUSU9OJ10KICBkZWZhdWx0OiBERVZFTE9QTUVOVAogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX2ltYWdlX3N0cmVhbV9uYW1lOiAmX2FwYl9raWVzZXJ2ZXJfaW1hZ2Vfc3RyZWFtX25hbWUKICBuYW1lOiBhcGJfa2llc2VydmVyX2ltYWdlX3N0cmVhbV9uYW1lCiAgdGl0bGU6IFByb2Nlc3Mg\
U2VydmVyIEltYWdlIFN0cmVhbSBOYW1lCiAgZGVzY3JpcHRpb246IEltYWdlIFN0cmVhbSBOYW1lIHRvIHVzZSBmb3IgUHJvY2VzcyBTZXJ2ZXIuIElmIHlvdSBoYXZlIGdlbmVyYXRlZCBhIGN1c3RvbSBpbWFnZSAoZm9yIGV4YW1wbGUsIHRvIHByb3ZpZGUgYSBkYXRhYmFzZSBzZXJ2ZXIgZHJpdmVyKSwgeW91IGNhbiBjaGFuZ2UgdGhpcyBwYXJhbWV0ZXIgdG8gdXNlIGl0LgogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogc3RyaW5nCiAgZGVmYXVsdDogcmhwYW03NC1raWVzZXJ2ZXItb3BlbnNoaWZ0CiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfdXNlcjogJl9hcGJfa2llc2VydmVyX3VzZXIKICBuYW1lOiBhcGJfa2llc2VydmVyX3Vz\
ZXIKICB0aXRsZTogUHJvY2VzcyBTZXJ2ZXIgVXNlcm5hbWUKICBkZXNjcmlwdGlvbjogVXNlciB0byBpbnRlcmFjdCB3aXRoIHRoZSBQcm9jZXNzIFNlcnZlciB1c2luZyB0aGUgUkVTVCBBUEkKICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IGV4ZWN1dGlvblVzZXIKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9wd2Q6ICZfYXBiX2tpZXNlcnZlcl9wd2QKICBuYW1lOiBhcGJfa2llc2VydmVyX3B3ZAogIHRpdGxlOiBQcm9jZXNzIFNlcnZlciBQYXNzd29yZAogIGRlc2NyaXB0aW9uOiBVc2VyIHBhc3N3b3JkIHRvIGludGVyYWN0IHdpdGggdGhlIFByb2Nlc3MgU2VydmVyIHVzaW5nIHRoZSBSRVNUIEFQSS4g\
R2VuZXJhdGVkIGlmIGVtcHR5CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX3NlY3JldF9uYW1lOiAmX2FwYl9raWVzZXJ2ZXJfc2VjcmV0X25hbWUKICA8PDogKl9hcGJfc2VjcmV0X25hbWUKICBuYW1lOiBhcGJfa2llc2VydmVyX3NlY3JldF9uYW1lCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfbmFtZTogJl9hcGJfa2llc2VydmVyX2tleXN0b3JlX25hbWUKICA8PDogKl9hcGJfa2V5c3RvcmVfbmFtZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfbmFtZQogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3Mg\
U2VydmVyCl9hcGJfa2llc2VydmVyX2tleXN0b3JlX2FsaWFzOiAmX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfYWxpYXMKICA8PDogKl9hcGJfa2V5c3RvcmVfYWxpYXMKICBuYW1lOiBhcGJfa2llc2VydmVyX2tleXN0b3JlX2FsaWFzCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfcHdkOiAmX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfcHdkCiAgPDw6ICpfYXBiX2tleXN0b3JlX3B3ZAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfcHdkCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfaG9zdG5hbWU6ICZfYXBiX2tpZXNlcnZlcl9ob3N0bmFtZQogIDw8OiAqX2FwYl9ob3N0bmFt\
ZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfaG9zdG5hbWUKICBkZXNjcmlwdGlvbjogUHVibGljIGhvc3RuYW1lIGZvciBQcm9jZXNzIFNlcnZlci4gR2VuZXJhdGVkIGlmIGVtcHR5Cl9hcGJfa2llc2VydmVyX3N0YXJ0dXBfc3RyYXRlZ3k6ICZfYXBiX2tpZXNlcnZlcl9zdGFydHVwX3N0cmF0ZWd5CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9zdGFydHVwX3N0cmF0ZWd5CiAgdGl0bGU6IFN0YXJ0dXAgU3RyYXRlZ3kKICBkZXNjcmlwdGlvbjogIldoZW4gc2V0IHRvIE9wZW5TaGlmdFN0YXJ0dXBTdHJhdGVneSwgYWxsb3dzIFByb2Nlc3MgU2VydmVyIHRvIHN0YXJ0IHVwIGluZGVwZW5kZW50bHkgdXNlZCBzaGFyZWQgc3RhdGUgZnJvbSBPcGVuU2hpZnQgQVBJIHNlcnZpY2UuIFRo\
ZSBPcGVuU2hpZnRTdGFydHVwU3RyYXRlZ3kgc3RyYXRlZ3kgaXMgc3RpbGwgVGVjaG5vbG9neSBQcmV2aWV3LiBEZWZhdWx0OiBDb250cm9sbGVyQmFzZWRTdGFydHVwU3RyYXRlZ3kiCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBlbnVtCiAgZW51bTogWydDb250cm9sbGVyQmFzZWRTdGFydHVwU3RyYXRlZ3knLCAnT3BlblNoaWZ0U3RhcnR1cFN0cmF0ZWd5J10KICBkZWZhdWx0OiBPcGVuU2hpZnRTdGFydHVwU3RyYXRlZ3kKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9wcm9tZXRoZXVzX2V4dF9kaXNhYmxlZDogJl9hcGJfa2llc2VydmVyX3Byb21ldGhldXNfZXh0X2Rpc2FibGVkCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9wcm9tZXRo\
ZXVzX2V4dF9kaXNhYmxlZAogIHRpdGxlOiBQcm9tZXRoZXVzIFNlcnZlciBFeHRlbnNpb24gRGlzYWJsZWQKICBkZXNjcmlwdGlvbjogSWYgdW5jaGVja2VkLCB0aGUgcHJvbWV0aGV1cyBzZXJ2ZXIgZXh0ZW5zaW9uIHdpbGwgYmUgZW5hYmxlZC4gKFNldHMgdGhlIG9yZy5raWUucHJvbWV0aGV1cy5zZXJ2ZXIuZXh0LmRpc2FibGVkIHN5c3RlbSBwcm9wZXJ0eSkKICByZXF1aXJlZDogZmFsc2UKICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDogdHJ1ZQogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX2RiX3R5cGU6ICZfYXBiX2tpZXNlcnZlcl9kYl90eXBlCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9kYl90eXBlCiAgdGl0bGU6IERhdGFiYXNl\
IFR5cGUKICBkZXNjcmlwdGlvbjogRGF0YWJhc2UgVHlwZSB0byBwZXJzaXN0IHRoZSBQcm9jZXNzIFNlcnZlciBydW50aW1lIGluZm9ybWF0aW9uLiBETyBOT1QgVVNFIEgyIGZvciBkZXBsb3lpbmcgbW9yZSB0aGFuIDEgaW5zdGFuY2Ugb2YgUHJvY2VzcyBTZXJ2ZXIuIEZvciBIMiwgUG9zdGdyZVNRTCwgYW5kIE15U1FMIHRoZSBkYXRhYmFzZSBzZXJ2ZXIgd2lsbCBiZSBkZXBsb3llZCBpbiBhIHBvZC4gVG8gdXNlIGEgZGF0YWJhc2Ugc2VydmVyIHRoYXQgaXMgZGVwbG95ZWQgZWxzZXdoZXJlLCBzZWxlY3QgRXh0ZXJuYWwuCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBlbnVtCiAgZW51bTogWyAnSDInLCAnUG9zdGdyZVNRTCcsICdNeVNRTCcsICdFeHRlcm5hbCcgXQog\
IGRlZmF1bHQ6IFBvc3RncmVTUUwKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9kYl9zaXplOiAmX2FwYl9raWVzZXJ2ZXJfZGJfc2l6ZQogIDw8OiAqX2FwYl92b2x1bWVfc2l6ZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfZGJfc2l6ZQogIHRpdGxlOiBEYXRhYmFzZSBTdG9yYWdlIFNpemUKICBkZXNjcmlwdGlvbjogUGVyc2lzdGVudCBWb2x1bWUgQ2xhaW0gc2l6ZSB0byBjcmVhdGUgZm9yIHRoZSBEYXRhYmFzZS4gRm9yIGV4YW1wbGUsIDFHaS4gSWdub3JlZCBpZiBFeHRlcm5hbCBpcyBzZWxlY3RlZAogIGRlZmF1bHQ6IDFHaQogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2Ry\
aXZlcjogJl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RyaXZlcgogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZHJpdmVyCiAgdGl0bGU6IERyaXZlciBuYW1lCiAgZGVzY3JpcHRpb246IERhdGFiYXNlIGRyaXZlciB0eXBlLiBSZXF1aXJlZCBmb3IgRXh0ZXJuYWwgZGF0YWJhc2UuIEZvciBleGFtcGxlLCBteXNxbCBvciBwb3N0Z3Jlc3FsCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogRXh0ZXJuYWwgRGF0YWJhc2UgKG9ubHkgaWYgRGF0YWJhc2UgdHlwZSBpcyBFeHRlcm5hbCkKX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZGlhbGVjdDogJl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RpYWxlY3QKICBuYW1lOiBhcGJfa2llc2VydmVy\
X2V4dGVybmFsX2RiX2RpYWxlY3QKICB0aXRsZTogRGlhbGVjdCBjbGFzcwogIGRlc2NyaXB0aW9uOiBIaWJlcm5hdGUgZGlhbGVjdCBjbGFzcyB0byB1c2UuIFJlcXVpcmVkIGZvciBFeHRlcm5hbCBkYXRhYmFzZS4gRm9yIGV4YW1wbGUsIG9yZy5oaWJlcm5hdGUuZGlhbGVjdC5NeVNRTDU3RGlhbGVjdAogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEV4dGVybmFsIERhdGFiYXNlIChvbmx5IGlmIERhdGFiYXNlIHR5cGUgaXMgRXh0ZXJuYWwpCl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2hvc3Q6ICZfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9ob3N0CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9ob3N0CiAgdGl0bGU6IEhvc3QKICBkZXNj\
cmlwdGlvbjogRXh0ZXJuYWwgZGF0YWJhc2Ugc2VydmVyIGhvc3QuIFJlcXVpcmVkIGZvciBFeHRlcm5hbCBkYXRhYmFzZS4gRm9yIGV4YW1wbGUsIDEyNy4wLjAuMQogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEV4dGVybmFsIERhdGFiYXNlIChvbmx5IGlmIERhdGFiYXNlIHR5cGUgaXMgRXh0ZXJuYWwpCl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3BvcnQ6ICZfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9wb3J0CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9wb3J0CiAgdGl0bGU6IFBvcnQKICBkZXNjcmlwdGlvbjogRXh0ZXJuYWwgZGF0YWJhc2Ugc2VydmVyIHBvcnQuIFJlcXVpcmVkIGZvciBFeHRlcm5hbCBkYXRhYmFzZS4gRm9yIGV4\
YW1wbGUsIDMzMDYKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBFeHRlcm5hbCBEYXRhYmFzZSAob25seSBpZiBEYXRhYmFzZSB0eXBlIGlzIEV4dGVybmFsKQpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9uYW1lOiAmX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfbmFtZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfbmFtZQogIHRpdGxlOiBEYXRhYmFzZSBOYW1lCiAgZGVzY3JpcHRpb246IEV4dGVybmFsIERhdGFiYXNlIG5hbWUuIFJlcXVpcmVkIGZvciBFeHRlcm5hbCBkYXRhYmFzZS4gRm9yIGV4YW1wbGUsIHJocGFtCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogRXh0ZXJuYWwgRGF0YWJhc2UgKG9ubHkgaWYgRGF0YWJhc2Ug\
dHlwZSBpcyBFeHRlcm5hbCkKX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfdXJsOiAmX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfdXJsCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl91cmwKICB0aXRsZTogRGF0YWJhc2UgSkRCQyBVUkwKICBkZXNjcmlwdGlvbjogRXh0ZXJuYWwgZGF0YWJhc2Ugc2VydmVyIEpEQkMgVVJMLiBSZXF1aXJlZCBmb3IgRXh0ZXJuYWwgZGF0YWJhc2UuIEZvciBleGFtcGxlLCBqZGJjOm15c3FsOjEyNy4wLjAuMTozMzA2L3JocGFtCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogRXh0ZXJuYWwgRGF0YWJhc2UgKG9ubHkgaWYgRGF0YWJhc2UgdHlwZSBpcyBFeHRlcm5hbCkKCiMgSk1TIGVudnMKX2FwYl9lbmFibGVf\
a2llc2VydmVyX2ptc19pbnRlZ3JhdGlvbjogJl9hcGJfZW5hYmxlX2tpZXNlcnZlcl9qbXNfaW50ZWdyYXRpb24KICBuYW1lOiBhcGJfZW5hYmxlX2tpZXNlcnZlcl9qbXNfaW50ZWdyYXRpb24KICB0aXRsZTogRW5hYmxlIEpNUyBpbnRlZ3JhdGlvbgogIGRlc2NyaXB0aW9uOiBXaGVuIHNldCB0byB0cnVlIHdpbGwgY29uZmlndXJlIHRoZSBLSUUgU2VydmVyIHdpdGggSk1TIGludGVncmF0aW9uLCBpZiBubyBjb25maWd1cmF0aW9uIGlzIGFkZGVkLCB0aGUgZGVmYXVsdCB3aWxsIGJlIHVzZWQuCiAgdHlwZTogYm9vbGVhbgogIGRlZmF1bHQ6IGZhbHNlCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcjogJl9hcGJf\
a2llc2VydmVyX2ptc19leGVjdXRvcgogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yCiAgdGl0bGU6IEVuYWJsZSBKTVMgRXhlY3V0b3IKICBkZXNjcmlwdGlvbjogRW5hYmxlcyB0aGUgSk1TIGV4ZWN1dG9yLCB1bmNoZWNrIHRvIGRpc2FibGUgaXQuCiAgdHlwZTogYm9vbGVhbgogIGRlZmF1bHQ6IHRydWUKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2V4ZWN1dG9yOiAmX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2V4ZWN1dG9yCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfZXhlY3V0b3IKICB0aXRsZTogS0lFIFNlcnZlciBKTVMgRXhlY3V0b3IgUXVldWUKICBkZXNjcmlwdGlvbjogSk5E\
SSBuYW1lIG9mIGV4ZWN1dG9yIHF1ZXVlIGZvciBKTVMsIGV4YW1wbGUgcXVldWUvQ1VTVE9NLktJRS5TRVJWRVIuRVhFQ1VUT1IsIGRlZmF1bHQgaXMgcXVldWUvS0lFLlNFUlZFUi5FWEVDVVRPUi4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yX3RyYW5zYWN0ZWQ6ICZfYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3JfdHJhbnNhY3RlZAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yX3RyYW5zYWN0ZWQKICB0aXRsZTogS0lFIFNlcnZlciBUcmFuc2FjdGVkIEV4ZWN1dG9yCiAgZGVzY3JpcHRpb246IEVuYWJsZSB0cmFuc2FjdGlvbnMgZm9yIEpNUyBleGVjdXRvciwgZGlz\
YWJsZWQgYnkgZGVmYXVsdC4KICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDogdHJ1ZQogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVxdWVzdDogJl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXF1ZXN0CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVxdWVzdAogIHRpdGxlOiBLSUUgU2VydmVyIEpNUyBSZXF1ZXN0IFF1ZXVlCiAgZGVzY3JpcHRpb246IEpOREkgbmFtZSBvZiByZXF1ZXN0IHF1ZXVlIGZvciBKTVMsIGV4YW1wbGUgcXVldWUvQ1VTVE9NLktJRS5TRVJWRVIuUkVRVUVTVCwgZGVmYXVsdCBpcyBxdWV1ZS9LSUUuU0VSVkVSLlJFUVVFU1QuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9n\
cm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXNwb25zZTogJl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXNwb25zZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3Jlc3BvbnNlCiAgdGl0bGU6IEtJRSBTZXJ2ZXIgSk1TIFJlc3BvbnNlIFF1ZXVlCiAgZGVzY3JpcHRpb246IEpOREkgbmFtZSBvZiByZXNwb25zZSBxdWV1ZSBmb3IgSk1TLCBleGFtcGxlIHF1ZXVlL0NVU1RPTS5LSUUuU0VSVkVSLlJFU1BPTlNFLCBkZWZhdWx0IGlzIHF1ZXVlL0tJRS5TRVJWRVIuUkVTUE9OU0UuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfc2lnbmFs\
OiAmX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9zaWduYWwKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19lbmFibGVfc2lnbmFsCiAgdGl0bGU6IEVuYWJsZSBLSUUgU2VydmVyIEpNUyBTaWduYWwgUXVldWUKICBkZXNjcmlwdGlvbjogRW5hYmxlIHRoZSBTaWduYWwgY29uZmlndXJhdGlvbiB0aHJvdWdoIEpNUy4gRGVmYXVsdCBpcyBmYWxzZS4KICB0eXBlOiBib29sZWFuCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9zaWduYWw6ICZfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfc2lnbmFsCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfc2lnbmFsCiAgdGl0bGU6IEtJRSBTZXJ2ZXIgSk1TIFNpZ25hbCBR\
dWV1ZQogIGRlc2NyaXB0aW9uOiBKTkRJIG5hbWUgb2Ygc2lnbmFsIHF1ZXVlIGZvciBKTVMsIGV4YW1wbGUgcXVldWUvQ1VTVE9NLktJRS5TRVJWRVIuU0lHTkFMLCBkZWZhdWx0IGlzIHF1ZXVlL0tJRS5TRVJWRVIuU0lHTkFMLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX2F1ZGl0OiAmX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9hdWRpdAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9hdWRpdAogIHRpdGxlOiBFbmFibGUgS0lFIFNlcnZlciBKTVMgQXVkaXQKICBkZXNjcmlwdGlvbjogRW5hYmxlIHRoZSBBdWRpdCBsb2dnaW5nIHRocm91Z2ggSk1TLiBEZWZhdWx0IGlz\
IGZhbHNlLgogIHR5cGU6IGJvb2xlYW4KICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2F1ZGl0OiAmX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2F1ZGl0CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfYXVkaXQKICB0aXRsZTogS0lFIFNlcnZlciBKTVMgQXVkaXQgUXVldWUKICBkZXNjcmlwdGlvbjogSk5ESSBuYW1lIG9mIGF1ZGl0IGxvZ2dpbmcgcXVldWUgZm9yIEpNUywgZXhhbXBsZSBxdWV1ZS9DVVNUT00uS0lFLlNFUlZFUi5BVURJVCwgZGVmYXVsdCBpcyBxdWV1ZS9LSUUuU0VSVkVSLkFVRElULgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNl\
cnZlcl9qbXNfYXVkaXRfdHJhbnNhY3RlZDogJl9hcGJfa2llc2VydmVyX2ptc19hdWRpdF90cmFuc2FjdGVkCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfYXVkaXRfdHJhbnNhY3RlZAogIHRpdGxlOiBLSUUgU2VydmVyIEpNUyBBdWRpdCBsb2dnZXIgdHJhbnNhY3RlZAogIGRlc2NyaXB0aW9uOiBEZXRlcm1pbmVzIGlmIEpNUyBzZXNzaW9uIGlzIHRyYW5zYWN0ZWQgb3Igbm90IC0gZGVmYXVsdCB0cnVlLgogIHR5cGU6IGJvb2xlYW4KICBkZWZhdWx0OiB0cnVlCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc191c2VybmFtZTogJl9hcGJfa2llc2VydmVyX2ptc191c2VybmFtZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX3Vz\
ZXJuYW1lCiAgdGl0bGU6IEFNUSBVc2VybmFtZQogIGRlc2NyaXB0aW9uOiBBTVEgYnJva2VyIHVzZXJuYW1lIHRvIGNvbm5lY3QgZG8gdGhlIEFNUSwgZ2VuZXJhdGVkIGlmIGVtcHR5LgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfcGFzc3dvcmQ6ICZfYXBiX2tpZXNlcnZlcl9qbXNfcGFzc3dvcmQKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19wYXNzd29yZAogIHRpdGxlOiBBTVEgUGFzc3dvcmQKICBkZXNjcmlwdGlvbjogQU1RIGJyb2tlciBwYXNzd29yZCB0byBjb25uZWN0IGRvIHRoZSBBTVEsIGdlbmVyYXRlZCBpZiBlbXB0eS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBKTVMg\
SW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX2FtcV9xdWV1ZXM6ICZfYXBiX2tpZXNlcnZlcl9qbXNfYW1xX3F1ZXVlcwogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX2FtcV9xdWV1ZXMKICB0aXRsZTogQU1RIFF1ZXVlcwogIGRlc2NyaXB0aW9uOiBBTVEgYnJva2VyIGJyb2tlciBjb21tYSBzZXBhcmF0ZWQgcXVldWVzLCBpZiBzZXQgdGhlIFFVRVVFUyBuYW1lIHdpbGwgYmUgaWdub3JlZCwgaWYgZW1wdHkgdGhlIHZhbHVlcyBmcm9tIGRlZmF1bHQgcXVldWVzIHdpbGwgYmUgdXNlZC4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KCiMgRXh0ZXJuYWwgU2VydmljZXMgSW50ZWdyYXRpb24KX2FwYl9zdmM6ICZfYXBiX3N2Ywog\
IHRpdGxlOiBTZXJ2aWNlIG5hbWUKICBkZXNjcmlwdGlvbjogTmFtZSBvZiB0aGUgU2VydmljZQogIHR5cGU6IHN0cmluZwpfYXBiX2hvc3Q6ICZfYXBiX2hvc3QKICB0aXRsZTogSG9zdAogIGRlc2NyaXB0aW9uOiBIb3N0CiAgdHlwZTogc3RyaW5nCl9hcGJfcG9ydDogJl9hcGJfcG9ydAogIHRpdGxlOiBIb3N0IHBvcnQKICBkZXNjcmlwdGlvbjogSG9zdCBwb3J0CiAgdHlwZTogc3RyaW5nCl9hcGJfcHJvdG9jb2xfdHlwZTogJl9hcGJfcHJvdG9jb2xfdHlwZQogIHRpdGxlOiBIb3N0IFByb3RvY29sCiAgZGVzY3JpcHRpb246IEhvc3QgcHJvdG9jb2wgKGh0dHAvaHR0cHMpCiAgdHlwZTogZW51bQogIGVudW06IFsgJ2h0dHAnLCAnaHR0cHMnIF0KIyBSb3V0ZXIKX2FwYl9y\
b3V0ZXJfc3ZjOiAmX2FwYl9yb3V0ZXJfc3ZjCiAgPDw6ICpfYXBiX3N2YwogIG5hbWU6IGFwYl9yb3V0ZXJfc3ZjCiAgZGlzcGxheV9ncm91cDogUm91dGVyIEludGVncmF0aW9uCl9hcGJfcm91dGVyX2hvc3Q6ICZfYXBiX3JvdXRlcl9ob3N0CiAgPDw6ICpfYXBiX2hvc3QKICBuYW1lOiBhcGJfcm91dGVyX2hvc3QKICBkaXNwbGF5X2dyb3VwOiBSb3V0ZXIgSW50ZWdyYXRpb24KX2FwYl9yb3V0ZXJfcG9ydDogJl9hcGJfcm91dGVyX3BvcnQKICA8PDogKl9hcGJfcG9ydAogIG5hbWU6IGFwYl9yb3V0ZXJfcG9ydAogIGRpc3BsYXlfZ3JvdXA6IFJvdXRlciBJbnRlZ3JhdGlvbgpfYXBiX3JvdXRlcl9wcm90b2NvbDogJl9hcGJfcm91dGVyX3Byb3RvY29sCiAgPDw6ICpfYXBi\
X3Byb3RvY29sX3R5cGUKICBuYW1lOiBhcGJfcm91dGVyX3Byb3RvY29sCiAgZGlzcGxheV9ncm91cDogUm91dGVyIEludGVncmF0aW9uCiMgQ29udHJvbGxlcgpfYXBiX2NvbnRyb2xsZXJfc3ZjOiAmX2FwYl9jb250cm9sbGVyX3N2YwogIDw8OiAqX2FwYl9zdmMKICBuYW1lOiBhcGJfY29udHJvbGxlcl9zdmMKICBkaXNwbGF5X2dyb3VwOiBDb250cm9sbGVyIEludGVncmF0aW9uCl9hcGJfY29udHJvbGxlcl9ob3N0OiAmX2FwYl9jb250cm9sbGVyX2hvc3QKICA8PDogKl9hcGJfaG9zdAogIG5hbWU6IGFwYl9jb250cm9sbGVyX2hvc3QKICBkaXNwbGF5X2dyb3VwOiBDb250cm9sbGVyIEludGVncmF0aW9uCl9hcGJfY29udHJvbGxlcl9wb3J0OiAmX2FwYl9jb250cm9sbGVy\
X3BvcnQKICA8PDogKl9hcGJfcG9ydAogIG5hbWU6IGFwYl9jb250cm9sbGVyX3BvcnQKICBkaXNwbGF5X2dyb3VwOiBDb250cm9sbGVyIEludGVncmF0aW9uCl9hcGJfY29udHJvbGxlcl9wcm90b2NvbDogJl9hcGJfY29udHJvbGxlcl9wcm90b2NvbAogIDw8OiAqX2FwYl9wcm90b2NvbF90eXBlCiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfcHJvdG9jb2wKICBkaXNwbGF5X2dyb3VwOiBDb250cm9sbGVyIEludGVncmF0aW9uCl9hcGJfY29udHJvbGxlcl90b2tlbjogJl9hcGJfY29udHJvbGxlcl90b2tlbgogIG5hbWU6IGFwYl9jb250cm9sbGVyX3Rva2VuCiAgdGl0bGU6IENvbnRyb2xsZXIgQXV0aCBUb2tlbgogIGRlc2NyaXB0aW9uOiBDb250cm9sbGVyIGF1dGhlbnRpY2F0\
aW9uIFRva2VuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogQ29udHJvbGxlciBJbnRlZ3JhdGlvbgpfYXBiX2NvbnRyb2xsZXJfdXNlcjogJl9hcGJfY29udHJvbGxlcl91c2VyCiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfdXNlcgogIHRpdGxlOiBDb250cm9sbGVyIFVzZXJuYW1lCiAgZGVzY3JpcHRpb246IFVzZXJuYW1lIHRvIGFjY2VzcyB0aGUgQ29udHJvbGxlcgogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IG1vbml0b3JVc2VyCl9hcGJfY29udHJvbGxlcl9wd2Q6ICZfYXBiX2NvbnRyb2xsZXJfcHdkCiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfcHdkCiAgdGl0bGU6IENvbnRyb2xsZXIgUGFzc3dvcmQKICBkZXNjcmlwdGlvbjogVXNlciBwYXNzd29yZCB0byBh\
Y2Nlc3MgdGhlIENvbnRyb2xsZXIuIEdlbmVyYXRlZCBpZiBlbXB0eS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X3R5cGU6IHBhc3N3b3JkCiMgUkgtU1NPCl9hcGJfc3NvX3VybDogJl9hcGJfc3NvX3VybAogIG5hbWU6IGFwYl9zc29fdXJsCiAgdGl0bGU6IFJILVNTTyBVUkwKICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiAoU1NPKSBVUkwuIExlYXZlIGVtcHR5IHRvIGF2b2lkIHVzaW5nIFNTTy4gRm9yIGV4YW1wbGUsIGh0dHBzOi8vcmhzc28uZXhhbXBsZS5jb20vYXV0aAogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IFJlZCBIYXQgLSBTaW5nbGUgU2lnbi1PbiAoT3B0aW9uYWwpCl9hcGJfc3NvX3JlYWxtOiAmX2FwYl9zc29fcmVhbG0K\
ICBuYW1lOiBhcGJfc3NvX3JlYWxtCiAgdGl0bGU6IFJILVNTTyBSZWFsbQogIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIFJlYWxtIG5hbWUuIEZvciBleGFtcGxlLCByaHBhbQogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IFJlZCBIYXQgLSBTaW5nbGUgU2lnbi1PbiAoT3B0aW9uYWwpCl9hcGJfc3NvX2NsaWVudDogJl9hcGJfc3NvX2NsaWVudAogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IFJlZCBIYXQgLSBTaW5nbGUgU2lnbi1PbiAoT3B0aW9uYWwpCl9hcGJfc3NvX2NsaWVudF9zZWNyZXQ6ICZfYXBiX3Nzb19jbGllbnRfc2VjcmV0CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAogIGRpc3BsYXlfZ3Jv\
dXA6IFJlZCBIYXQgLSBTaW5nbGUgU2lnbi1PbiAoT3B0aW9uYWwpCl9hcGJfc3NvX3VzZXI6ICZfYXBiX3Nzb191c2VyCiAgbmFtZTogYXBiX3Nzb191c2VyCiAgdGl0bGU6IFJILVNTTyBBZG1pbiBVc2VyCiAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gVXNlciB0byBiZSB1c2VkIHRvIGNyZWF0ZSB0aGUgQ2xpZW50IGlmIGl0IGRvZXNuJ3QgZXhpc3QuIFRoZSB1c2VyIG11c3QgYmUgYWJsZSB0byBjcmVhdGUgc2VjcmV0cyBvbiB0aGUgZ2l2ZW4gcmVhbG0uCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogUmVkIEhhdCAtIFNpbmdsZSBTaWduLU9uIChPcHRpb25hbCkKX2FwYl9zc29fcHdkOiAmX2FwYl9zc29fcHdkCiAgbmFtZTogYXBiX3Nz\
b19wd2QKICB0aXRsZTogUkgtU1NPIEFkbWluIFBhc3N3b3JkCiAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gUGFzc3dvcmQgdG8gdXNlIHRvIGNyZWF0ZSB0aGUgQ2xpZW50IGlmIGl0IGRvZXNuJ3QgZXhpc3QuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAogIGRpc3BsYXlfZ3JvdXA6IFJlZCBIYXQgLSBTaW5nbGUgU2lnbi1PbiAoT3B0aW9uYWwpCl9hcGJfc3NvX2Rpc2FibGVfc3NsX2NlcnRfdmFsaWRhdGlvbjogJl9hcGJfc3NvX2Rpc2FibGVfc3NsX2NlcnRfdmFsaWRhdGlvbgogIG5hbWU6IGFwYl9zc29fZGlzYWJsZV9zc2xfY2VydF92YWxpZGF0aW9uCiAgdGl0bGU6IFJILVNTTyBEaXNhYmxlIFNTTCBWYWxpZGF0aW9u\
CiAgZGVzY3JpcHRpb246IERpc2FibGUgU1NMIENlcnRpZmljYXRlIFZhbGlkYXRpb24gd2hlbiBjb25uZWN0aW5nIHRvIFJILVNTTwogIHR5cGU6IGJvb2xlYW4KICBkaXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlvbmFsKQpfYXBiX3Nzb19wcmluY2lwYWxfYXR0cmlidXRlOiAmX2FwYl9zc29fcHJpbmNpcGFsX2F0dHJpYnV0ZQogIG5hbWU6IGFwYl9zc29fcHJpbmNpcGFsX2F0dHJpYnV0ZQogIHRpdGxlOiBSSC1TU08gUHJpbmNpcGFsIEF0dHJpYnV0ZQogIGRlc2NyaXB0aW9uOiBQcmluY2lwYWwgYXR0cmlidXRlIHRvIHVzZSBhcyB1c2VybmFtZQogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IFJlZCBIYXQgLSBTaW5nbGUgU2ln\
bi1PbiAoT3B0aW9uYWwpCiMgTERBUCBBdXRoCl9hcGJfYXV0aF9sZGFwX3VybDogJl9hcGJfYXV0aF9sZGFwX3VybAogIG5hbWU6IGFwYl9hdXRoX2xkYXBfdXJsCiAgdGl0bGU6IExEQVAgRW5kcG9pbnQKICBkZXNjcmlwdGlvbjogTERBUCBFbmRwb2ludCB0byBjb25uZWN0IGZvciBhdXRoZW50aWNhdGlvbi4gZS5nLiAibGRhcDovL215bGRhcC5leGFtcGxlLmNvbSIKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfYmluZF9kbjogJl9hcGJfYXV0aF9sZGFwX2JpbmRfZG4KICBuYW1lOiBhcGJfYXV0aF9sZGFwX2JpbmRfZG4KICB0aXRsZTogTERBUCBCaW5kIEROCiAgZGVzY3JpcHRpb246IEJpbmQgRE4gdXNl\
ZCBmb3IgYXV0aGVudGljYXRpb24uIGUuZy4gInVpZD1hZG1pbixvdT11c2VycyxvdT1leG1hbXBsZSxvdT1jb20iCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX2JpbmRfY3JlZGVudGlhbDogJl9hcGJfYXV0aF9sZGFwX2JpbmRfY3JlZGVudGlhbAogIG5hbWU6IGFwYl9hdXRoX2xkYXBfYmluZF9jcmVkZW50aWFsCiAgdGl0bGU6IExEQVAgQmluZCBDcmVkZW50aWFscwogIGRlc2NyaXB0aW9uOiBMREFQIENyZWRlbnRpYWxzIHVzZWQgZm9yIGF1dGhlbnRpY2F0aW9uCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1\
dGhfbGRhcF9qYWFzX3NlY3VyaXR5X2RvbWFpbjogJl9hcGJfYXV0aF9sZGFwX2phYXNfc2VjdXJpdHlfZG9tYWluCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9qYWFzX3NlY3VyaXR5X2RvbWFpbgogIHRpdGxlOiBMREFQIEpBQVMgU2VjdXJpdHkgRG9tYWluCiAgZGVzY3JpcHRpb246IFRoZSBKTVggT2JqZWN0TmFtZSBvZiB0aGUgSmFhc1NlY3VyaXR5RG9tYWluIHVzZWQgdG8gZGVjcnlwdCB0aGUgcGFzc3dvcmQuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX2Jhc2VfY3R4X2RuOiAmX2FwYl9hdXRoX2xkYXBfYmFzZV9jdHhfZG4KICBuYW1lOiBhcGJfYXV0aF9sZGFwX2Jhc2VfY3R4X2RuCiAgdGl0bGU6IExE\
QVAgQmFzZSBETgogIGRlc2NyaXB0aW9uOiBMREFQIEJhc2UgRE4gb2YgdGhlIHRvcC1sZXZlbCBjb250ZXh0IHRvIGJlZ2luIHRoZSB1c2VyIHNlYXJjaC4gZS5nLiAib3U9dXNlcnMsb3U9ZXhhbXBsZSxvdT1jb20iCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX2Jhc2VfZmlsdGVyOiAmX2FwYl9hdXRoX2xkYXBfYmFzZV9maWx0ZXIKICBuYW1lOiBhcGJfYXV0aF9sZGFwX2Jhc2VfZmlsdGVyCiAgdGl0bGU6IExEQVAgQmFzZSBTZWFyY2ggZmlsdGVyCiAgZGVzY3JpcHRpb246IExEQVAgc2VhcmNoIGZpbHRlciB1c2VkIHRvIGxvY2F0ZSB0aGUgY29udGV4dCBvZiB0aGUgdXNlciB0byBhdXRoZW50aWNhdGUu\
IFRoZSBpbnB1dCB1c2VybmFtZSBvciB1c2VyRE4gb2J0YWluZWQgZnJvbSB0aGUgbG9naW4gbW9kdWxlIGNhbGxiYWNrIGlzIHN1YnN0aXR1dGVkIGludG8gdGhlIGZpbHRlciBhbnl3aGVyZSBhIHswfSBleHByZXNzaW9uIGlzIHVzZWQuIEEgY29tbW9uIGV4YW1wbGUgZm9yIHRoZSBzZWFyY2ggZmlsdGVyIGlzICh1aWQ9ezB9KS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3Njb3BlOiAmX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3Njb3BlCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9zZWFyY2hfc2NvcGUKICB0aXRsZTogTERBUCBTZWFyY2ggc2NvcGUKICBkZXNjcmlwdGlvbjogVGhlIHNlYXJjaCBz\
Y29wZSB0byB1c2UuCiAgdHlwZTogZW51bQogIGVudW06IFsgJ1NVQlRSRUVfU0NPUEUnLCAnT0JKRUNUX1NDT1BFJywgJ09ORUxFVkVMX1NDT1BFJyBdCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3NlYXJjaF90aW1lX2xpbWl0OiAmX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3RpbWVfbGltaXQKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3NlYXJjaF90aW1lX2xpbWl0CiAgdGl0bGU6IExEQVAgU2VhcmNoIHRpbWUgbGltaXQKICBkZXNjcmlwdGlvbjogVGhlIHRpbWVvdXQgaW4gbWlsbGlzZWNvbmRzIGZvciB1c2VyIG9yIHJvbGUgc2VhcmNoZXMuIGUuZy4gIjEwMDAwIgogIHR5cGU6IG51bWJlcgogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9w\
dGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9kaXN0aW5ndWlzaGVkX25hbWVfYXR0cmlidXRlOiAmX2FwYl9hdXRoX2xkYXBfZGlzdGluZ3Vpc2hlZF9uYW1lX2F0dHJpYnV0ZQogIG5hbWU6IGFwYl9hdXRoX2xkYXBfZGlzdGluZ3Vpc2hlZF9uYW1lX2F0dHJpYnV0ZQogIHRpdGxlOiBMREFQIEROIGF0dHJpYnV0ZQogIGRlc2NyaXB0aW9uOiBUaGUgbmFtZSBvZiB0aGUgYXR0cmlidXRlIGluIHRoZSB1c2VyIGVudHJ5IHRoYXQgY29udGFpbnMgdGhlIEROIG9mIHRoZSB1c2VyLiBUaGlzIG1heSBiZSBuZWNlc3NhcnkgaWYgdGhlIEROIG9mIHRoZSB1c2VyIGl0c2VsZiBjb250YWlucyBzcGVjaWFsIGNoYXJhY3RlcnMsIGJhY2tzbGFzaCBmb3IgZXhhbXBsZSwgdGhhdCBwcmV2ZW50\
IGNvcnJlY3QgdXNlciBtYXBwaW5nLiBJZiB0aGUgYXR0cmlidXRlIGRvZXMgbm90IGV4aXN0LCB0aGUgZW50cnnigJlzIEROIGlzIHVzZWQuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3BhcnNlX3VzZXJuYW1lOiAmX2FwYl9hdXRoX2xkYXBfcGFyc2VfdXNlcm5hbWUKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3BhcnNlX3VzZXJuYW1lCiAgdGl0bGU6IExEQVAgUGFyc2UgdXNlcm5hbWUKICBkZXNjcmlwdGlvbjogQSBmbGFnIGluZGljYXRpbmcgaWYgdGhlIEROIGlzIHRvIGJlIHBhcnNlZCBmb3IgdGhlIHVzZXJuYW1lLiBJZiBzZXQgdG8gdHJ1ZSwgdGhlIEROIGlzIHBhcnNlZCBmb3IgdGhlIHVzZXJuYW1l\
LiBJZiBzZXQgdG8gZmFsc2UgdGhlIEROIGlzIG5vdCBwYXJzZWQgZm9yIHRoZSB1c2VybmFtZS4gVGhpcyBvcHRpb24gaXMgdXNlZCB0b2dldGhlciB3aXRoIHVzZXJuYW1lQmVnaW5TdHJpbmcgYW5kIHVzZXJuYW1lRW5kU3RyaW5nLgogIHR5cGU6IGJvb2xlYW4KICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfYmVnaW5fc3RyaW5nOiAmX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfYmVnaW5fc3RyaW5nCiAgbmFtZTogYXBiX2F1dGhfbGRhcF91c2VybmFtZV9iZWdpbl9zdHJpbmcKICB0aXRsZTogTERBUCBVc2VybmFtZSBiZWdpbiBzdHJpbmcKICBkZXNjcmlwdGlvbjogRGVmaW5lcyB0aGUgU3RyaW5nIHdoaWNoIGlzIHRv\
IGJlIHJlbW92ZWQgZnJvbSB0aGUgc3RhcnQgb2YgdGhlIEROIHRvIHJldmVhbCB0aGUgdXNlcm5hbWUuIFRoaXMgb3B0aW9uIGlzIHVzZWQgdG9nZXRoZXIgd2l0aCB1c2VybmFtZUVuZFN0cmluZyBhbmQgb25seSB0YWtlbiBpbnRvIGFjY291bnQgaWYgcGFyc2VVc2VybmFtZSBpcyBzZXQgdG8gdHJ1ZS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfZW5kX3N0cmluZzogJl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2VuZF9zdHJpbmcKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2VuZF9zdHJpbmcKICB0aXRsZTogTERBUCBVc2VybmFtZSBlbmQgc3RyaW5nCiAgZGVzY3JpcHRpb246\
IERlZmluZXMgdGhlIFN0cmluZyB3aGljaCBpcyB0byBiZSByZW1vdmVkIGZyb20gdGhlIGVuZCBvZiB0aGUgRE4gdG8gcmV2ZWFsIHRoZSB1c2VybmFtZS4gVGhpcyBvcHRpb24gaXMgdXNlZCB0b2dldGhlciB3aXRoIHVzZXJuYW1lRW5kU3RyaW5nIGFuZCBvbmx5IHRha2VuIGludG8gYWNjb3VudCBpZiBwYXJzZVVzZXJuYW1lIGlzIHNldCB0byB0cnVlLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pZDogJl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lkCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pZAogIHRpdGxlOiBMREFQIFJvbGUgYXR0cmli\
dXRlSUQKICBkZXNjcmlwdGlvbjogTmFtZSBvZiB0aGUgYXR0cmlidXRlIGNvbnRhaW5pbmcgdGhlIHVzZXIgcm9sZXMuIGUuZy4gIm1lbWJlck9mIgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9yb2xlc19jdHhfZG46ICZfYXBiX2F1dGhfbGRhcF9yb2xlc19jdHhfZG4KICBuYW1lOiBhcGJfYXV0aF9sZGFwX3JvbGVzX2N0eF9kbgogIHRpdGxlOiBMREFQIFJvbGVzIFNlYXJjaCBETgogIGRlc2NyaXB0aW9uOiBUaGUgZml4ZWQgRE4gb2YgdGhlIGNvbnRleHQgdG8gc2VhcmNoIGZvciB1c2VyIHJvbGVzLiBUaGlzIGlzIG5vdCB0aGUgRE4gd2hlcmUgdGhlIGFjdHVhbCByb2xlcyBhcmUsIGJ1dCB0aGUgRE4g\
d2hlcmUgdGhlIG9iamVjdHMgY29udGFpbmluZyB0aGUgdXNlciByb2xlcyBhcmUuIEZvciBleGFtcGxlLCBpbiBhIE1pY3Jvc29mdCBBY3RpdmUgRGlyZWN0b3J5IHNlcnZlciwgdGhpcyBpcyB0aGUgRE4gd2hlcmUgdGhlIHVzZXIgYWNjb3VudCBpcy4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfcm9sZV9maWx0ZXI6ICZfYXBiX2F1dGhfbGRhcF9yb2xlX2ZpbHRlcgogIG5hbWU6IGFwYl9hdXRoX2xkYXBfcm9sZV9maWx0ZXIKICB0aXRsZTogTERBUCBSb2xlIHNlYXJjaCBmaWx0ZXIKICBkZXNjcmlwdGlvbjogQSBzZWFyY2ggZmlsdGVyIHVzZWQgdG8gbG9jYXRlIHRoZSByb2xlcyBhc3NvY2lhdGVkIHdp\
dGggdGhlIGF1dGhlbnRpY2F0ZWQgdXNlci4gVGhlIGlucHV0IHVzZXJuYW1lIG9yIHVzZXJETiBvYnRhaW5lZCBmcm9tIHRoZSBsb2dpbiBtb2R1bGUgY2FsbGJhY2sgaXMgc3Vic3RpdHV0ZWQgaW50byB0aGUgZmlsdGVyIGFueXdoZXJlIGEgezB9IGV4cHJlc3Npb24gaXMgdXNlZC4gVGhlIGF1dGhlbnRpY2F0ZWQgdXNlckROIGlzIHN1YnN0aXR1dGVkIGludG8gdGhlIGZpbHRlciBhbnl3aGVyZSBhIHsxfSBpcyB1c2VkLiBBbiBleGFtcGxlIHNlYXJjaCBmaWx0ZXIgdGhhdCBtYXRjaGVzIG9uIHRoZSBpbnB1dCB1c2VybmFtZSBpcyAobWVtYmVyPXswfSkuIEFuIGFsdGVybmF0aXZlIHRoYXQgbWF0Y2hlcyBvbiB0aGUgYXV0aGVudGljYXRlZCB1c2VyRE4gaXMgKG1lbWJl\
cj17MX0pLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9yb2xlX3JlY3Vyc2lvbjogJl9hcGJfYXV0aF9sZGFwX3JvbGVfcmVjdXJzaW9uCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9yb2xlX3JlY3Vyc2lvbgogIHRpdGxlOiBMREFQIFJvbGUgcmVjdXJzaW9uCiAgZGVzY3JpcHRpb246IFRoZSBudW1iZXIgb2YgbGV2ZWxzIG9mIHJlY3Vyc2lvbiB0aGUgcm9sZSBzZWFyY2ggd2lsbCBnbyBiZWxvdyBhIG1hdGNoaW5nIGNvbnRleHQuIERpc2FibGUgcmVjdXJzaW9uIGJ5IHNldHRpbmcgdGhpcyB0byAwLgogIHR5cGU6IG51bWJlcgogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRh\
cF9kZWZhdWx0X3JvbGU6ICZfYXBiX2F1dGhfbGRhcF9kZWZhdWx0X3JvbGUKICBuYW1lOiBhcGJfYXV0aF9sZGFwX2RlZmF1bHRfcm9sZQogIHRpdGxlOiBMREFQIERlZmF1bHQgcm9sZQogIGRlc2NyaXB0aW9uOiBBIHJvbGUgaW5jbHVkZWQgZm9yIGFsbCBhdXRoZW50aWNhdGVkIHVzZXJzCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3JvbGVfbmFtZV9hdHRyaWJ1dGVfaWQ6ICZfYXBiX2F1dGhfbGRhcF9yb2xlX25hbWVfYXR0cmlidXRlX2lkCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9yb2xlX25hbWVfYXR0cmlidXRlX2lkCiAgdGl0bGU6IExEQVAgUm9sZSBuYW1lIGF0dHJpYnV0ZSBJRAogIGRlc2NyaXB0\
aW9uOiBOYW1lIG9mIHRoZSBhdHRyaWJ1dGUgd2l0aGluIHRoZSByb2xlQ3R4RE4gY29udGV4dCB3aGljaCBjb250YWlucyB0aGUgcm9sZSBuYW1lLiBJZiB0aGUgcm9sZUF0dHJpYnV0ZUlzRE4gcHJvcGVydHkgaXMgc2V0IHRvIHRydWUsIHRoaXMgcHJvcGVydHkgaXMgdXNlZCB0byBmaW5kIHRoZSByb2xlIG9iamVjdOKAmXMgbmFtZSBhdHRyaWJ1dGUuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3BhcnNlX3JvbGVfbmFtZV9mcm9tX2RuOiAmX2FwYl9hdXRoX2xkYXBfcGFyc2Vfcm9sZV9uYW1lX2Zyb21fZG4KICBuYW1lOiBhcGJfYXV0aF9sZGFwX3BhcnNlX3JvbGVfbmFtZV9mcm9tX2RuCiAgdGl0bGU6\
IExEQVAgUm9sZSBETiBjb250YWlucyByb2xlTmFtZUF0dHJpYnV0ZUlECiAgZGVzY3JpcHRpb246IEEgZmxhZyBpbmRpY2F0aW5nIGlmIHRoZSBETiByZXR1cm5lZCBieSBhIHF1ZXJ5IGNvbnRhaW5zIHRoZSByb2xlTmFtZUF0dHJpYnV0ZUlELiBJZiBzZXQgdG8gdHJ1ZSwgdGhlIEROIGlzIGNoZWNrZWQgZm9yIHRoZSByb2xlTmFtZUF0dHJpYnV0ZUlELiBJZiBzZXQgdG8gZmFsc2UsIHRoZSBETiBpcyBub3QgY2hlY2tlZCBmb3IgdGhlIHJvbGVOYW1lQXR0cmlidXRlSUQuIFRoaXMgZmxhZyBjYW4gaW1wcm92ZSB0aGUgcGVyZm9ybWFuY2Ugb2YgTERBUCBxdWVyaWVzLgogIHR5cGU6IGJvb2xlYW4KICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRo\
X2xkYXBfcm9sZV9hdHRyaWJ1dGVfaXNfZG46ICZfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pc19kbgogIG5hbWU6IGFwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaXNfZG4KICB0aXRsZTogTERBUCBSb2xlIEF0dHJpYnV0ZSBJRCBpcyBETgogIGRlc2NyaXB0aW9uOiBXaGV0aGVyIG9yIG5vdCB0aGUgcm9sZUF0dHJpYnV0ZUlEIGNvbnRhaW5zIHRoZSBmdWxseS1xdWFsaWZpZWQgRE4gb2YgYSByb2xlIG9iamVjdC4gSWYgZmFsc2UsIHRoZSByb2xlIG5hbWUgaXMgdGFrZW4gZnJvbSB0aGUgdmFsdWUgb2YgdGhlIHJvbGVOYW1lQXR0cmlidXRlSWQgYXR0cmlidXRlIG9mIHRoZSBjb250ZXh0IG5hbWUuIENlcnRhaW4gZGlyZWN0b3J5IHNjaGVtYXMsIHN1Y2gg\
YXMgTWljcm9zb2Z0IEFjdGl2ZSBEaXJlY3RvcnksIHJlcXVpcmUgdGhpcyBhdHRyaWJ1dGUgdG8gYmUgc2V0IHRvIHRydWUuCiAgdHlwZTogYm9vbGVhbgogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9yZWZlcnJhbF91c2VyX2F0dHJpYnV0ZV9pZF90b19jaGVjazogJl9hcGJfYXV0aF9sZGFwX3JlZmVycmFsX3VzZXJfYXR0cmlidXRlX2lkX3RvX2NoZWNrCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9yZWZlcnJhbF91c2VyX2F0dHJpYnV0ZV9pZF90b19jaGVjawogIHRpdGxlOiBMREFQIFJlZmVycmFsIHVzZXIgYXR0cmlidXRlIElECiAgZGVzY3JpcHRpb246IElmIHlvdSBhcmUgbm90IHVzaW5nIHJlZmVycmFscywgdGhpcyBvcHRpb24g\
Y2FuIGJlIGlnbm9yZWQuIFdoZW4gdXNpbmcgcmVmZXJyYWxzLCB0aGlzIG9wdGlvbiBkZW5vdGVzIHRoZSBhdHRyaWJ1dGUgbmFtZSB3aGljaCBjb250YWlucyB1c2VycyBkZWZpbmVkIGZvciBhIGNlcnRhaW4gcm9sZSwgZm9yIGV4YW1wbGUgbWVtYmVyLCBpZiB0aGUgcm9sZSBvYmplY3QgaXMgaW5zaWRlIHRoZSByZWZlcnJhbC4gVXNlcnMgYXJlIGNoZWNrZWQgYWdhaW5zdCB0aGUgY29udGVudCBvZiB0aGlzIGF0dHJpYnV0ZSBuYW1lLiBJZiB0aGlzIG9wdGlvbiBpcyBub3Qgc2V0LCB0aGUgY2hlY2sgd2lsbCBhbHdheXMgZmFpbCwgc28gcm9sZSBvYmplY3RzIGNhbm5vdCBiZSBzdG9yZWQgaW4gYSByZWZlcnJhbCB0cmVlLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlf\
Z3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcm9sZXNfcHJvcGVydGllczogJl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yb2xlc19wcm9wZXJ0aWVzCiAgbmFtZTogYXBiX2F1dGhfcm9sZV9tYXBwZXJfcm9sZXNfcHJvcGVydGllcwogIHRpdGxlOiBSb2xlTWFwcGluZyByb2xlc1Byb3BlcnRpZXMgZmlsZSBwYXRoCiAgZGVzY3JpcHRpb246IFdoZW4gcHJlc2VudCwgdGhlIFJvbGVNYXBwaW5nIExvZ2luIE1vZHVsZSB3aWxsIGJlIGNvbmZpZ3VyZWQgdG8gdXNlIHRoZSBwcm92aWRlZCBmaWxlLiBUaGlzIHByb3BlcnR5IGRlZmluZXMgdGhlIGZ1bGx5LXF1YWxpZmllZCBmaWxlIHBhdGggYW5kIG5hbWUgb2YgYSBwcm9wZXJ0aWVzIGZpbGUgb3Ig\
cmVzb3VyY2Ugd2hpY2ggbWFwcyByb2xlcyB0byByZXBsYWNlbWVudCByb2xlcy4gVGhlIGZvcm1hdCBpcyBvcmlnaW5hbF9yb2xlPXJvbGUxLHJvbGUyLHJvbGUzCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogUm9sZU1hcHBpbmcgKE9wdGlvbmFsKQpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcmVwbGFjZV9yb2xlOiAmX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JlcGxhY2Vfcm9sZQogIG5hbWU6IGFwYl9hdXRoX3JvbGVfbWFwcGVyX3JlcGxhY2Vfcm9sZQogIHRpdGxlOiBSb2xlTWFwcGluZyByZXBsYWNlUm9sZSBwcm9wZXJ0eQogIGRlc2NyaXB0aW9uOiBXaGV0aGVyIHRvIGFkZCB0byB0aGUgY3VycmVudCByb2xlcywgb3IgcmVwbGFjZSB0aGUgY3VycmVudCByb2xl\
cyB3aXRoIHRoZSBtYXBwZWQgb25lcy4gUmVwbGFjZXMgaWYgc2V0IHRvIHRydWUuCiAgdHlwZTogYm9vbGVhbgogIGRpc3BsYXlfZ3JvdXA6IFJvbGVNYXBwaW5nIChPcHRpb25hbCkKCiMgQVBCIFNwZWMgdmVyc2lvbgp2ZXJzaW9uOiAxLjAKbmFtZTogcmhwYW0tYXBiCmRlc2NyaXB0aW9uOiBSZWQgSGF0IFByb2Nlc3MgQXV0b21hdGlvbiBNYW5hZ2VyIChBUEIpCmJpbmRhYmxlOiBmYWxzZQphc3luYzogdW5zdXBwb3J0ZWQKbWV0YWRhdGE6CiAgZGlzcGxheU5hbWU6IFJlZCBIYXQgUHJvY2VzcyBBdXRvbWF0aW9uIE1hbmFnZXIgKEFQQikKICBkb2N1bWVudGF0aW9uVXJsOiBodHRwczovL2RldmVsb3BlcnMucmVkaGF0LmNvbS9wcm9kdWN0cy9icG1zdWl0ZS9kb2NzLWFu\
ZC1hcGlzLwogIGxvbmdEZXNjcmlwdGlvbjoKICAgIEFzIGEgc3lzdGVtIGVuZ2luZWVyLCB5b3UgY2FuIGRlcGxveSBhIFJlZCBIYXQgUHJvY2VzcyBBdXRvbWF0aW9uIE1hbmFnZXIKICAgIGVudmlyb25tZW50IG9uIFJlZCBIYXQgT3BlblNoaWZ0IENvbnRhaW5lciBQbGF0Zm9ybSB0byBwcm92aWRlIGFuIGluZnJhc3RydWN0dXJlCiAgICB0byBkZXZlbG9wIG9yIGV4ZWN1dGUgcHJvY2Vzc2VzIGFuZCBvdGhlciBidXNpbmVzcyBhc3NldHMuCgogICAgTWFrZSBzdXJlIHRoZSByZXF1aXJlZCBJbWFnZVN0cmVhbVRhZ3MgZXhpc3QgaW4gdGhlIG9wZW5zaGlmdCBwcm9qZWN0LiBTZWUgYmVsb3cgZm9yIHRoZSByZXF1aXJlZCBpbWFnZXMKICBjb25zb2xlLm9wZW5zaGlmdC5p\
by9pY29uQ2xhc3M6IGljb24tcHJvY2Vzc3NlcnZlcgogIHByb3ZpZGVyRGlzcGxheU5hbWU6ICJSZWQgSGF0LCBJbmMuIgogIHNlcnZpY2VOYW1lOiByaHBhbQogIGRlcGVuZGVuY2llczoKICAgIC0gJ3JlZ2lzdHJ5LnJlZGhhdC5pby9yaHBhbS03L3JocGFtNzQta2llc2VydmVyLW9wZW5zaGlmdCcKICAgIC0gJ3JlZ2lzdHJ5LnJlZGhhdC5pby9yaHBhbS03L3JocGFtNzQtYnVzaW5lc3NjZW50cmFsLW9wZW5zaGlmdCcKICAgIC0gJ3JlZ2lzdHJ5LnJlZGhhdC5pby9yaHBhbS03L3JocGFtNzQtY29udHJvbGxlci1vcGVuc2hpZnQnCiAgICAtICdyZWdpc3RyeS5yZWRoYXQuaW8vcmhwYW0tNy9yaHBhbTc0LXNtYXJ0cm91dGVyLW9wZW5zaGlmdCcKICAgIC0gJ3JlZ2lzdHJ5\
LnJlZGhhdC5pby9yaHBhbS03L3JocGFtNzQtYnVzaW5lc3NjZW50cmFsLW1vbml0b3Jpbmctb3BlbnNoaWZ0JwogICAgLSAncmVnaXN0cnkucmVkaGF0LmlvL3Joc2NsL3Bvc3RncmVzcWwtMTAtcmhlbDcnCiAgICAtICdyZWdpc3RyeS5yZWRoYXQuaW8vcmhzY2wvbXlzcWwtNTctcmhlbDcnCnRhZ3M6CiAgLSBqYnBtCiAgLSByaHBhbQogIC0gcHJvY2Vzc3NlcnZlcgogIC0gYXV0aG9yaW5nCiAgLSBqYm9zcwpwbGFuczoKICAtIG5hbWU6IHRyaWFsCiAgICBkZXNjcmlwdGlvbjoKICAgICAgRGVwbG95IGFuIGVwaGVtZXJhbCBlbnZpcm9ubWVudCBmb3IgdGVzdGluZyBCdXNpbmVzcyBDZW50cmFsIGFuZCBQcm9jZXNzIFNlcnZlci4gQSBkZWZhdWx0IGBhZG1pblVzZXJgIHVz\
ZXIgd2lsbCBiZSBjcmVhdGVkIHdpdGggdGhlIGBSZWRIYXRgIHBhc3N3b3JkLgogICAgICBJbiBjYXNlIHRoZSBnZW5lcmF0ZWQgcm91dGVzIG5lZWQgdG8gYmUgb3ZlcnJpZGRlbiwgaXQgaXMgcG9zc2libGUgdG8gc2V0IGN1c3RvbSByb3V0ZXMgZm9yIGJvdGggYXBwbGljYXRpb25zLgogICAgZnJlZTogdHJ1ZQogICAgbWV0YWRhdGE6CiAgICAgIGRpc3BsYXlOYW1lOiBFdmFsdWF0aW9uIEVudmlyb25tZW50CiAgICBwYXJhbWV0ZXJzOgogICAgICAtIDw8OiAqX2FwYl9idXNpbmVzc2NlbnRyYWxfaG9zdG5hbWUKICAgICAgICB0aXRsZTogQnVzaW5lc3MgQ2VudHJhbCBQdWJsaWMgSG9zdG5hbWUKICAgICAgLSA8PDogKl9hcGJfa2llc2VydmVyX2hvc3RuYW1lCiAgICAg\
ICAgdGl0bGU6IFByb2Nlc3MgU2VydmVyIFB1YmxpYyBIb3N0bmFtZQogICAgICAtICpfYXBiX2ltYWdlX3N0cmVhbV90YWcKCiAgLSBuYW1lOiBhdXRob3JpbmcKICAgIGRlc2NyaXB0aW9uOgogICAgICBBbiBlbnZpcm9ubWVudCBmb3IgY3JlYXRpbmcgYW5kIG1vZGlmeWluZyBwcm9jZXNzZXMgdXNpbmcgQnVzaW5lc3MgQ2VudHJhbC4gSXQgY29uc2lzdHMgb2YKICAgICAgcG9kcyB0aGF0IHByb3ZpZGUgQnVzaW5lc3MgQ2VudHJhbCBmb3IgdGhlIGF1dGhvcmluZyB3b3JrIGFuZCBhIFByb2Nlc3MgU2VydmVyIGZvciB0ZXN0IGV4ZWN1dGlvbiBvZiB0aGUgcHJvY2Vzc2VzLgogICAgZnJlZTogdHJ1ZQogICAgbWV0YWRhdGE6CiAgICAgIGRpc3BsYXlOYW1lOiBBdXRob3Jp\
bmcKICAgIHBhcmFtZXRlcnM6CiAgICAgICMgQ29tbW9uIENyZWRlbnRpYWxzCiAgICAgIC0gKl9hcGJfa2llX2FkbWluX3VzZXIKICAgICAgLSAqX2FwYl9raWVfYWRtaW5fcHdkCiAgICAgIC0gKl9hcGJfaW1hZ2Vfc3RyZWFtX3RhZwoKICAgICAgIyBCdXNpbmVzcyBDZW50cmFsCiAgICAgIC0gPDw6ICpfYXBiX3ZvbHVtZV9zaXplCiAgICAgICAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF92b2x1bWVfc2l6ZQogICAgICAgIGRlc2NyaXB0aW9uOiBTcGVjaWZ5IHRoZSBQZXJzaXN0ZW50IFZvbHVtZSBDbGFpbSBzaXplIHRvIGNyZWF0ZSBmb3Igc3RvcmluZyB0aGUgV29ya3NwYWNlLiBGb3IgZXhhbXBsZSwgMUdpCiAgICAgICAgZGVmYXVsdDogMUdpCiAgICAgICAgZGlz\
cGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbAogICAgICAjIEtleXN0b3JlIGFuZCBTZWNyZXQKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50cmFsX3NlY3JldF9uYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbAogICAgICAtIDw8OiAqX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfbmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX2FsaWFzCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbAogICAgICAtIDw8OiAqX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfcHdkCiAgICAgICAgZGlzcGxheV9n\
cm91cDogQnVzaW5lc3MgQ2VudHJhbAogICAgICAjIEhvc3RuYW1lCiAgICAgIC0gPDw6ICpfYXBiX2J1c2luZXNzY2VudHJhbF9ob3N0bmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgIyBPQ1AgRW5hYmxlbWVudAogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfZ2xvYmFsX2Rpc2NvdmVyeQogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfcHJlZmVyX2tpZXNlcnZlcl9zdmMKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3RlbXBsYXRlX2NhY2hlX3R0bAogICAgICAjIEdpdCBob29rcwogICAgICAtICpfYXBiX2dpdF9ob29rc19kaXIKICAgICAgIyBPdGhlciB1c2VycwogICAgICAtIDw8OiAqX2FwYl9jb250cm9sbGVyX3VzZXIKICAgICAg\
ICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCiAgICAgIC0gPDw6ICpfYXBiX2NvbnRyb2xsZXJfcHdkCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbAogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9tYXZlbl9yZXBvX3VzZXIKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfbWF2ZW5fcmVwb19wd2QKCiAgICAgICMgUHJvY2VzcyBTZXJ2ZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfbW9kZQoKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZGJfdHlwZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9kYl9zaXplCgogICAgICAjIEtleXN0b3JlIGFuZCBTZWNyZXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfc2VjcmV0X25hbWUKICAg\
ICAgLSAqX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9hbGlhcwogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9wd2QKCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3VzZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfcHdkCiAgICAgIC0gPDw6ICpfYXBiX2tpZXNlcnZlcl9ob3N0bmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3N0YXJ0dXBfc3RyYXRlZ3kKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfaW1hZ2Vfc3RyZWFtX25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfcHJvbWV0aGV1c19leHRfZGlzYWJsZWQKCiAgICAgICMg\
RXh0ZXJuYWwgRGF0YWJhc2UKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZHJpdmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RpYWxlY3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfaG9zdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9wb3J0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfdXJsCgogICAgICAjIEpNUwogICAgICAtICpfYXBiX2VuYWJsZV9raWVzZXJ2ZXJfam1zX2ludGVncmF0aW9uCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcgogICAgICAtICpfYXBiX2tpZXNl\
cnZlcl9qbXNfcXVldWVfZXhlY3V0b3IKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yX3RyYW5zYWN0ZWQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3JlcXVlc3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3Jlc3BvbnNlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfc2lnbmFsCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9zaWduYWwKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9hdWRpdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfYXVkaXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2F1ZGl0X3RyYW5zYWN0ZWQKICAgICAgLSAqX2FwYl9raWVz\
ZXJ2ZXJfam1zX3VzZXJuYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19wYXNzd29yZAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfYW1xX3F1ZXVlcwoKICAgICAgIyBNYXZlbgogICAgICAtICpfYXBiX21hdmVuX21pcnJvcl91cmwKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VybAogICAgICAtICpfYXBiX21hdmVuX3JlcG9faWQKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VzZXIKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3B3ZAoKICAgICAgIyBSSCAtIFNTTwogICAgICAtICpfYXBiX3Nzb191cmwKICAgICAgLSAqX2FwYl9zc29fcmVhbG0KICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudAogICAgICAgIG5hbWU6IGFwYl9zc29fYnVzaW5lc3NjZW50\
cmFsX2NsaWVudAogICAgICAgIHRpdGxlOiBSSC1TU08gQnVzaW5lc3MgQ2VudHJhbCAtIENsaWVudAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBuYW1lIGZvciBCdXNpbmVzcyBDZW50cmFsLiBJZiB0aGUgc2VjcmV0LCB1c2VyIGFuZCBwYXNzd29yZCBhcmUgcHJvdmlkZWQgaXQgd2lsbCBiZSBjcmVhdGVkLiBGb3IgZXhhbXBsZSwgYnVzaW5lc3NjZW50cmFsCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnRfc2VjcmV0CiAgICAgICAgbmFtZTogYXBiX3Nzb19idXNpbmVzc2NlbnRyYWxfY2xpZW50X3NlY3JldAogICAgICAgIHRpdGxlOiBSSC1TU08gQnVzaW5lc3MgQ2VudHJhbCAtIENsaWVudCBTZWNyZXQKICAgICAgICBk\
ZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgc2VjcmV0IGZvciBCdXNpbmVzcyBDZW50cmFsLgogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50CiAgICAgICAgbmFtZTogYXBiX2tpZXNlcnZlcl9zc29fY2xpZW50CiAgICAgICAgdGl0bGU6IFJILVNTTyBQcm9jZXNzIFNlcnZlciAtIENsaWVudAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBuYW1lIGZvciBQcm9jZXNzIFNlcnZlci4gSWYgdGhlIHNlY3JldCwgdXNlciBhbmQgcGFzc3dvcmQgYXJlIHByb3ZpZGVkIGl0IHdpbGwgYmUgY3JlYXRlZC4gRm9yIGV4YW1wbGUsIGtpZXNlcnZlcgogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50X3NlY3Jl\
dAogICAgICAgIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICB0aXRsZTogUkgtU1NPIFByb2Nlc3MgU2VydmVyIC0gQ2xpZW50IFNlY3JldAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBzZWNyZXQgZm9yIFByb2Nlc3MgU2VydmVyLgogICAgICAtICpfYXBiX3Nzb191c2VyCiAgICAgIC0gKl9hcGJfc3NvX3B3ZAogICAgICAtICpfYXBiX3Nzb19kaXNhYmxlX3NzbF9jZXJ0X3ZhbGlkYXRpb24KICAgICAgLSAqX2FwYl9zc29fcHJpbmNpcGFsX2F0dHJpYnV0ZQoKICAgICAgIyBMREFQCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VybAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iaW5kX2RuCiAg\
ICAgIC0gKl9hcGJfYXV0aF9sZGFwX2JpbmRfY3JlZGVudGlhbAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9qYWFzX3NlY3VyaXR5X2RvbWFpbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iYXNlX2N0eF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iYXNlX2ZpbHRlcgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfc2NvcGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3RpbWVfbGltaXQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfZGlzdGluZ3Vpc2hlZF9uYW1lX2F0dHJpYnV0ZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV91c2VybmFtZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9iZWdpbl9zdHJpbmcKICAgICAgLSAqX2Fw\
Yl9hdXRoX2xkYXBfdXNlcm5hbWVfZW5kX3N0cmluZwogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlc19jdHhfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9maWx0ZXIKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9yZWN1cnNpb24KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfZGVmYXVsdF9yb2xlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfbmFtZV9hdHRyaWJ1dGVfaWQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcGFyc2Vfcm9sZV9uYW1lX2Zyb21fZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaXNfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xk\
YXBfcmVmZXJyYWxfdXNlcl9hdHRyaWJ1dGVfaWRfdG9fY2hlY2sKCiAgICAgICMgUm9sZU1hcHBpbmcKICAgICAgLSAqX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JvbGVzX3Byb3BlcnRpZXMKICAgICAgLSAqX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JlcGxhY2Vfcm9sZQoKICAtIG5hbWU6IGltbXV0YWJsZS1raWUKICAgIGRlc2NyaXB0aW9uOgogICAgICBJbiB0aGlzIGVudmlyb25tZW50LCB3aGVuIHlvdSBkZXBsb3kgYSBQcm9jZXNzIFNlcnZlciBwb2QsIGl0IGJ1aWxkcyBhbiBpbWFnZSB0aGF0IGxvYWRzIGFuZCBzdGFydHMKICAgICAgYSBwcm9jZXNzIG9yIGdyb3VwIG9mIHByb2Nlc3Nlcy4gWW91IGNhbm5vdCBzdG9wIGFueSBwcm9jZXNzIG9uIHRoZSBwb2Qgb3IgYWRk\
IGFueSBuZXcgcHJvY2VzcyB0byB0aGUgcG9kLgogICAgICBJZiB5b3Ugd2FudCB0byB1c2UgYW5vdGhlciB2ZXJzaW9uIG9mIGEgcHJvY2VzcyBvciBtb2RpZnkgdGhlIGNvbmZpZ3VyYXRpb24gaW4gYW55IG90aGVyIHdheSwgeW91IGRlcGxveSBhIG5ldwogICAgICBzZXJ2ZXIgaW1hZ2UgYW5kIGRpc3BsYWNlIHRoZSBvbGQgb25lLgogICAgZnJlZTogdHJ1ZQogICAgbWV0YWRhdGE6CiAgICAgIGRpc3BsYXlOYW1lOiBJbW11dGFibGUgU2VydmVyIC0gUHJvY2VzcyBTZXJ2ZXIKICAgIHBhcmFtZXRlcnM6CiAgICAgICMgQ29tbW9uIENyZWRlbnRpYWxzCiAgICAgIC0gKl9hcGJfa2llX2FkbWluX3VzZXIKICAgICAgLSAqX2FwYl9raWVfYWRtaW5fcHdkCiAgICAgIC0gKl9h\
cGJfaW1hZ2Vfc3RyZWFtX3RhZwogICAgICAjIEhBCiAgICAgIC0gPDw6ICpfYXBiX3JlcGxpY2FzCiAgICAgICAgbmFtZTogYXBiX2tpZXNlcnZlcl9yZXBsaWNhcwogICAgICAgIGRlc2NyaXB0aW9uOiBOdW1iZXIgb2YgUmVwbGljYXMgb2YgdGhlIFByb2Nlc3MgU2VydmVyIHRoYXQgd2lsbCBiZSBpbml0aWFsbHkgZGVwbG95ZWQKICAgICAgICBkZWZhdWx0OiAyCgogICAgICAjIEFydGlmYWN0IFNvdXJjZQogICAgICAtIG5hbWU6IGFwYl9raWVzZXJ2ZXJfY29udGFpbmVyX2RlcGxveW1lbnQKICAgICAgICB0aXRsZTogUHJvY2VzcyBTZXJ2ZXIgQ29udGFpbmVyIERlcGxveW1lbnQKICAgICAgICBkZXNjcmlwdGlvbjogJ1Byb2Nlc3MgU2VydmVyIENvbnRhaW5lciBkZXBs\
b3ltZW50IGNvbmZpZ3VyYXRpb24gaW4gZm9ybWF0OiBjb250YWluZXJJZD1ncm91cElkOmFydGlmYWN0SWQ6dmVyc2lvbnxjMj1nMjphMjp2MicKICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEFydGlmYWN0IHNvdXJjZQogICAgICAtIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc291cmNlX3VybAogICAgICAgIHRpdGxlOiBHaXQgUmVwb3NpdG9yeSBVUkwKICAgICAgICBkZXNjcmlwdGlvbjogR2l0IHNvdXJjZSBVUkkgZm9yIGFwcGxpY2F0aW9uLiBGb3IgZXhhbXBsZSwgaHR0cHM6Ly9naXRodWIuY29tL2pib3NzLWNvbnRhaW5lci1pbWFnZXMvcmhwYW0tNy1vcGVuc2hpZnQtaW1hZ2UuZ2l0CiAgICAgICAg\
cmVxdWlyZWQ6IHRydWUKICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICBkaXNwbGF5X2dyb3VwOiBBcnRpZmFjdCBzb3VyY2UKICAgICAgLSBuYW1lOiBhcGJfa2llc2VydmVyX3NvdXJjZV9yZWYKICAgICAgICB0aXRsZTogR2l0IFJlcG9zaXRvcnkgUmVmZXJlbmNlCiAgICAgICAgZGVzY3JpcHRpb246IEdpdCBicmFuY2gvdGFnIHJlZmVyZW5jZS4gRm9yIGV4YW1wbGUsIDcuNC4wLkdBIG9yIG1hc3RlcgogICAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgZGlzcGxheV9ncm91cDogQXJ0aWZhY3Qgc291cmNlCiAgICAgIC0gbmFtZTogYXBiX2tpZXNlcnZlcl9zb3VyY2VfY29udGV4dAogICAgICAgIHRpdGxlOiBHaXQgUmVwb3Np\
dG9yeSBDb250ZXh0IERpcgogICAgICAgIGRlc2NyaXB0aW9uOiBQYXRoIHdpdGhpbiBHaXQgcHJvamVjdCB0byBidWlsZDsgZW1wdHkgZm9yIHJvb3QgcHJvamVjdCBkaXJlY3RvcnkuIEZvciBleGFtcGxlLCBxdWlja3N0YXJ0cy9saWJyYXJ5LXByb2Nlc3MvbGlicmFyeQogICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEFydGlmYWN0IHNvdXJjZQogICAgICAtIG5hbWU6IGFwYl9raWVzZXJ2ZXJfZ2l0aHViX3dlYmhvb2tfc2VjcmV0CiAgICAgICAgdGl0bGU6IEdpdGh1YiBXZWJob29rIFNlY3JldAogICAgICAgIGRlc2NyaXB0aW9uOiBTZWNyZXQga2V5IHRvIHVzZSB3aGVuIGNvbmZpZ3VyaW5nIGEgR2l0SHViIFdlYmhvb2suIEdlbmVyYXRl\
ZCBpZiBlbXB0eS4KICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICBkaXNwbGF5X2dyb3VwOiBBcnRpZmFjdCBzb3VyY2UKICAgICAgLSBuYW1lOiBhcGJfa2llc2VydmVyX2dlbmVyaWNfd2ViaG9va19zZWNyZXQKICAgICAgICB0aXRsZTogR2VuZXJpYyBXZWJob29rIFNlY3JldAogICAgICAgIGRlc2NyaXB0aW9uOiBTZWNyZXQga2V5IHRvIHVzZSB3aGVuIGNvbmZpZ3VyaW5nIGEgR2VuZXJpYyBXZWJob29rLiBHZW5lcmF0ZWQgaWYgZW1wdHkuCiAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgZGlzcGxheV9ncm91cDogQXJ0aWZhY3Qgc291cmNlCiAgICAgIC0gbmFtZTogYXBiX2tpZXNlcnZlcl9hcnRpZmFjdF9kaXIKICAgICAgICB0aXRsZTogQXJ0aWZhY3QgZGly\
ZWN0b3JpZXMKICAgICAgICBkZXNjcmlwdGlvbjogTGlzdCBvZiBkaXJlY3RvcmllcyBmcm9tIHdoaWNoIGFyY2hpdmVzIHdpbGwgYmUgY29waWVkIGludG8gdGhlIGRlcGxveW1lbnQgZm9sZGVyLiBJZiB1bnNwZWNpZmllZCwgYWxsIGFyY2hpdmVzIGluIC90YXJnZXQgd2lsbCBiZSBjb3BpZWQuCiAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgZGlzcGxheV9ncm91cDogQXJ0aWZhY3Qgc291cmNlCiAgICAgIC0gPDw6ICpfYXBiX21hdmVuX21pcnJvcl91cmwKICAgICAgICBkZXNjcmlwdGlvbjogTWF2ZW4gTWlycm9yIHRvIHVzZSBmb3IgUzJJIGJ1aWxkcwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEFydGlmYWN0IHNvdXJjZQoKICAgICAgIyBNYXZlbgogICAgICAtICpf\
YXBiX21hdmVuX3JlcG9fdXJsCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb19pZAogICAgICAtICpfYXBiX21hdmVuX3JlcG9fdXNlcgogICAgICAtICpfYXBiX21hdmVuX3JlcG9fcHdkCgogICAgICAjIEpNUwogICAgICAtICpfYXBiX2VuYWJsZV9raWVzZXJ2ZXJfam1zX2ludGVncmF0aW9uCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfZXhlY3V0b3IKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yX3RyYW5zYWN0ZWQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3JlcXVlc3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3Jlc3BvbnNlCiAgICAg\
IC0gKl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfc2lnbmFsCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9zaWduYWwKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9hdWRpdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfYXVkaXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2F1ZGl0X3RyYW5zYWN0ZWQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3VzZXJuYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19wYXNzd29yZAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfYW1xX3F1ZXVlcwoKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfbW9kZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9kYl90eXBlCiAgICAg\
IC0gKl9hcGJfa2llc2VydmVyX2RiX3NpemUKICAgICAgIyBLZXlzdG9yZSBhbmQgU2VjcmV0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3NlY3JldF9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2tleXN0b3JlX25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfYWxpYXMKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfcHdkCgogICAgICAtICpfYXBiX2tpZXNlcnZlcl91c2VyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3B3ZAogICAgICAtIDw8OiAqX2FwYl9raWVzZXJ2ZXJfaG9zdG5hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgogICAgICAtIDw8OiAqX2FwYl9raWVzZXJ2ZXJfc3RhcnR1cF9zdHJhdGVneQog\
ICAgICAgIGRlc2NyaXB0aW9uOiAiV2hlbiBzZXQgdG8gT3BlblNoaWZ0U3RhcnR1cFN0cmF0ZWd5LCBhbGxvd3MgUHJvY2VzcyBTZXJ2ZXIgdG8gc3RhcnQgdXAgaW5kZXBlbmRlbnRseSB1c2VkIHNoYXJlZCBzdGF0ZSBmcm9tIE9wZW5TaGlmdCBBUEkgc2VydmljZTsgd2hlbiBzZXQgdG8gTG9jYWxDb250YWluZXJzU3RhcnR1cFN0cmF0ZWd5LCBhbGxvd3MgS0lFIHNlcnZlciB0byBzdGFydCB1cCBhbmQgZnVuY3Rpb24gd2l0aCBsb2NhbCBjb25maWcsIGV2ZW4gd2hlbiBhIGNvbnRyb2xsZXIgaXMgY29uZmlndXJlZCBhbmQgdW5hdmFpbGFibGUiCiAgICAgICAgZW51bTogWydMb2NhbENvbnRhaW5lcnNTdGFydHVwU3RyYXRlZ3knLCAnT3BlblNoaWZ0U3RhcnR1cFN0cmF0\
ZWd5J10KICAgICAgICBkZWZhdWx0OiBPcGVuU2hpZnRTdGFydHVwU3RyYXRlZ3kKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfaW1hZ2Vfc3RyZWFtX25hbWUKICAgICAgICAjIFByb21ldGhldXMKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfcHJvbWV0aGV1c19leHRfZGlzYWJsZWQKCiAgICAgICMgRXh0ZXJuYWwgRGF0YWJhc2UKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZHJpdmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RpYWxlY3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfaG9zdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9wb3J0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVy\
bmFsX2RiX25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfdXJsCgogICAgICAjIFJvdXRlcgogICAgICAtICpfYXBiX3JvdXRlcl9zdmMKICAgICAgLSAqX2FwYl9yb3V0ZXJfaG9zdAogICAgICAtICpfYXBiX3JvdXRlcl9wb3J0CiAgICAgIC0gKl9hcGJfcm91dGVyX3Byb3RvY29sCgogICAgICAjIENvbnRyb2xsZXIKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3N2YwogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfaG9zdAogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfcG9ydAogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfcHJvdG9jb2wKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3Rva2VuCiAgICAgIC0gPDw6ICpfYXBiX2NvbnRyb2xsZXJfdXNlcgog\
ICAgICAgIGRpc3BsYXlfZ3JvdXA6IENvbnRyb2xsZXIgSW50ZWdyYXRpb24KICAgICAgLSA8PDogKl9hcGJfY29udHJvbGxlcl9wd2QKICAgICAgICBkaXNwbGF5X2dyb3VwOiBDb250cm9sbGVyIEludGVncmF0aW9uCgogICAgICAjIFJIIC0gU1NPCiAgICAgIC0gKl9hcGJfc3NvX3VybAogICAgICAtICpfYXBiX3Nzb19yZWFsbQogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50CiAgICAgICAgbmFtZTogYXBiX2tpZXNlcnZlcl9zc29fY2xpZW50CiAgICAgICAgdGl0bGU6IFJILVNTTyBQcm9jZXNzIFNlcnZlciAtIENsaWVudAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBuYW1lIGZvciBQcm9jZXNzIFNlcnZlci4gSWYgdGhl\
IHNlY3JldCwgdXNlciBhbmQgcGFzc3dvcmQgYXJlIHByb3ZpZGVkIGl0IHdpbGwgYmUgY3JlYXRlZC4gRm9yIGV4YW1wbGUsIGtpZXNlcnZlcgogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICB0aXRsZTogUkgtU1NPIFByb2Nlc3MgU2VydmVyIC0gQ2xpZW50IFNlY3JldAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBzZWNyZXQgZm9yIFByb2Nlc3MgU2VydmVyLgogICAgICAtICpfYXBiX3Nzb191c2VyCiAgICAgIC0gKl9hcGJfc3NvX3B3ZAogICAgICAtICpfYXBiX3Nzb19kaXNhYmxlX3NzbF9jZXJ0X3ZhbGlkYXRp\
b24KICAgICAgLSAqX2FwYl9zc29fcHJpbmNpcGFsX2F0dHJpYnV0ZQoKICAgICAgIyBMREFQCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VybAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iaW5kX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2JpbmRfY3JlZGVudGlhbAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9qYWFzX3NlY3VyaXR5X2RvbWFpbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iYXNlX2N0eF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iYXNlX2ZpbHRlcgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfc2NvcGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3RpbWVfbGltaXQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfZGlzdGluZ3Vp\
c2hlZF9uYW1lX2F0dHJpYnV0ZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV91c2VybmFtZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9iZWdpbl9zdHJpbmcKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfZW5kX3N0cmluZwogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlc19jdHhfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9maWx0ZXIKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9yZWN1cnNpb24KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfZGVmYXVsdF9yb2xlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfbmFtZV9hdHRyaWJ1dGVf\
aWQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcGFyc2Vfcm9sZV9uYW1lX2Zyb21fZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaXNfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcmVmZXJyYWxfdXNlcl9hdHRyaWJ1dGVfaWRfdG9fY2hlY2sKCiAgICAgICMgUm9sZU1hcHBpbmcKICAgICAgLSAqX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JvbGVzX3Byb3BlcnRpZXMKICAgICAgLSAqX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JlcGxhY2Vfcm9sZQoKICAtIG5hbWU6IGltbXV0YWJsZS1tb24KICAgIGRlc2NyaXB0aW9uOgogICAgICBVc2UgQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nIHRvIG1vbml0b3IgdGhlIHBlcmZvcm1hbmNlIG9mIHRoZSBl\
bnZpcm9ubWVudCBhbmQgdG8gc3RvcCBhbmQKICAgICAgcmVzdGFydCBzb21lIG9mIHRoZSBwcm9jZXNzIGluc3RhbmNlcyBpbiBhbiBpbW11dGFibGUgZW52aXJvbm1lbnQsIGJ1dCBub3QgdG8gZGVwbG95IGFkZGl0aW9uYWwgcHJvY2Vzc2VzIHRvIGFueSBQcm9jZXNzIFNlcnZlciBvciB1bmRlcGxveSBhbnkgZXhpc3Rpbmcgb25lcyAoeW91IGNhbiBub3QgYWRkIG9yIHJlbW92ZSBjb250YWluZXJzKQogICAgZnJlZTogdHJ1ZQogICAgbWV0YWRhdGE6CiAgICAgIGRpc3BsYXlOYW1lOiBJbW11dGFibGUgU2VydmVyIC0gTW9uaXRvcgogICAgcGFyYW1ldGVyczoKICAgICAgIyBDb21tb24gQ3JlZGVudGlhbHMKICAgICAgLSAqX2FwYl9raWVfYWRtaW5fdXNlcgogICAgICAt\
ICpfYXBiX2tpZV9hZG1pbl9wd2QKICAgICAgLSAqX2FwYl9pbWFnZV9zdHJlYW1fdGFnCgogICAgICAjIE1hdmVuCiAgICAgIC0gKl9hcGJfbWF2ZW5fbWlycm9yX3VybAogICAgICAtICpfYXBiX21hdmVuX3JlcG9fdXJsCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb19pZAogICAgICAtICpfYXBiX21hdmVuX3JlcG9fdXNlcgogICAgICAtICpfYXBiX21hdmVuX3JlcG9fcHdkCgogICAgICAjIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAtIDw8OiAqX2FwYl9yZXBsaWNhcwogICAgICAgIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfcmVwbGljYXMKICAgICAgICBkZXNjcmlwdGlvbjogTnVtYmVyIG9mIFJlcGxpY2FzIG9mIEJ1c2luZXNzIENlbnRyYWwgTW9u\
aXRvcmluZyB0aGF0IHdpbGwgYmUgaW5pdGlhbGx5IGRlcGxveWVkCiAgICAgICAgZGVmYXVsdDogMQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAtIDw8OiAqX2FwYl92b2x1bWVfc2l6ZQogICAgICAgIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfdm9sdW1lX3NpemUKICAgICAgICBkZXNjcmlwdGlvbjogU3BlY2lmeSB0aGUgUGVyc2lzdGVudCBWb2x1bWUgQ2xhaW0gc2l6ZSB0byBjcmVhdGUgZm9yIHN0b3JpbmcgdGhlIHVzZXIgZGF0YS4gRm9yIGV4YW1wbGUsIDY0TWkKICAgICAgICBkZWZhdWx0OiA2NE1pCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiAgICAgICMg\
S2V5c3RvcmUgYW5kIFNlY3JldAogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9zZWNyZXRfbmFtZQogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9uYW1lCiAgICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX2FsaWFzCiAgICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX3B3ZAogICAgICAtIDw8OiAqX2FwYl9idXNpbmVzc2NlbnRyYWxfaG9zdG5hbWUKICAgICAgICBkZXNjcmlwdGlvbjogUHVibGljIGhvc3RuYW1lIGZvciBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcuIEdlbmVyYXRlZCBpZiBlbXB0eQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAj\
IE9DUCBFbmFibGVtZW50CiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9nbG9iYWxfZGlzY292ZXJ5CiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9wcmVmZXJfa2llc2VydmVyX3N2YwogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfdGVtcGxhdGVfY2FjaGVfdHRsCiAgICAgICMgT3RoZXIgdXNlcnMKICAgICAgLSA8PDogKl9hcGJfY29udHJvbGxlcl91c2VyCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiAgICAgIC0gPDw6ICpfYXBiX2NvbnRyb2xsZXJfcHdkCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCgogICAgICAjIFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9yZXBsaWNh\
cwogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9yZXBsaWNhcwogICAgICAgIGRlc2NyaXB0aW9uOiBOdW1iZXIgb2YgUmVwbGljYXMgb2YgU21hcnQgUm91dGVyIHRoYXQgd2lsbCBiZSBpbml0aWFsbHkgZGVwbG95ZWQKICAgICAgICBkZWZhdWx0OiAyCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX3ZvbHVtZV9zaXplCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX3ZvbHVtZV9zaXplCiAgICAgICAgZGVzY3JpcHRpb246IFNwZWNpZnkgdGhlIFBlcnNpc3RlbnQgVm9sdW1lIENsYWltIHNpemUgdG8gY3JlYXRlLiBGb3IgZXhhbXBsZSwgNjRNaQogICAgICAgIGRlZmF1bHQ6IDY0TWkKICAgICAgICBkaXNwbGF5\
X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfaG9zdG5hbWUKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfaG9zdG5hbWUKICAgICAgICBkZXNjcmlwdGlvbjogUHVibGljIGhvc3RuYW1lIGZvciBTbWFydCBSb3V0ZXIuIEdlbmVyYXRlZCBpZiBlbXB0eQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9zZWNyZXRfbmFtZQogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9zZWNyZXRfbmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9rZXlzdG9yZV9uYW1lCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX2tleXN0b3JlX25hbWUKICAg\
ICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfa2V5c3RvcmVfYWxpYXMKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfa2V5c3RvcmVfYWxpYXMKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfa2V5c3RvcmVfcHdkCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX2tleXN0b3JlX3B3ZAogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgoKICAgICAgIyBSSCAtIFNTTwogICAgICAtICpfYXBiX3Nzb191cmwKICAgICAgLSAqX2FwYl9zc29fcmVhbG0KICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudAogICAgICAgIG5hbWU6IGFwYl9zc29fYnVzaW5lc3NjZW50\
cmFsX2NsaWVudAogICAgICAgIHRpdGxlOiBSSC1TU08gQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nIC0gQ2xpZW50CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IG5hbWUgZm9yIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZy4gSWYgdGhlIHNlY3JldCwgdXNlciBhbmQgcGFzc3dvcmQgYXJlIHByb3ZpZGVkIGl0IHdpbGwgYmUgY3JlYXRlZC4gRm9yIGV4YW1wbGUsIGJ1c2luZXNzY2VudHJhbAogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIG5hbWU6IGFwYl9zc29fYnVzaW5lc3NjZW50cmFsX2NsaWVudF9zZWNyZXQKICAgICAgICB0aXRsZTogUkgtU1NPIEJ1c2luZXNzIENlbnRyYWwgTW9u\
aXRvcmluZyAtIENsaWVudCBTZWNyZXQKICAgICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgc2VjcmV0IGZvciBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcuCiAgICAgIC0gKl9hcGJfc3NvX3VzZXIKICAgICAgLSAqX2FwYl9zc29fcHdkCiAgICAgIC0gKl9hcGJfc3NvX2Rpc2FibGVfc3NsX2NlcnRfdmFsaWRhdGlvbgogICAgICAtICpfYXBiX3Nzb19wcmluY2lwYWxfYXR0cmlidXRlCgogICAgICAjIExEQVAKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXJsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2JpbmRfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmluZF9jcmVkZW50aWFsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2ph\
YXNfc2VjdXJpdHlfZG9tYWluCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfY3R4X2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfZmlsdGVyCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3NlYXJjaF9zY29wZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfdGltZV9saW1pdAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kaXN0aW5ndWlzaGVkX25hbWVfYXR0cmlidXRlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3BhcnNlX3VzZXJuYW1lCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2JlZ2luX3N0cmluZwogICAgICAtICpfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9lbmRfc3RyaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0\
cmlidXRlX2lkCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVzX2N0eF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2ZpbHRlcgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX3JlY3Vyc2lvbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kZWZhdWx0X3JvbGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9uYW1lX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV9yb2xlX25hbWVfZnJvbV9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pc19kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yZWZlcnJhbF91c2VyX2F0dHJpYnV0ZV9pZF90b19jaGVjawoKICAgICAgIyBSb2xlTWFwcGluZwogICAg\
ICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcm9sZXNfcHJvcGVydGllcwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcmVwbGFjZV9yb2xlCgogIC0gbmFtZTogbWFuYWdlZAogICAgZGVzY3JpcHRpb246CiAgICAgIEFuIGVudmlyb25tZW50IGZvciBydW5uaW5nIGV4aXN0aW5nIHByb2Nlc3NlcyBmb3Igc3RhZ2luZyBhbmQgcHJvZHVjdGlvbiBwdXJwb3Nlcy4KICAgICAgVGhpcyBlbnZpcm9ubWVudCBpbmNsdWRlcyBzZXZlcmFsIGdyb3VwcyBvZiBQcm9jZXNzIFNlcnZlciBwb2RzOyB5b3UgY2FuIGRlcGxveSBhbmQgdW5kZXBsb3kKICAgICAgcHJvY2Vzc2VzIG9uIGV2ZXJ5IHN1Y2ggZ3JvdXAgYW5kIGFsc28gc2NhbGUgdGhlIGdyb3VwIHVwIG9yIGRvd24g\
YXMgbmVjZXNzYXJ5LiBVc2UgQnVzaW5lc3MKICAgICAgQ2VudHJhbCBNb25pdG9yaW5nIHRvIGRlcGxveSwgcnVuLCBhbmQgc3RvcCB0aGUgcHJvY2Vzc2VzIGFuZCB0byBtb25pdG9yIHRoZWlyIGV4ZWN1dGlvbi4KCiAgICBmcmVlOiB0cnVlCiAgICBtZXRhZGF0YToKICAgICAgZGlzcGxheU5hbWU6IE1hbmFnZWQgRW52aXJvbm1lbnQKICAgIHBhcmFtZXRlcnM6CiAgICAgICMgQ29tbW9uIENyZWRlbnRpYWxzCiAgICAgIC0gKl9hcGJfa2llX2FkbWluX3VzZXIKICAgICAgLSAqX2FwYl9raWVfYWRtaW5fcHdkCiAgICAgIC0gKl9hcGJfaW1hZ2Vfc3RyZWFtX3RhZwoKICAgICAgIyBNYXZlbgogICAgICAtICpfYXBiX21hdmVuX21pcnJvcl91cmwKICAgICAgLSA8PDogKl9h\
cGJfbWF2ZW5fcmVwb191cmwKICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgIGRlc2NyaXB0aW9uOiBFeHRlcm5hbCBNYXZlbiBSZXBvc2l0b3J5IFVSTC4KICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX2lkCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb191c2VyCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb19wd2QKCiAgICAgICMgQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiAgICAgIC0gPDw6ICpfYXBiX3JlcGxpY2FzCiAgICAgICAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF9yZXBsaWNhcwogICAgICAgIGRlZmF1bHQ6IDEKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgLSA8PDogKl9hcGJfdm9sdW1lX3Np\
emUKICAgICAgICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX3ZvbHVtZV9zaXplCiAgICAgICAgZGVzY3JpcHRpb246IFNwZWNpZnkgdGhlIFBlcnNpc3RlbnQgVm9sdW1lIENsYWltIHNpemUgdG8gY3JlYXRlIGZvciBzdG9yaW5nIHRoZSB1c2VyIGRhdGEuIEZvciBleGFtcGxlLCA2NE1pCiAgICAgICAgZGVmYXVsdDogNjRNaQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAjIyBLZXlzdG9yZSBhbmQgU2VjcmV0CiAgICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFsX3NlY3JldF9uYW1lCiAgICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX25hbWUKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxf\
a2V5c3RvcmVfYWxpYXMKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfcHdkCiAgICAgIC0gPDw6ICpfYXBiX2J1c2luZXNzY2VudHJhbF9ob3N0bmFtZQogICAgICAgIGRlc2NyaXB0aW9uOiBQdWJsaWMgaG9zdG5hbWUgZm9yIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZy4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiAgICAgICMgT0NQIEVuYWJsZW1lbnQKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX2dsb2JhbF9kaXNjb3ZlcnkKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3ByZWZlcl9raWVzZXJ2ZXJfc3ZjCiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl90ZW1wbGF0\
ZV9jYWNoZV90dGwKCiAgICAgICMgT3RoZXIgdXNlcnMKICAgICAgLSA8PDogKl9hcGJfY29udHJvbGxlcl91c2VyCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiAgICAgIC0gPDw6ICpfYXBiX2NvbnRyb2xsZXJfcHdkCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCgogICAgICAjIFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9yZXBsaWNhcwogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9yZXBsaWNhcwogICAgICAgIGRlZmF1bHQ6IDIKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfdm9sdW1lX3NpemUKICAgICAgICBu\
YW1lOiBhcGJfc21hcnRyb3V0ZXJfdm9sdW1lX3NpemUKICAgICAgICBkZXNjcmlwdGlvbjogU3BlY2lmeSB0aGUgUGVyc2lzdGVudCBWb2x1bWUgQ2xhaW0gc2l6ZSB0byBjcmVhdGUuIEZvciBleGFtcGxlLCA2NE1pCiAgICAgICAgZGVmYXVsdDogNjRNaQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9ob3N0bmFtZQogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9ob3N0bmFtZQogICAgICAgIGRlc2NyaXB0aW9uOiBQdWJsaWMgaG9zdG5hbWUgZm9yIFNtYXJ0IFJvdXRlci4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX3NlY3JldF9u\
YW1lCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX3NlY3JldF9uYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX2tleXN0b3JlX25hbWUKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfa2V5c3RvcmVfbmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9rZXlzdG9yZV9hbGlhcwogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9rZXlzdG9yZV9hbGlhcwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9rZXlzdG9yZV9wd2QKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfa2V5c3RvcmVfcHdkCiAg\
ICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCgogICAgICAjIFByb2Nlc3MgU2VydmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX21vZGUKICAgICAgLSBuYW1lOiBhcGJfa2llc2VydmVyX3NldHMKICAgICAgICB0aXRsZTogU2V0cyBvZiBQcm9jZXNzIFNlcnZlcnMKICAgICAgICBkZXNjcmlwdGlvbjoKICAgICAgICAgIE51bWJlciBvZiBzZXRzIG9mIEtpZSBQcm9jZXNzIFNlcnZlciBjbHVzdGVyICsgZGF0YWJhc2UgdGhhdCB3aWxsIGJlIGRlcGxveWVkLgogICAgICAgICAgRWFjaCBzZXQgY2FuIHJ1biBzZXBhcmF0ZSBzZXJ2aWNlcyBhbmQgb3RoZXIgYXNzZXRzLiBBbGwgc2V0cyBjb25uZWN0IHRvIHRoZSBzYW1lIFNtYXJ0IFJvdXRlcgogICAgICAgIGRl\
ZmF1bHQ6IDIKICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgIHR5cGU6IG51bWJlcgogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCiAgICAgIC0gPDw6ICpfYXBiX3JlcGxpY2FzCiAgICAgICAgbmFtZTogYXBiX2tpZXNlcnZlcl9yZXBsaWNhcwogICAgICAgIGRlZmF1bHQ6IDMKICAgICAgICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9kYl90eXBlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2RiX3NpemUKCiAgICAgICMjIEtleXN0b3JlIGFuZCBTZWNyZXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfc2VjcmV0X25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfbmFtZQogICAg\
ICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9hbGlhcwogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9wd2QKCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3VzZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfcHdkCiAgICAgIC0gPDw6ICpfYXBiX2tpZXNlcnZlcl9ob3N0bmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3N0YXJ0dXBfc3RyYXRlZ3kKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfaW1hZ2Vfc3RyZWFtX25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfcHJvbWV0aGV1c19leHRfZGlzYWJsZWQKCiAgICAgICMgRXh0ZXJuYWwgRGF0YWJhc2UKICAgICAgLSAqX2FwYl9raWVzZXJ2\
ZXJfZXh0ZXJuYWxfZGJfZHJpdmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RpYWxlY3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfaG9zdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9wb3J0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfdXJsCgogICAgICAjIEpNUwogICAgICAtICpfYXBiX2VuYWJsZV9raWVzZXJ2ZXJfam1zX2ludGVncmF0aW9uCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfZXhlY3V0b3IKICAgICAgLSAqX2FwYl9r\
aWVzZXJ2ZXJfam1zX2V4ZWN1dG9yX3RyYW5zYWN0ZWQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3JlcXVlc3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3Jlc3BvbnNlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfc2lnbmFsCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9zaWduYWwKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9hdWRpdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfYXVkaXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2F1ZGl0X3RyYW5zYWN0ZWQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3VzZXJuYW1lCiAgICAgIC0gKl9hcGJfa2llc2Vy\
dmVyX2ptc19wYXNzd29yZAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfYW1xX3F1ZXVlcwoKICAgICAgIyBSSCAtIFNTTwogICAgICAtICpfYXBiX3Nzb191cmwKICAgICAgLSAqX2FwYl9zc29fcmVhbG0KICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudAogICAgICAgIG5hbWU6IGFwYl9zc29fYnVzaW5lc3NjZW50cmFsX2NsaWVudAogICAgICAgIHRpdGxlOiBSSC1TU08gQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nIC0gQ2xpZW50CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IG5hbWUgZm9yIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZy4gSWYgdGhlIHNlY3JldCwgdXNlciBhbmQgcGFzc3dvcmQgYXJlIHByb3Zp\
ZGVkIGl0IHdpbGwgYmUgY3JlYXRlZC4gRm9yIGV4YW1wbGUsIGJ1c2luZXNzY2VudHJhbAogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIG5hbWU6IGFwYl9zc29fYnVzaW5lc3NjZW50cmFsX2NsaWVudF9zZWNyZXQKICAgICAgICB0aXRsZTogUkgtU1NPIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZyAtIENsaWVudCBTZWNyZXQKICAgICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgc2VjcmV0IGZvciBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcuCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnQKICAgICAgICBuYW1lOiBhcGJfa2llc2VydmVyX3Nzb19jbGllbnQKICAgICAgICB0aXRsZTogUkgt\
U1NPIFByb2Nlc3MgU2VydmVyIC0gQ2xpZW50CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IG5hbWUgZm9yIFByb2Nlc3MgU2VydmVyLiBJZiB0aGUgc2VjcmV0LCB1c2VyIGFuZCBwYXNzd29yZCBhcmUgcHJvdmlkZWQgaXQgd2lsbCBiZSBjcmVhdGVkLiBGb3IgZXhhbXBsZSwga2llc2VydmVyCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnRfc2VjcmV0CiAgICAgICAgbmFtZTogYXBiX2tpZXNlcnZlcl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIHRpdGxlOiBSSC1TU08gUHJvY2VzcyBTZXJ2ZXIgLSBDbGllbnQgU2VjcmV0CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IHNlY3Jl\
dCBmb3IgUHJvY2VzcyBTZXJ2ZXIuCiAgICAgIC0gKl9hcGJfc3NvX3VzZXIKICAgICAgLSAqX2FwYl9zc29fcHdkCiAgICAgIC0gKl9hcGJfc3NvX2Rpc2FibGVfc3NsX2NlcnRfdmFsaWRhdGlvbgogICAgICAtICpfYXBiX3Nzb19wcmluY2lwYWxfYXR0cmlidXRlCgogICAgICAjIExEQVAKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXJsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2JpbmRfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmluZF9jcmVkZW50aWFsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2phYXNfc2VjdXJpdHlfZG9tYWluCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfY3R4X2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfZmlsdGVyCiAg\
ICAgIC0gKl9hcGJfYXV0aF9sZGFwX3NlYXJjaF9zY29wZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfdGltZV9saW1pdAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kaXN0aW5ndWlzaGVkX25hbWVfYXR0cmlidXRlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3BhcnNlX3VzZXJuYW1lCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2JlZ2luX3N0cmluZwogICAgICAtICpfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9lbmRfc3RyaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lkCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVzX2N0eF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2ZpbHRlcgogICAgICAtICpf\
YXBiX2F1dGhfbGRhcF9yb2xlX3JlY3Vyc2lvbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kZWZhdWx0X3JvbGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9uYW1lX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV9yb2xlX25hbWVfZnJvbV9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pc19kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yZWZlcnJhbF91c2VyX2F0dHJpYnV0ZV9pZF90b19jaGVjawoKICAgICAgIyBSb2xlTWFwcGluZwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcm9sZXNfcHJvcGVydGllcwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcmVwbGFjZV9yb2xlCg=="

modules:
  repositories:
    - path: modules
  install:
    - name: rhpam-apb
packages:
  content_sets_file: content_sets.yml
  repositories:
    - name: base
      id: rhel-7-server-rpms
  install:
    - java-1.8.0-openjdk-headless
osbs:
  configuration:
    container_file: container.yaml
  repository:
    name: apbs/rhpam-7-apb-openshift
    branch: rhpam-7-rhel-7
