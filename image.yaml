schema_version: 1

name: "rhpam-7/rhpam-apb"
description: "Red Hat Business Central 7.3 OpenShift Ansible Playbook Bundle"
version: "1.1"
from: "openshift3/apb-base:v3.11"
labels:
  - name: "com.redhat.component"
    value: "rhpam-apb"
  - name: "io.k8s.description"
    value: "Platform for running Red Hat Process Automation Manager"
  - name: "io.k8s.display-name"
    value: "Red Hat Process Automation Manager 7.3"
  - name: "io.openshift.tags"
    value: "javaee,eap,eap7,rhpam,rhpam7,apb"
  - name: "com.redhat.apb.spec"
    value: "LS0tCiMgQ29tbW9uIENyZWRlbnRpYWxzCl9hcGJfa2llX2FkbWluX3VzZXI6ICZfYXBiX2tpZV9hZG1pbl91c2VyCiAgbmFtZTogYXBiX2tpZV9hZG1pbl91c2VyCiAgdGl0bGU6IEFkbWluIFVzZXJuYW1lCiAgZGVzY3JpcHRpb246IEFkbWluIHVzZXIgbmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJhbCBhbmQgUHJvY2VzcyBTZXJ2ZXIKICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IGFkbWluVXNlcgpfYXBiX2tpZV9hZG1pbl9wd2Q6ICZfYXBiX2tpZV9hZG1pbl9wd2QKICBuYW1lOiBhcGJfa2llX2FkbWluX3B3ZAogIHRpdGxlOiBBZG1pbiBQYXNzd29yZAogIGRlc2NyaXB0aW9uOiBBZG1pbiB1c2VyIHBhc3N3b3JkIGZvciBCdXNpbmVzcyBDZW50\
cmFsIGFuZCBQcm9jZXNzIFNlcnZlci4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAojIEltYWdlU3RyZWFtcwpfYXBiX2ltYWdlX3N0cmVhbV90YWc6ICZfYXBiX2ltYWdlX3N0cmVhbV90YWcKICBuYW1lOiBhcGJfaW1hZ2Vfc3RyZWFtX3RhZwogIHRpdGxlOiBJbWFnZSB2ZXJzaW9uCiAgZGVzY3JpcHRpb246IFRhZyB2ZXJzaW9uIG9mIHRoZSBSSFBBTSBJbWFnZVN0cmVhbSB0byB1c2UuIEl0IG11c3QgZXhpc3QgaW4gdGhlIG9wZW5zaGlmdCBuYW1lc3BhY2UuCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBzdHJpbmcKICBkZWZhdWx0OiAnMS4wJwojIEhBCl9hcGJfcmVwbGljYXM6ICZfYXBiX3JlcGxpY2FzCiAg\
dGl0bGU6IE51bWJlciBvZiByZXBsaWNhcwogIGRlc2NyaXB0aW9uOiBOdW1iZXIgb2YgUmVwbGljYXMgdGhhdCB3aWxsIGJlIGluaXRpYWxseSBkZXBsb3llZAogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogbnVtYmVyCiAgZGVmYXVsdDogMwojIE1hdmVuCl9hcGJfbWF2ZW5fbWlycm9yX3VybDogJl9hcGJfbWF2ZW5fbWlycm9yX3VybAogIG5hbWU6IGFwYl9tYXZlbl9taXJyb3JfdXJsCiAgdGl0bGU6IE1hdmVuIE1pcnJvciBVUkwKICBkZXNjcmlwdGlvbjogTWF2ZW4gTWlycm9yIHRvIHVzZSBieSBCdXNpbmVzcyBDZW50cmFsIGFuZCBQcm9jZXNzIFNlcnZlcgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IE1hdmVuCl9hcGJfbWF2ZW5fcmVwb191cmw6ICZfYXBi\
X21hdmVuX3JlcG9fdXJsCiAgbmFtZTogYXBiX21hdmVuX3JlcG9fdXJsCiAgdGl0bGU6IE1hdmVuIFJlcG9zaXRvcnkgVVJMCiAgZGVzY3JpcHRpb246IEV4dGVybmFsIE1hdmVuIFJlcG9zaXRvcnkgVVJMLiBMZWF2ZSBlbXB0eSB0byB1c2UgdGhlIHJlcG9zaXRvcnkgcHJvdmlkZWQgYnkgQnVzaW5lc3MgQ2VudHJhbAogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IE1hdmVuCl9hcGJfbWF2ZW5fcmVwb19pZDogJl9hcGJfbWF2ZW5fcmVwb19pZAogIG5hbWU6IGFwYl9tYXZlbl9yZXBvX2lkCiAgdGl0bGU6IE1hdmVuIFJlcG9zaXRvcnkgSUQKICBkZXNjcmlwdGlvbjogVGhlIElEIHRvIHVzZSBmb3IgdGhlIG1hdmVuIHJlcG9zaXRvcnksIGlmIHNldC4gRGVmYXVs\
dCBpcyBnZW5lcmF0ZWQgcmFuZG9tbHkuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTWF2ZW4KX2FwYl9tYXZlbl9yZXBvX3VzZXI6ICZfYXBiX21hdmVuX3JlcG9fdXNlcgogIG5hbWU6IGFwYl9tYXZlbl9yZXBvX3VzZXIKICB0aXRsZTogTWF2ZW4gUmVwb3NpdG9yeSBVc2VybmFtZQogIGRlc2NyaXB0aW9uOiBVc2VybmFtZSB0byB1c2UgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgZXh0ZXJuYWwgTWF2ZW4gcmVwb3NpdG9yeS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBNYXZlbgpfYXBiX21hdmVuX3JlcG9fcHdkOiAmX2FwYl9tYXZlbl9yZXBvX3B3ZAogIG5hbWU6IGFwYl9tYXZlbl9yZXBvX3B3ZAogIHRpdGxlOiBNYXZlbiBSZXBvc2l0b3J5IFBh\
c3N3b3JkCiAgZGVzY3JpcHRpb246IFBhc3N3b3JkIHRvIHVzZSB0byBpbnRlcmFjdCB3aXRoIHRoZSBleHRlcm5hbCBNYXZlbiByZXBvc2l0b3J5LgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfdHlwZTogcGFzc3dvcmQKICBkaXNwbGF5X2dyb3VwOiBNYXZlbgojIEdlbmVyaWMgS2V5c3RvcmUgcGFyYW1ldGVycwpfYXBiX3NlY3JldF9uYW1lOiAmX2FwYl9zZWNyZXRfbmFtZQogIHRpdGxlOiBTZWNyZXQgTmFtZQogIGRlc2NyaXB0aW9uOiBOYW1lIG9mIHRoZSBzZWNyZXQgY29udGFpbmluZyB0aGUga2V5c3RvcmUgdG8gYmUgdXNlZCBieSB0aGUgc2VydmVyIHRvIGFjY2VwdCBIVFRQUyBjb25uZWN0aW9ucy4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgdHlwZTogc3RyaW5nCl9h\
cGJfa2V5c3RvcmVfbmFtZTogJl9hcGJfa2V5c3RvcmVfbmFtZQogIHRpdGxlOiBLZXlzdG9yZSBGaWxlIE5hbWUKICBkZXNjcmlwdGlvbjogTmFtZSBvZiB0aGUga2V5c3RvcmUgZmlsZSBjb250YWluaW5nIHRoZSBjZXJ0aWZpY2F0ZSB0byBiZSB1c2VkIGJ5IHRoZSBzZXJ2ZXIgdG8gYWNjZXB0IEhUVFBTIGNvbm5lY3Rpb25zLiBJZiBhIHNlY3JldCBuYW1lIGlzIG5vdCBwcm92aWRlZCwgdGhlIHNlcnZlciBnZW5lcmF0ZXMgYSBzZWNyZXQgd2l0aCB0aGlzIGtleXN0b3JlIGZpbGUgbmFtZS4KICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IGtleXN0b3JlLmprcwpfYXBiX2tleXN0b3JlX2FsaWFzOiAmX2FwYl9rZXlzdG9yZV9hbGlhcwogIHRp\
dGxlOiBLZXlzdG9yZSBjZXJ0aWZpY2F0ZSBhbGlhcwogIGRlc2NyaXB0aW9uOiBOYW1lIG9mIHRoZSBjZXJ0aWZpY2F0ZSBhbGlhcyBpbmNsdWRlZCBpbiB0aGUga2V5c3RvcmUgdG8gYmUgdXNlZCBieSB0aGUgc2VydmVyIHRvIGFjY2VwdCBIVFRQUyBjb25uZWN0aW9ucy4gSWYgYSBzZWNyZXQgbmFtZSBpcyBub3QgcHJvdmlkZWQsIHRoZSBzZXJ2ZXIgZ2VuZXJhdGVzIGEgc2VyZXQgd2l0aCB0aGlzIGFsaWFzLgogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogc3RyaW5nCiAgZGVmYXVsdDogamJvc3MKX2FwYl9rZXlzdG9yZV9wd2Q6ICZfYXBiX2tleXN0b3JlX3B3ZAogIHRpdGxlOiBLZXlzdG9yZSBhbmQgQ2VydGlmaWNhdGUgUGFzc3dvcmQKICBkZXNjcmlwdGlvbjogUGFz\
c3dvcmQgcHJvdGVjdGluZyBib3RoIHRoZSBLZXlzdG9yZSBhbmQgdGhlIENlcnRpZmljYXRlLiBHZW5lcmF0ZWQgaWYgZW1wdHkKICB0eXBlOiBzdHJpbmcKICBtaW5fbGVuZ3RoOiA2CiAgZGlzcGxheV90eXBlOiBwYXNzd29yZApfYXBiX3ZvbHVtZV9zaXplOiAmX2FwYl92b2x1bWVfc2l6ZQogIHRpdGxlOiBXb3Jrc3BhY2UgU3RvcmFnZSBTaXplCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBzdHJpbmcKICBwYXR0ZXJuOiAiXlswLTldK1ttTWdHdFRdaT8kIgpfYXBiX2hvc3RuYW1lOiAmX2FwYl9ob3N0bmFtZQogIHRpdGxlOiBQdWJsaWMgSG9zdG5hbWUKICB0eXBlOiBzdHJpbmcKIyBCdXNpbmVzcyBDZW50cmFsCl9hcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lOiAm\
X2FwYl9idXNpbmVzc2NlbnRyYWxfaG9zdG5hbWUKICA8PDogKl9hcGJfaG9zdG5hbWUKICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lCiAgZGVzY3JpcHRpb246IFB1YmxpYyBob3N0bmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJhbC4gR2VuZXJhdGVkIGlmIGVtcHR5CiMgT0NQIEVuYWJsZW1lbnQKX2FwYl9jb250cm9sbGVyX29jcF9lbmFibGVkOiAmX2FwYl9jb250cm9sbGVyX29jcF9lbmFibGVkCiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfb2NwX2VuYWJsZWQKICB0aXRsZTogRW5hYmxlIE9wZW5TaGlmdCBJbnRlZ3JhdGlvbgogIGRlc2NyaXB0aW9uOiBJZiBzZXQgdG8gdHJ1ZSwgdHVybnMgb24gT3BlblNoaWZ0IGludGVncmF0aW9uIGZlYXR1cmUgKFNldHMg\
dGhlIG9yZy5raWUud29ya2JlbmNoLmNvbnRyb2xsZXIub3BlbnNoaWZ0LmVuYWJsZWQgc3lzdGVtIHByb3BlcnR5KQogIHR5cGU6IGJvb2xlYW4KICBkZWZhdWx0OiBmYWxzZQogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKX2FwYl9jb250cm9sbGVyX3ByZWZlcl9raWVzZXJ2ZXJfc3ZjOiAmX2FwYl9jb250cm9sbGVyX3ByZWZlcl9raWVzZXJ2ZXJfc3ZjCiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfcHJlZmVyX2tpZXNlcnZlcl9zdmMKICB0aXRsZTogUHJlZmVyIFByb2Nlc3MgU2VydmVyIE9wZW5TaGlmdCBTZXJ2aWNlCiAgZGVzY3JpcHRpb246IEVuYWJsZXMgY29ubmVjdGlvbiB0byBQcm9jZXNzIFNlcnZlciB2aWEgT3BlblNoaWZ0IGludGVybmFsIFNlcnZp\
Y2UgZW5kcG9pbnQgKFNldHMgdGhlIG9yZy5raWUuc2VydmVyLmNvbnRyb2xsZXIub3BlbnNoaWZ0LnByZWZlci5raWVzZXJ2ZXIuc2VydmljZSBzeXN0ZW0gcHJvcGVydHkpCiAgdHlwZTogYm9vbGVhbgogIGRlZmF1bHQ6IGZhbHNlCiAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbApfYXBiX2NvbnRyb2xsZXJfdGVtcGxhdGVfY2FjaGVfdHRsOiAmX2FwYl9jb250cm9sbGVyX3RlbXBsYXRlX2NhY2hlX3R0bAogIG5hbWU6IGFwYl9jb250cm9sbGVyX3RlbXBsYXRlX2NhY2hlX3R0bAogIHRpdGxlOiBQcm9jZXNzIFNlcnZlciBUZW1wbGF0ZSBDYWNoZSBUVEwKICBkZXNjcmlwdGlvbjogUHJvY2VzcyBTZXJ2ZXIgVGVtcGxhdGUgQ2FjaGUgVFRMIGluIG1pbGxpc2Vj\
b25kcyAoU2V0cyB0aGUgb3JnLmtpZS5zZXJ2ZXIuY29udHJvbGxlci50ZW1wbGF0ZS5jYWNoZS50dGwgc3lzdGVtIHByb3BlcnR5KQogIHR5cGU6IG51bWJlcgogIGRlZmF1bHQ6IDYwMDAwCiAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbApfYXBiX2J1c2luZXNzY2VudHJhbF9zZWNyZXRfbmFtZTogJl9hcGJfYnVzaW5lc3NjZW50cmFsX3NlY3JldF9uYW1lCiAgPDw6ICpfYXBiX3NlY3JldF9uYW1lCiAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF9zZWNyZXRfbmFtZQogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9uYW1lOiAmX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3Rv\
cmVfbmFtZQogIDw8OiAqX2FwYl9rZXlzdG9yZV9uYW1lCiAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9uYW1lCiAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX2FsaWFzOiAmX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfYWxpYXMKICA8PDogKl9hcGJfa2V5c3RvcmVfYWxpYXMKICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX2FsaWFzCiAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX3B3ZDogJl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX3B3ZAogIDw8\
OiAqX2FwYl9rZXlzdG9yZV9wd2QKICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX3B3ZAogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwojIEdpdCBIb29rcwpfYXBiX2dpdF9ob29rc19kaXI6ICZfYXBiX2dpdF9ob29rc19kaXIKICBuYW1lOiBhcGJfZ2l0X2hvb2tzX2RpcgogIHRpdGxlOiBHaXQgaG9va3MgZGlyZWN0b3J5CiAgZGVzY3JpcHRpb246IFRoZSBkaXJlY3RvcnkgdG8gdXNlIGZvciBnaXQgaG9va3MsIGlmIHJlcXVpcmVkLiBlLmcuIC9vcHQvZWFwL3N0YW5kYWxvbmUvZGF0YS9raWUvZ2l0L2hvb2tzCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbApfYXBiX2J1c2luZXNz\
Y2VudHJhbF9tYXZlbl9yZXBvX3VzZXI6ICZfYXBiX2J1c2luZXNzY2VudHJhbF9tYXZlbl9yZXBvX3VzZXIKICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX21hdmVuX3JlcG9fdXNlcgogIHRpdGxlOiBNYXZlbiBSZXBvc2l0b3J5IFVzZXJuYW1lCiAgZGVzY3JpcHRpb246IFVzZXJuYW1lIHRvIHVzZSB0byBpbnRlcmFjdCB3aXRoIHRoZSBCdXNpbmVzcyBDZW50cmFsIE1hdmVuIHJlcG9zaXRvcnkuCiAgdHlwZTogc3RyaW5nCiAgZGVmYXVsdDogbWF2ZW5Vc2VyCiAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbApfYXBiX2J1c2luZXNzY2VudHJhbF9tYXZlbl9yZXBvX3B3ZDogJl9hcGJfYnVzaW5lc3NjZW50cmFsX21hdmVuX3JlcG9fcHdkCiAgbmFtZTogYXBi\
X2J1c2luZXNzY2VudHJhbF9tYXZlbl9yZXBvX3B3ZAogIHRpdGxlOiBNYXZlbiBSZXBvc2l0b3J5IFBhc3N3b3JkCiAgZGVzY3JpcHRpb246IFBhc3N3b3JkIHRvIHVzZSB0byBpbnRlcmFjdCB3aXRoIHRoZSBCdXNpbmVzcyBDZW50cmFsIE1hdmVuIHJlcG9zaXRvcnkuIEdlbmVyYXRlZCBpZiBlbXB0eQogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfdHlwZTogcGFzc3dvcmQKICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCiMgUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfbW9kZTogJl9hcGJfa2llc2VydmVyX21vZGUKICBuYW1lOiBhcGJfa2llc2VydmVyX21vZGUKICB0aXRsZTogUHJvY2VzcyBTZXJ2ZXIgTW9kZQogIGRlc2NyaXB0aW9uOiBUaGUgS0lF\
IFNlcnZlciBtb2RlLiBWYWxpZCB2YWx1ZXMgYXJlICdERVZFTE9QTUVOVCcgb3IgJ1BST0RVQ1RJT04nLiAoU2V0cyB0aGUgb3JnLmtpZS5zZXJ2ZXIubW9kZSBzeXN0ZW0gcHJvcGVydHkpLgogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogZW51bQogIGVudW06IFsnREVWRUxPUE1FTlQnLCAnUFJPRFVDVElPTiddCiAgZGVmYXVsdDogREVWRUxPUE1FTlQKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9pbWFnZV9zdHJlYW1fbmFtZTogJl9hcGJfa2llc2VydmVyX2ltYWdlX3N0cmVhbV9uYW1lCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9pbWFnZV9zdHJlYW1fbmFtZQogIHRpdGxlOiBQcm9jZXNzIFNlcnZlciBJbWFnZSBTdHJlYW0gTmFtZQog\
IGRlc2NyaXB0aW9uOiBJbWFnZSBTdHJlYW0gTmFtZSB0byB1c2UgZm9yIFByb2Nlc3MgU2VydmVyLiBJZiB5b3UgaGF2ZSBnZW5lcmF0ZWQgYSBjdXN0b20gaW1hZ2UgKGZvciBleGFtcGxlLCB0byBwcm92aWRlIGEgZGF0YWJhc2Ugc2VydmVyIGRyaXZlciksIHlvdSBjYW4gY2hhbmdlIHRoaXMgcGFyYW1ldGVyIHRvIHVzZSBpdC4KICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IHJocGFtNzQta2llc2VydmVyLW9wZW5zaGlmdAogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX3VzZXI6ICZfYXBiX2tpZXNlcnZlcl91c2VyCiAgbmFtZTogYXBiX2tpZXNlcnZlcl91c2VyCiAgdGl0bGU6IFByb2Nlc3MgU2VydmVy\
IFVzZXJuYW1lCiAgZGVzY3JpcHRpb246IFVzZXIgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgUHJvY2VzcyBTZXJ2ZXIgdXNpbmcgdGhlIFJFU1QgQVBJCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBzdHJpbmcKICBkZWZhdWx0OiBleGVjdXRpb25Vc2VyCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfcHdkOiAmX2FwYl9raWVzZXJ2ZXJfcHdkCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9wd2QKICB0aXRsZTogUHJvY2VzcyBTZXJ2ZXIgUGFzc3dvcmQKICBkZXNjcmlwdGlvbjogVXNlciBwYXNzd29yZCB0byBpbnRlcmFjdCB3aXRoIHRoZSBQcm9jZXNzIFNlcnZlciB1c2luZyB0aGUgUkVTVCBBUEkuIEdlbmVyYXRlZCBpZiBlbXB0eQogIHR5cGU6\
IHN0cmluZwogIGRpc3BsYXlfdHlwZTogcGFzc3dvcmQKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9zZWNyZXRfbmFtZTogJl9hcGJfa2llc2VydmVyX3NlY3JldF9uYW1lCiAgPDw6ICpfYXBiX3NlY3JldF9uYW1lCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9zZWNyZXRfbmFtZQogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX2tleXN0b3JlX25hbWU6ICZfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9uYW1lCiAgPDw6ICpfYXBiX2tleXN0b3JlX25hbWUKICBuYW1lOiBhcGJfa2llc2VydmVyX2tleXN0b3JlX25hbWUKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9rZXlz\
dG9yZV9hbGlhczogJl9hcGJfa2llc2VydmVyX2tleXN0b3JlX2FsaWFzCiAgPDw6ICpfYXBiX2tleXN0b3JlX2FsaWFzCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9hbGlhcwogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX2tleXN0b3JlX3B3ZDogJl9hcGJfa2llc2VydmVyX2tleXN0b3JlX3B3ZAogIDw8OiAqX2FwYl9rZXlzdG9yZV9wd2QKICBuYW1lOiBhcGJfa2llc2VydmVyX2tleXN0b3JlX3B3ZAogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX2hvc3RuYW1lOiAmX2FwYl9raWVzZXJ2ZXJfaG9zdG5hbWUKICA8PDogKl9hcGJfaG9zdG5hbWUKICBuYW1lOiBhcGJfa2llc2VydmVyX2hv\
c3RuYW1lCiAgZGVzY3JpcHRpb246IFB1YmxpYyBob3N0bmFtZSBmb3IgUHJvY2VzcyBTZXJ2ZXIuIEdlbmVyYXRlZCBpZiBlbXB0eQpfYXBiX2tpZXNlcnZlcl9zdGFydHVwX3N0cmF0ZWd5OiAmX2FwYl9raWVzZXJ2ZXJfc3RhcnR1cF9zdHJhdGVneQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc3RhcnR1cF9zdHJhdGVneQogIHRpdGxlOiBTdGFydHVwIFN0cmF0ZWd5CiAgZGVzY3JpcHRpb246ICJXaGVuIHNldCB0byBPcGVuU2hpZnRTdGFydHVwU3RyYXRlZ3ksIGFsbG93cyBQcm9jZXNzIFNlcnZlciB0byBzdGFydCB1cCBpbmRlcGVuZGVudGx5IHVzZWQgc2hhcmVkIHN0YXRlIGZyb20gT3BlblNoaWZ0IEFQSSBzZXJ2aWNlLiBUaGUgT3BlblNoaWZ0U3RhcnR1cFN0cmF0ZWd5\
IHN0cmF0ZWd5IGlzIHN0aWxsIFRlY2hub2xvZ3kgUHJldmlldy4gRGVmYXVsdDogQ29udHJvbGxlckJhc2VkU3RhcnR1cFN0cmF0ZWd5IgogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogZW51bQogIGVudW06IFsnQ29udHJvbGxlckJhc2VkU3RhcnR1cFN0cmF0ZWd5JywnT3BlblNoaWZ0U3RhcnR1cFN0cmF0ZWd5J10KICBkZWZhdWx0OiBDb250cm9sbGVyQmFzZWRTdGFydHVwU3RyYXRlZ3kKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9kYl90eXBlOiAmX2FwYl9raWVzZXJ2ZXJfZGJfdHlwZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfZGJfdHlwZQogIHRpdGxlOiBEYXRhYmFzZSBUeXBlCiAgZGVzY3JpcHRpb246IERhdGFiYXNlIFR5cGUg\
dG8gcGVyc2lzdCB0aGUgUHJvY2VzcyBTZXJ2ZXIgcnVudGltZSBpbmZvcm1hdGlvbi4gRE8gTk9UIFVTRSBIMiBmb3IgZGVwbG95aW5nIG1vcmUgdGhhbiAxIGluc3RhbmNlIG9mIFByb2Nlc3MgU2VydmVyLiBGb3IgSDIsIFBvc3RncmVTUUwsIGFuZCBNeVNRTCB0aGUgZGF0YWJhc2Ugc2VydmVyIHdpbGwgYmUgZGVwbG95ZWQgaW4gYSBwb2QuIFRvIHVzZSBhIGRhdGFiYXNlIHNlcnZlciB0aGF0IGlzIGRlcGxveWVkIGVsc2V3aGVyZSwgc2VsZWN0IEV4dGVybmFsLgogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogZW51bQogIGVudW06IFsgJ0gyJywgJ1Bvc3RncmVTUUwnLCAnTXlTUUwnLCAnRXh0ZXJuYWwnIF0KICBkZWZhdWx0OiBQb3N0Z3JlU1FMCiAgZGlzcGxheV9ncm91\
cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfZGJfc2l6ZTogJl9hcGJfa2llc2VydmVyX2RiX3NpemUKICA8PDogKl9hcGJfdm9sdW1lX3NpemUKICBuYW1lOiBhcGJfa2llc2VydmVyX2RiX3NpemUKICB0aXRsZTogRGF0YWJhc2UgU3RvcmFnZSBTaXplCiAgZGVzY3JpcHRpb246IFBlcnNpc3RlbnQgVm9sdW1lIENsYWltIHNpemUgdG8gY3JlYXRlIGZvciB0aGUgRGF0YWJhc2UuIEZvciBleGFtcGxlLCAxR2kuIElnbm9yZWQgaWYgRXh0ZXJuYWwgaXMgc2VsZWN0ZWQKICBkZWZhdWx0OiAxR2kKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kcml2ZXI6ICZfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9k\
cml2ZXIKICBuYW1lOiBhcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RyaXZlcgogIHRpdGxlOiBEcml2ZXIgbmFtZQogIGRlc2NyaXB0aW9uOiBEYXRhYmFzZSBkcml2ZXIgdHlwZS4gUmVxdWlyZWQgZm9yIEV4dGVybmFsIGRhdGFiYXNlLiBGb3IgZXhhbXBsZSwgbXlzcWwgb3IgcG9zdGdyZXNxbAogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEV4dGVybmFsIERhdGFiYXNlIChvbmx5IGlmIERhdGFiYXNlIHR5cGUgaXMgRXh0ZXJuYWwpCl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RpYWxlY3Q6ICZfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kaWFsZWN0CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kaWFsZWN0CiAgdGl0bGU6IERpYWxl\
Y3QgY2xhc3MKICBkZXNjcmlwdGlvbjogSGliZXJuYXRlIGRpYWxlY3QgY2xhc3MgdG8gdXNlLiBSZXF1aXJlZCBmb3IgRXh0ZXJuYWwgZGF0YWJhc2UuIEZvciBleGFtcGxlLCBvcmcuaGliZXJuYXRlLmRpYWxlY3QuTXlTUUw1N0RpYWxlY3QKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBFeHRlcm5hbCBEYXRhYmFzZSAob25seSBpZiBEYXRhYmFzZSB0eXBlIGlzIEV4dGVybmFsKQpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9ob3N0OiAmX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfaG9zdAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfaG9zdAogIHRpdGxlOiBIb3N0CiAgZGVzY3JpcHRpb246IEV4dGVybmFsIGRhdGFiYXNlIHNlcnZlciBo\
b3N0LiBSZXF1aXJlZCBmb3IgRXh0ZXJuYWwgZGF0YWJhc2UuIEZvciBleGFtcGxlLCAxMjcuMC4wLjEKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBFeHRlcm5hbCBEYXRhYmFzZSAob25seSBpZiBEYXRhYmFzZSB0eXBlIGlzIEV4dGVybmFsKQpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9wb3J0OiAmX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfcG9ydAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfcG9ydAogIHRpdGxlOiBQb3J0CiAgZGVzY3JpcHRpb246IEV4dGVybmFsIGRhdGFiYXNlIHNlcnZlciBwb3J0LiBSZXF1aXJlZCBmb3IgRXh0ZXJuYWwgZGF0YWJhc2UuIEZvciBleGFtcGxlLCAzMzA2CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxh\
eV9ncm91cDogRXh0ZXJuYWwgRGF0YWJhc2UgKG9ubHkgaWYgRGF0YWJhc2UgdHlwZSBpcyBFeHRlcm5hbCkKX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfbmFtZTogJl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX25hbWUKICBuYW1lOiBhcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX25hbWUKICB0aXRsZTogRGF0YWJhc2UgTmFtZQogIGRlc2NyaXB0aW9uOiBFeHRlcm5hbCBEYXRhYmFzZSBuYW1lLiBSZXF1aXJlZCBmb3IgRXh0ZXJuYWwgZGF0YWJhc2UuIEZvciBleGFtcGxlLCByaHBhbQogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEV4dGVybmFsIERhdGFiYXNlIChvbmx5IGlmIERhdGFiYXNlIHR5cGUgaXMgRXh0ZXJuYWwpCl9hcGJfa2llc2VydmVyX2V4\
dGVybmFsX2RiX3VybDogJl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3VybAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfdXJsCiAgdGl0bGU6IERhdGFiYXNlIEpEQkMgVVJMCiAgZGVzY3JpcHRpb246IEV4dGVybmFsIGRhdGFiYXNlIHNlcnZlciBKREJDIFVSTC4gUmVxdWlyZWQgZm9yIEV4dGVybmFsIGRhdGFiYXNlLiBGb3IgZXhhbXBsZSwgamRiYzpteXNxbDoxMjcuMC4wLjE6MzMwNi9yaHBhbQogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEV4dGVybmFsIERhdGFiYXNlIChvbmx5IGlmIERhdGFiYXNlIHR5cGUgaXMgRXh0ZXJuYWwpCgojIEpNUyBlbnZzCl9hcGJfZW5hYmxlX2tpZXNlcnZlcl9qbXNfaW50ZWdyYXRpb246ICZfYXBiX2Vu\
YWJsZV9raWVzZXJ2ZXJfam1zX2ludGVncmF0aW9uCiAgbmFtZTogYXBiX2VuYWJsZV9raWVzZXJ2ZXJfam1zX2ludGVncmF0aW9uCiAgdGl0bGU6IEVuYWJsZSBKTVMgaW50ZWdyYXRpb24KICBkZXNjcmlwdGlvbjogV2hlbiBzZXQgdG8gdHJ1ZSB3aWxsIGNvbmZpZ3VyZSB0aGUgS0lFIFNlcnZlciB3aXRoIEpNUyBpbnRlZ3JhdGlvbiwgaWYgbm8gY29uZmlndXJhdGlvbiBpcyBhZGRlZCwgdGhlIGRlZmF1bHQgd2lsbCBiZSB1c2VkLgogIHR5cGU6IGJvb2xlYW4KICBkZWZhdWx0OiBmYWxzZQogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3I6ICZfYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3IKICBuYW1lOiBhcGJf\
a2llc2VydmVyX2ptc19leGVjdXRvcgogIHRpdGxlOiBFbmFibGUgSk1TIEV4ZWN1dG9yCiAgZGVzY3JpcHRpb246IEVuYWJsZXMgdGhlIEpNUyBleGVjdXRvciwgdW5jaGVjayB0byBkaXNhYmxlIGl0LgogIHR5cGU6IGJvb2xlYW4KICBkZWZhdWx0OiB0cnVlCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9leGVjdXRvcjogJl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9leGVjdXRvcgogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2V4ZWN1dG9yCiAgdGl0bGU6IEtJRSBTZXJ2ZXIgSk1TIEV4ZWN1dG9yIFF1ZXVlCiAgZGVzY3JpcHRpb246IEpOREkgbmFtZSBvZiBleGVjdXRvciBxdWV1ZSBmb3IgSk1TLCBl\
eGFtcGxlIHF1ZXVlL0NVU1RPTS5LSUUuU0VSVkVSLkVYRUNVVE9SLCBkZWZhdWx0IGlzIHF1ZXVlL0tJRS5TRVJWRVIuRVhFQ1VUT1IuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcl90cmFuc2FjdGVkOiAmX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yX3RyYW5zYWN0ZWQKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19leGVjdXRvcl90cmFuc2FjdGVkCiAgdGl0bGU6IEtJRSBTZXJ2ZXIgVHJhbnNhY3RlZCBFeGVjdXRvcgogIGRlc2NyaXB0aW9uOiBFbmFibGUgdHJhbnNhY3Rpb25zIGZvciBKTVMgZXhlY3V0b3IsIGRpc2FibGVkIGJ5IGRlZmF1bHQuCiAgdHlwZTogYm9vbGVhbgog\
IGRlZmF1bHQ6IHRydWUKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3JlcXVlc3Q6ICZfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVxdWVzdAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3JlcXVlc3QKICB0aXRsZTogS0lFIFNlcnZlciBKTVMgUmVxdWVzdCBRdWV1ZQogIGRlc2NyaXB0aW9uOiBKTkRJIG5hbWUgb2YgcmVxdWVzdCBxdWV1ZSBmb3IgSk1TLCBleGFtcGxlIHF1ZXVlL0NVU1RPTS5LSUUuU0VSVkVSLlJFUVVFU1QsIGRlZmF1bHQgaXMgcXVldWUvS0lFLlNFUlZFUi5SRVFVRVNULgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZl\
cl9qbXNfcXVldWVfcmVzcG9uc2U6ICZfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVzcG9uc2UKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXNwb25zZQogIHRpdGxlOiBLSUUgU2VydmVyIEpNUyBSZXNwb25zZSBRdWV1ZQogIGRlc2NyaXB0aW9uOiBKTkRJIG5hbWUgb2YgcmVzcG9uc2UgcXVldWUgZm9yIEpNUywgZXhhbXBsZSBxdWV1ZS9DVVNUT00uS0lFLlNFUlZFUi5SRVNQT05TRSwgZGVmYXVsdCBpcyBxdWV1ZS9LSUUuU0VSVkVSLlJFU1BPTlNFLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX3NpZ25hbDogJl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfc2lnbmFs\
CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX3NpZ25hbAogIHRpdGxlOiBFbmFibGUgS0lFIFNlcnZlciBKTVMgU2lnbmFsIFF1ZXVlCiAgZGVzY3JpcHRpb246IEVuYWJsZSB0aGUgU2lnbmFsIGNvbmZpZ3VyYXRpb24gdGhyb3VnaCBKTVMuIERlZmF1bHQgaXMgZmFsc2UuCiAgdHlwZTogYm9vbGVhbgogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfc2lnbmFsOiAmX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3NpZ25hbAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3NpZ25hbAogIHRpdGxlOiBLSUUgU2VydmVyIEpNUyBTaWduYWwgUXVldWUKICBkZXNjcmlwdGlvbjogSk5ESSBuYW1lIG9mIHNp\
Z25hbCBxdWV1ZSBmb3IgSk1TLCBleGFtcGxlIHF1ZXVlL0NVU1RPTS5LSUUuU0VSVkVSLlNJR05BTCwgZGVmYXVsdCBpcyBxdWV1ZS9LSUUuU0VSVkVSLlNJR05BTC4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9hdWRpdDogJl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfYXVkaXQKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19lbmFibGVfYXVkaXQKICB0aXRsZTogRW5hYmxlIEtJRSBTZXJ2ZXIgSk1TIEF1ZGl0CiAgZGVzY3JpcHRpb246IEVuYWJsZSB0aGUgQXVkaXQgbG9nZ2luZyB0aHJvdWdoIEpNUy4gRGVmYXVsdCBpcyBmYWxzZS4KICB0eXBlOiBib29sZWFuCiAgZGlzcGxheV9n\
cm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9hdWRpdDogJl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9hdWRpdAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2F1ZGl0CiAgdGl0bGU6IEtJRSBTZXJ2ZXIgSk1TIEF1ZGl0IFF1ZXVlCiAgZGVzY3JpcHRpb246IEpOREkgbmFtZSBvZiBhdWRpdCBsb2dnaW5nIHF1ZXVlIGZvciBKTVMsIGV4YW1wbGUgcXVldWUvQ1VTVE9NLktJRS5TRVJWRVIuQVVESVQsIGRlZmF1bHQgaXMgcXVldWUvS0lFLlNFUlZFUi5BVURJVC4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX2F1ZGl0X3RyYW5zYWN0ZWQ6ICZfYXBiX2tp\
ZXNlcnZlcl9qbXNfYXVkaXRfdHJhbnNhY3RlZAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX2F1ZGl0X3RyYW5zYWN0ZWQKICB0aXRsZTogS0lFIFNlcnZlciBKTVMgQXVkaXQgbG9nZ2VyIHRyYW5zYWN0ZWQKICBkZXNjcmlwdGlvbjogRGV0ZXJtaW5lcyBpZiBKTVMgc2Vzc2lvbiBpcyB0cmFuc2FjdGVkIG9yIG5vdCAtIGRlZmF1bHQgdHJ1ZS4KICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDogdHJ1ZQogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfdXNlcm5hbWU6ICZfYXBiX2tpZXNlcnZlcl9qbXNfdXNlcm5hbWUKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc191c2VybmFtZQogIHRpdGxlOiBBTVEgVXNlcm5hbWUKICBkZXNj\
cmlwdGlvbjogQU1RIGJyb2tlciB1c2VybmFtZSB0byBjb25uZWN0IGRvIHRoZSBBTVEsIGdlbmVyYXRlZCBpZiBlbXB0eS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX3Bhc3N3b3JkOiAmX2FwYl9raWVzZXJ2ZXJfam1zX3Bhc3N3b3JkCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfcGFzc3dvcmQKICB0aXRsZTogQU1RIFBhc3N3b3JkCiAgZGVzY3JpcHRpb246IEFNUSBicm9rZXIgcGFzc3dvcmQgdG8gY29ubmVjdCBkbyB0aGUgQU1RLCBnZW5lcmF0ZWQgaWYgZW1wdHkuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19hbXFf\
cXVldWVzOiAmX2FwYl9raWVzZXJ2ZXJfam1zX2FtcV9xdWV1ZXMKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19hbXFfcXVldWVzCiAgdGl0bGU6IEFNUSBRdWV1ZXMKICBkZXNjcmlwdGlvbjogQU1RIGJyb2tlciBicm9rZXIgY29tbWEgc2VwYXJhdGVkIHF1ZXVlcywgaWYgc2V0IHRoZSBRVUVVRVMgbmFtZSB3aWxsIGJlIGlnbm9yZWQsIGlmIGVtcHR5IHRoZSB2YWx1ZXMgZnJvbSBkZWZhdWx0IHF1ZXVlcyB3aWxsIGJlIHVzZWQuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCgojIEV4dGVybmFsIFNlcnZpY2VzIEludGVncmF0aW9uCl9hcGJfc3ZjOiAmX2FwYl9zdmMKICB0aXRsZTogU2VydmljZSBuYW1lCiAgZGVzY3JpcHRpb246\
IE5hbWUgb2YgdGhlIFNlcnZpY2UKICB0eXBlOiBzdHJpbmcKX2FwYl9ob3N0OiAmX2FwYl9ob3N0CiAgdGl0bGU6IEhvc3QKICBkZXNjcmlwdGlvbjogSG9zdAogIHR5cGU6IHN0cmluZwpfYXBiX3BvcnQ6ICZfYXBiX3BvcnQKICB0aXRsZTogSG9zdCBwb3J0CiAgZGVzY3JpcHRpb246IEhvc3QgcG9ydAogIHR5cGU6IHN0cmluZwpfYXBiX3Byb3RvY29sX3R5cGU6ICZfYXBiX3Byb3RvY29sX3R5cGUKICB0aXRsZTogSG9zdCBQcm90b2NvbAogIGRlc2NyaXB0aW9uOiBIb3N0IHByb3RvY29sIChodHRwL2h0dHBzKQogIHR5cGU6IGVudW0KICBlbnVtOiBbICdodHRwJywgJ2h0dHBzJyBdCiMgUm91dGVyCl9hcGJfcm91dGVyX3N2YzogJl9hcGJfcm91dGVyX3N2YwogIDw8OiAq\
X2FwYl9zdmMKICBuYW1lOiBhcGJfcm91dGVyX3N2YwogIGRpc3BsYXlfZ3JvdXA6IFJvdXRlciBJbnRlZ3JhdGlvbgpfYXBiX3JvdXRlcl9ob3N0OiAmX2FwYl9yb3V0ZXJfaG9zdAogIDw8OiAqX2FwYl9ob3N0CiAgbmFtZTogYXBiX3JvdXRlcl9ob3N0CiAgZGlzcGxheV9ncm91cDogUm91dGVyIEludGVncmF0aW9uCl9hcGJfcm91dGVyX3BvcnQ6ICZfYXBiX3JvdXRlcl9wb3J0CiAgPDw6ICpfYXBiX3BvcnQKICBuYW1lOiBhcGJfcm91dGVyX3BvcnQKICBkaXNwbGF5X2dyb3VwOiBSb3V0ZXIgSW50ZWdyYXRpb24KX2FwYl9yb3V0ZXJfcHJvdG9jb2w6ICZfYXBiX3JvdXRlcl9wcm90b2NvbAogIDw8OiAqX2FwYl9wcm90b2NvbF90eXBlCiAgbmFtZTogYXBiX3JvdXRlcl9w\
cm90b2NvbAogIGRpc3BsYXlfZ3JvdXA6IFJvdXRlciBJbnRlZ3JhdGlvbgojIENvbnRyb2xsZXIKX2FwYl9jb250cm9sbGVyX3N2YzogJl9hcGJfY29udHJvbGxlcl9zdmMKICA8PDogKl9hcGJfc3ZjCiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfc3ZjCiAgZGlzcGxheV9ncm91cDogQ29udHJvbGxlciBJbnRlZ3JhdGlvbgpfYXBiX2NvbnRyb2xsZXJfaG9zdDogJl9hcGJfY29udHJvbGxlcl9ob3N0CiAgPDw6ICpfYXBiX2hvc3QKICBuYW1lOiBhcGJfY29udHJvbGxlcl9ob3N0CiAgZGlzcGxheV9ncm91cDogQ29udHJvbGxlciBJbnRlZ3JhdGlvbgpfYXBiX2NvbnRyb2xsZXJfcG9ydDogJl9hcGJfY29udHJvbGxlcl9wb3J0CiAgPDw6ICpfYXBiX3BvcnQKICBuYW1lOiBhcGJf\
Y29udHJvbGxlcl9wb3J0CiAgZGlzcGxheV9ncm91cDogQ29udHJvbGxlciBJbnRlZ3JhdGlvbgpfYXBiX2NvbnRyb2xsZXJfcHJvdG9jb2w6ICZfYXBiX2NvbnRyb2xsZXJfcHJvdG9jb2wKICA8PDogKl9hcGJfcHJvdG9jb2xfdHlwZQogIG5hbWU6IGFwYl9jb250cm9sbGVyX3Byb3RvY29sCiAgZGlzcGxheV9ncm91cDogQ29udHJvbGxlciBJbnRlZ3JhdGlvbgpfYXBiX2NvbnRyb2xsZXJfdG9rZW46ICZfYXBiX2NvbnRyb2xsZXJfdG9rZW4KICBuYW1lOiBhcGJfY29udHJvbGxlcl90b2tlbgogIHRpdGxlOiBDb250cm9sbGVyIEF1dGggVG9rZW4KICBkZXNjcmlwdGlvbjogQ29udHJvbGxlciBhdXRoZW50aWNhdGlvbiBUb2tlbgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlf\
Z3JvdXA6IENvbnRyb2xsZXIgSW50ZWdyYXRpb24KX2FwYl9jb250cm9sbGVyX3VzZXI6ICZfYXBiX2NvbnRyb2xsZXJfdXNlcgogIG5hbWU6IGFwYl9jb250cm9sbGVyX3VzZXIKICB0aXRsZTogQ29udHJvbGxlciBVc2VybmFtZQogIGRlc2NyaXB0aW9uOiBVc2VybmFtZSB0byBhY2Nlc3MgdGhlIENvbnRyb2xsZXIKICB0eXBlOiBzdHJpbmcKICBkZWZhdWx0OiBtb25pdG9yVXNlcgpfYXBiX2NvbnRyb2xsZXJfcHdkOiAmX2FwYl9jb250cm9sbGVyX3B3ZAogIG5hbWU6IGFwYl9jb250cm9sbGVyX3B3ZAogIHRpdGxlOiBDb250cm9sbGVyIFBhc3N3b3JkCiAgZGVzY3JpcHRpb246IFVzZXIgcGFzc3dvcmQgdG8gYWNjZXNzIHRoZSBDb250cm9sbGVyLiBHZW5lcmF0ZWQgaWYg\
ZW1wdHkuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAojIFJILVNTTwpfYXBiX3Nzb191cmw6ICZfYXBiX3Nzb191cmwKICBuYW1lOiBhcGJfc3NvX3VybAogIHRpdGxlOiBSSC1TU08gVVJMCiAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gKFNTTykgVVJMLiBMZWF2ZSBlbXB0eSB0byBhdm9pZCB1c2luZyBTU08uIEZvciBleGFtcGxlLCBodHRwczovL3Joc3NvLmV4YW1wbGUuY29tL2F1dGgKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlvbmFsKQpfYXBiX3Nzb19yZWFsbTogJl9hcGJfc3NvX3JlYWxtCiAgbmFtZTogYXBiX3Nzb19yZWFsbQogIHRpdGxlOiBSSC1T\
U08gUmVhbG0KICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBSZWFsbSBuYW1lLiBGb3IgZXhhbXBsZSwgcmhwYW0KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlvbmFsKQpfYXBiX3Nzb19jbGllbnQ6ICZfYXBiX3Nzb19jbGllbnQKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlvbmFsKQpfYXBiX3Nzb19jbGllbnRfc2VjcmV0OiAmX2FwYl9zc29fY2xpZW50X3NlY3JldAogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfdHlwZTogcGFzc3dvcmQKICBkaXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlv\
bmFsKQpfYXBiX3Nzb191c2VyOiAmX2FwYl9zc29fdXNlcgogIG5hbWU6IGFwYl9zc29fdXNlcgogIHRpdGxlOiBSSC1TU08gQWRtaW4gVXNlcgogIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIFVzZXIgdG8gYmUgdXNlZCB0byBjcmVhdGUgdGhlIENsaWVudCBpZiBpdCBkb2Vzbid0IGV4aXN0LiBUaGUgdXNlciBtdXN0IGJlIGFibGUgdG8gY3JlYXRlIHNlY3JldHMgb24gdGhlIGdpdmVuIHJlYWxtLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IFJlZCBIYXQgLSBTaW5nbGUgU2lnbi1PbiAoT3B0aW9uYWwpCl9hcGJfc3NvX3B3ZDogJl9hcGJfc3NvX3B3ZAogIG5hbWU6IGFwYl9zc29fcHdkCiAgdGl0bGU6IFJILVNTTyBBZG1pbiBQYXNzd29y\
ZAogIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIFBhc3N3b3JkIHRvIHVzZSB0byBjcmVhdGUgdGhlIENsaWVudCBpZiBpdCBkb2Vzbid0IGV4aXN0LgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfdHlwZTogcGFzc3dvcmQKICBkaXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlvbmFsKQpfYXBiX3Nzb19kaXNhYmxlX3NzbF9jZXJ0X3ZhbGlkYXRpb246ICZfYXBiX3Nzb19kaXNhYmxlX3NzbF9jZXJ0X3ZhbGlkYXRpb24KICBuYW1lOiBhcGJfc3NvX2Rpc2FibGVfc3NsX2NlcnRfdmFsaWRhdGlvbgogIHRpdGxlOiBSSC1TU08gRGlzYWJsZSBTU0wgVmFsaWRhdGlvbgogIGRlc2NyaXB0aW9uOiBEaXNhYmxlIFNTTCBDZXJ0aWZp\
Y2F0ZSBWYWxpZGF0aW9uIHdoZW4gY29ubmVjdGluZyB0byBSSC1TU08KICB0eXBlOiBib29sZWFuCiAgZGlzcGxheV9ncm91cDogUmVkIEhhdCAtIFNpbmdsZSBTaWduLU9uIChPcHRpb25hbCkKX2FwYl9zc29fcHJpbmNpcGFsX2F0dHJpYnV0ZTogJl9hcGJfc3NvX3ByaW5jaXBhbF9hdHRyaWJ1dGUKICBuYW1lOiBhcGJfc3NvX3ByaW5jaXBhbF9hdHRyaWJ1dGUKICB0aXRsZTogUkgtU1NPIFByaW5jaXBhbCBBdHRyaWJ1dGUKICBkZXNjcmlwdGlvbjogUHJpbmNpcGFsIGF0dHJpYnV0ZSB0byB1c2UgYXMgdXNlcm5hbWUKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlvbmFsKQojIExEQVAgQXV0aApfYXBiX2F1\
dGhfbGRhcF91cmw6ICZfYXBiX2F1dGhfbGRhcF91cmwKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3VybAogIHRpdGxlOiBMREFQIEVuZHBvaW50CiAgZGVzY3JpcHRpb246IExEQVAgRW5kcG9pbnQgdG8gY29ubmVjdCBmb3IgYXV0aGVudGljYXRpb24uIGUuZy4gImxkYXA6Ly9teWxkYXAuZXhhbXBsZS5jb20iCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX2JpbmRfZG46ICZfYXBiX2F1dGhfbGRhcF9iaW5kX2RuCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9iaW5kX2RuCiAgdGl0bGU6IExEQVAgQmluZCBETgogIGRlc2NyaXB0aW9uOiBCaW5kIEROIHVzZWQgZm9yIGF1dGhlbnRpY2F0aW9uLiBlLmcuICJ1aWQ9YWRt\
aW4sb3U9dXNlcnMsb3U9ZXhtYW1wbGUsb3U9Y29tIgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9iaW5kX2NyZWRlbnRpYWw6ICZfYXBiX2F1dGhfbGRhcF9iaW5kX2NyZWRlbnRpYWwKICBuYW1lOiBhcGJfYXV0aF9sZGFwX2JpbmRfY3JlZGVudGlhbAogIHRpdGxlOiBMREFQIEJpbmQgQ3JlZGVudGlhbHMKICBkZXNjcmlwdGlvbjogTERBUCBDcmVkZW50aWFscyB1c2VkIGZvciBhdXRoZW50aWNhdGlvbgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfdHlwZTogcGFzc3dvcmQKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfamFhc19zZWN1cml0eV9kb21haW46ICZfYXBi\
X2F1dGhfbGRhcF9qYWFzX3NlY3VyaXR5X2RvbWFpbgogIG5hbWU6IGFwYl9hdXRoX2xkYXBfamFhc19zZWN1cml0eV9kb21haW4KICB0aXRsZTogTERBUCBKQUFTIFNlY3VyaXR5IERvbWFpbgogIGRlc2NyaXB0aW9uOiBUaGUgSk1YIE9iamVjdE5hbWUgb2YgdGhlIEphYXNTZWN1cml0eURvbWFpbiB1c2VkIHRvIGRlY3J5cHQgdGhlIHBhc3N3b3JkLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9iYXNlX2N0eF9kbjogJl9hcGJfYXV0aF9sZGFwX2Jhc2VfY3R4X2RuCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9iYXNlX2N0eF9kbgogIHRpdGxlOiBMREFQIEJhc2UgRE4KICBkZXNjcmlwdGlvbjogTERBUCBCYXNl\
IEROIG9mIHRoZSB0b3AtbGV2ZWwgY29udGV4dCB0byBiZWdpbiB0aGUgdXNlciBzZWFyY2guIGUuZy4gIm91PXVzZXJzLG91PWV4YW1wbGUsb3U9Y29tIgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9iYXNlX2ZpbHRlcjogJl9hcGJfYXV0aF9sZGFwX2Jhc2VfZmlsdGVyCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9iYXNlX2ZpbHRlcgogIHRpdGxlOiBMREFQIEJhc2UgU2VhcmNoIGZpbHRlcgogIGRlc2NyaXB0aW9uOiBMREFQIHNlYXJjaCBmaWx0ZXIgdXNlZCB0byBsb2NhdGUgdGhlIGNvbnRleHQgb2YgdGhlIHVzZXIgdG8gYXV0aGVudGljYXRlLiBUaGUgaW5wdXQgdXNlcm5hbWUgb3IgdXNlckROIG9idGFp\
bmVkIGZyb20gdGhlIGxvZ2luIG1vZHVsZSBjYWxsYmFjayBpcyBzdWJzdGl0dXRlZCBpbnRvIHRoZSBmaWx0ZXIgYW55d2hlcmUgYSB7MH0gZXhwcmVzc2lvbiBpcyB1c2VkLiBBIGNvbW1vbiBleGFtcGxlIGZvciB0aGUgc2VhcmNoIGZpbHRlciBpcyAodWlkPXswfSkuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3NlYXJjaF9zY29wZTogJl9hcGJfYXV0aF9sZGFwX3NlYXJjaF9zY29wZQogIG5hbWU6IGFwYl9hdXRoX2xkYXBfc2VhcmNoX3Njb3BlCiAgdGl0bGU6IExEQVAgU2VhcmNoIHNjb3BlCiAgZGVzY3JpcHRpb246IFRoZSBzZWFyY2ggc2NvcGUgdG8gdXNlLgogIHR5cGU6IGVudW0KICBlbnVtOiBb\
ICdTVUJUUkVFX1NDT1BFJywgJ09CSkVDVF9TQ09QRScsICdPTkVMRVZFTF9TQ09QRScgXQogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfdGltZV9saW1pdDogJl9hcGJfYXV0aF9sZGFwX3NlYXJjaF90aW1lX2xpbWl0CiAgbmFtZTogYXBiX2F1dGhfbGRhcF9zZWFyY2hfdGltZV9saW1pdAogIHRpdGxlOiBMREFQIFNlYXJjaCB0aW1lIGxpbWl0CiAgZGVzY3JpcHRpb246IFRoZSB0aW1lb3V0IGluIG1pbGxpc2Vjb25kcyBmb3IgdXNlciBvciByb2xlIHNlYXJjaGVzLiBlLmcuICIxMDAwMCIKICB0eXBlOiBudW1iZXIKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfZGlzdGluZ3Vpc2hl\
ZF9uYW1lX2F0dHJpYnV0ZTogJl9hcGJfYXV0aF9sZGFwX2Rpc3Rpbmd1aXNoZWRfbmFtZV9hdHRyaWJ1dGUKICBuYW1lOiBhcGJfYXV0aF9sZGFwX2Rpc3Rpbmd1aXNoZWRfbmFtZV9hdHRyaWJ1dGUKICB0aXRsZTogTERBUCBETiBhdHRyaWJ1dGUKICBkZXNjcmlwdGlvbjogVGhlIG5hbWUgb2YgdGhlIGF0dHJpYnV0ZSBpbiB0aGUgdXNlciBlbnRyeSB0aGF0IGNvbnRhaW5zIHRoZSBETiBvZiB0aGUgdXNlci4gVGhpcyBtYXkgYmUgbmVjZXNzYXJ5IGlmIHRoZSBETiBvZiB0aGUgdXNlciBpdHNlbGYgY29udGFpbnMgc3BlY2lhbCBjaGFyYWN0ZXJzLCBiYWNrc2xhc2ggZm9yIGV4YW1wbGUsIHRoYXQgcHJldmVudCBjb3JyZWN0IHVzZXIgbWFwcGluZy4gSWYgdGhlIGF0dHJp\
YnV0ZSBkb2VzIG5vdCBleGlzdCwgdGhlIGVudHJ54oCZcyBETiBpcyB1c2VkLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9wYXJzZV91c2VybmFtZTogJl9hcGJfYXV0aF9sZGFwX3BhcnNlX3VzZXJuYW1lCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9wYXJzZV91c2VybmFtZQogIHRpdGxlOiBMREFQIFBhcnNlIHVzZXJuYW1lCiAgZGVzY3JpcHRpb246IEEgZmxhZyBpbmRpY2F0aW5nIGlmIHRoZSBETiBpcyB0byBiZSBwYXJzZWQgZm9yIHRoZSB1c2VybmFtZS4gSWYgc2V0IHRvIHRydWUsIHRoZSBETiBpcyBwYXJzZWQgZm9yIHRoZSB1c2VybmFtZS4gSWYgc2V0IHRvIGZhbHNlIHRoZSBETiBpcyBub3QgcGFy\
c2VkIGZvciB0aGUgdXNlcm5hbWUuIFRoaXMgb3B0aW9uIGlzIHVzZWQgdG9nZXRoZXIgd2l0aCB1c2VybmFtZUJlZ2luU3RyaW5nIGFuZCB1c2VybmFtZUVuZFN0cmluZy4KICB0eXBlOiBib29sZWFuCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2JlZ2luX3N0cmluZzogJl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2JlZ2luX3N0cmluZwogIG5hbWU6IGFwYl9hdXRoX2xkYXBfdXNlcm5hbWVfYmVnaW5fc3RyaW5nCiAgdGl0bGU6IExEQVAgVXNlcm5hbWUgYmVnaW4gc3RyaW5nCiAgZGVzY3JpcHRpb246IERlZmluZXMgdGhlIFN0cmluZyB3aGljaCBpcyB0byBiZSByZW1vdmVkIGZyb20gdGhlIHN0YXJ0IG9mIHRoZSBE\
TiB0byByZXZlYWwgdGhlIHVzZXJuYW1lLiBUaGlzIG9wdGlvbiBpcyB1c2VkIHRvZ2V0aGVyIHdpdGggdXNlcm5hbWVFbmRTdHJpbmcgYW5kIG9ubHkgdGFrZW4gaW50byBhY2NvdW50IGlmIHBhcnNlVXNlcm5hbWUgaXMgc2V0IHRvIHRydWUuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2VuZF9zdHJpbmc6ICZfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9lbmRfc3RyaW5nCiAgbmFtZTogYXBiX2F1dGhfbGRhcF91c2VybmFtZV9lbmRfc3RyaW5nCiAgdGl0bGU6IExEQVAgVXNlcm5hbWUgZW5kIHN0cmluZwogIGRlc2NyaXB0aW9uOiBEZWZpbmVzIHRoZSBTdHJpbmcgd2hpY2ggaXMgdG8gYmUg\
cmVtb3ZlZCBmcm9tIHRoZSBlbmQgb2YgdGhlIEROIHRvIHJldmVhbCB0aGUgdXNlcm5hbWUuIFRoaXMgb3B0aW9uIGlzIHVzZWQgdG9nZXRoZXIgd2l0aCB1c2VybmFtZUVuZFN0cmluZyBhbmQgb25seSB0YWtlbiBpbnRvIGFjY291bnQgaWYgcGFyc2VVc2VybmFtZSBpcyBzZXQgdG8gdHJ1ZS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaWQ6ICZfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pZAogIG5hbWU6IGFwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaWQKICB0aXRsZTogTERBUCBSb2xlIGF0dHJpYnV0ZUlECiAgZGVzY3JpcHRpb246IE5hbWUgb2YgdGhlIGF0\
dHJpYnV0ZSBjb250YWluaW5nIHRoZSB1c2VyIHJvbGVzLiBlLmcuICJtZW1iZXJPZiIKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfcm9sZXNfY3R4X2RuOiAmX2FwYl9hdXRoX2xkYXBfcm9sZXNfY3R4X2RuCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9yb2xlc19jdHhfZG4KICB0aXRsZTogTERBUCBSb2xlcyBTZWFyY2ggRE4KICBkZXNjcmlwdGlvbjogVGhlIGZpeGVkIEROIG9mIHRoZSBjb250ZXh0IHRvIHNlYXJjaCBmb3IgdXNlciByb2xlcy4gVGhpcyBpcyBub3QgdGhlIEROIHdoZXJlIHRoZSBhY3R1YWwgcm9sZXMgYXJlLCBidXQgdGhlIEROIHdoZXJlIHRoZSBvYmplY3RzIGNvbnRhaW5pbmcgdGhlIHVz\
ZXIgcm9sZXMgYXJlLiBGb3IgZXhhbXBsZSwgaW4gYSBNaWNyb3NvZnQgQWN0aXZlIERpcmVjdG9yeSBzZXJ2ZXIsIHRoaXMgaXMgdGhlIEROIHdoZXJlIHRoZSB1c2VyIGFjY291bnQgaXMuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3JvbGVfZmlsdGVyOiAmX2FwYl9hdXRoX2xkYXBfcm9sZV9maWx0ZXIKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3JvbGVfZmlsdGVyCiAgdGl0bGU6IExEQVAgUm9sZSBzZWFyY2ggZmlsdGVyCiAgZGVzY3JpcHRpb246IEEgc2VhcmNoIGZpbHRlciB1c2VkIHRvIGxvY2F0ZSB0aGUgcm9sZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBhdXRoZW50aWNhdGVkIHVzZXIuIFRoZSBpbnB1\
dCB1c2VybmFtZSBvciB1c2VyRE4gb2J0YWluZWQgZnJvbSB0aGUgbG9naW4gbW9kdWxlIGNhbGxiYWNrIGlzIHN1YnN0aXR1dGVkIGludG8gdGhlIGZpbHRlciBhbnl3aGVyZSBhIHswfSBleHByZXNzaW9uIGlzIHVzZWQuIFRoZSBhdXRoZW50aWNhdGVkIHVzZXJETiBpcyBzdWJzdGl0dXRlZCBpbnRvIHRoZSBmaWx0ZXIgYW55d2hlcmUgYSB7MX0gaXMgdXNlZC4gQW4gZXhhbXBsZSBzZWFyY2ggZmlsdGVyIHRoYXQgbWF0Y2hlcyBvbiB0aGUgaW5wdXQgdXNlcm5hbWUgaXMgKG1lbWJlcj17MH0pLiBBbiBhbHRlcm5hdGl2ZSB0aGF0IG1hdGNoZXMgb24gdGhlIGF1dGhlbnRpY2F0ZWQgdXNlckROIGlzIChtZW1iZXI9ezF9KS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dy\
b3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfcm9sZV9yZWN1cnNpb246ICZfYXBiX2F1dGhfbGRhcF9yb2xlX3JlY3Vyc2lvbgogIG5hbWU6IGFwYl9hdXRoX2xkYXBfcm9sZV9yZWN1cnNpb24KICB0aXRsZTogTERBUCBSb2xlIHJlY3Vyc2lvbgogIGRlc2NyaXB0aW9uOiBUaGUgbnVtYmVyIG9mIGxldmVscyBvZiByZWN1cnNpb24gdGhlIHJvbGUgc2VhcmNoIHdpbGwgZ28gYmVsb3cgYSBtYXRjaGluZyBjb250ZXh0LiBEaXNhYmxlIHJlY3Vyc2lvbiBieSBzZXR0aW5nIHRoaXMgdG8gMC4KICB0eXBlOiBudW1iZXIKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfZGVmYXVsdF9yb2xlOiAmX2FwYl9hdXRoX2xkYXBfZGVm\
YXVsdF9yb2xlCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9kZWZhdWx0X3JvbGUKICB0aXRsZTogTERBUCBEZWZhdWx0IHJvbGUKICBkZXNjcmlwdGlvbjogQSByb2xlIGluY2x1ZGVkIGZvciBhbGwgYXV0aGVudGljYXRlZCB1c2VycwogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9yb2xlX25hbWVfYXR0cmlidXRlX2lkOiAmX2FwYl9hdXRoX2xkYXBfcm9sZV9uYW1lX2F0dHJpYnV0ZV9pZAogIG5hbWU6IGFwYl9hdXRoX2xkYXBfcm9sZV9uYW1lX2F0dHJpYnV0ZV9pZAogIHRpdGxlOiBMREFQIFJvbGUgbmFtZSBhdHRyaWJ1dGUgSUQKICBkZXNjcmlwdGlvbjogTmFtZSBvZiB0aGUgYXR0cmlidXRlIHdpdGhpbiB0\
aGUgcm9sZUN0eEROIGNvbnRleHQgd2hpY2ggY29udGFpbnMgdGhlIHJvbGUgbmFtZS4gSWYgdGhlIHJvbGVBdHRyaWJ1dGVJc0ROIHByb3BlcnR5IGlzIHNldCB0byB0cnVlLCB0aGlzIHByb3BlcnR5IGlzIHVzZWQgdG8gZmluZCB0aGUgcm9sZSBvYmplY3TigJlzIG5hbWUgYXR0cmlidXRlLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9wYXJzZV9yb2xlX25hbWVfZnJvbV9kbjogJl9hcGJfYXV0aF9sZGFwX3BhcnNlX3JvbGVfbmFtZV9mcm9tX2RuCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9wYXJzZV9yb2xlX25hbWVfZnJvbV9kbgogIHRpdGxlOiBMREFQIFJvbGUgRE4gY29udGFpbnMgcm9sZU5hbWVBdHRy\
aWJ1dGVJRAogIGRlc2NyaXB0aW9uOiBBIGZsYWcgaW5kaWNhdGluZyBpZiB0aGUgRE4gcmV0dXJuZWQgYnkgYSBxdWVyeSBjb250YWlucyB0aGUgcm9sZU5hbWVBdHRyaWJ1dGVJRC4gSWYgc2V0IHRvIHRydWUsIHRoZSBETiBpcyBjaGVja2VkIGZvciB0aGUgcm9sZU5hbWVBdHRyaWJ1dGVJRC4gSWYgc2V0IHRvIGZhbHNlLCB0aGUgRE4gaXMgbm90IGNoZWNrZWQgZm9yIHRoZSByb2xlTmFtZUF0dHJpYnV0ZUlELiBUaGlzIGZsYWcgY2FuIGltcHJvdmUgdGhlIHBlcmZvcm1hbmNlIG9mIExEQVAgcXVlcmllcy4KICB0eXBlOiBib29sZWFuCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lzX2RuOiAmX2FwYl9h\
dXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaXNfZG4KICBuYW1lOiBhcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lzX2RuCiAgdGl0bGU6IExEQVAgUm9sZSBBdHRyaWJ1dGUgSUQgaXMgRE4KICBkZXNjcmlwdGlvbjogV2hldGhlciBvciBub3QgdGhlIHJvbGVBdHRyaWJ1dGVJRCBjb250YWlucyB0aGUgZnVsbHktcXVhbGlmaWVkIEROIG9mIGEgcm9sZSBvYmplY3QuIElmIGZhbHNlLCB0aGUgcm9sZSBuYW1lIGlzIHRha2VuIGZyb20gdGhlIHZhbHVlIG9mIHRoZSByb2xlTmFtZUF0dHJpYnV0ZUlkIGF0dHJpYnV0ZSBvZiB0aGUgY29udGV4dCBuYW1lLiBDZXJ0YWluIGRpcmVjdG9yeSBzY2hlbWFzLCBzdWNoIGFzIE1pY3Jvc29mdCBBY3RpdmUgRGlyZWN0b3J5LCByZXF1\
aXJlIHRoaXMgYXR0cmlidXRlIHRvIGJlIHNldCB0byB0cnVlLgogIHR5cGU6IGJvb2xlYW4KICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfcmVmZXJyYWxfdXNlcl9hdHRyaWJ1dGVfaWRfdG9fY2hlY2s6ICZfYXBiX2F1dGhfbGRhcF9yZWZlcnJhbF91c2VyX2F0dHJpYnV0ZV9pZF90b19jaGVjawogIG5hbWU6IGFwYl9hdXRoX2xkYXBfcmVmZXJyYWxfdXNlcl9hdHRyaWJ1dGVfaWRfdG9fY2hlY2sKICB0aXRsZTogTERBUCBSZWZlcnJhbCB1c2VyIGF0dHJpYnV0ZSBJRAogIGRlc2NyaXB0aW9uOiBJZiB5b3UgYXJlIG5vdCB1c2luZyByZWZlcnJhbHMsIHRoaXMgb3B0aW9uIGNhbiBiZSBpZ25vcmVkLiBXaGVuIHVzaW5nIHJlZmVycmFs\
cywgdGhpcyBvcHRpb24gZGVub3RlcyB0aGUgYXR0cmlidXRlIG5hbWUgd2hpY2ggY29udGFpbnMgdXNlcnMgZGVmaW5lZCBmb3IgYSBjZXJ0YWluIHJvbGUsIGZvciBleGFtcGxlIG1lbWJlciwgaWYgdGhlIHJvbGUgb2JqZWN0IGlzIGluc2lkZSB0aGUgcmVmZXJyYWwuIFVzZXJzIGFyZSBjaGVja2VkIGFnYWluc3QgdGhlIGNvbnRlbnQgb2YgdGhpcyBhdHRyaWJ1dGUgbmFtZS4gSWYgdGhpcyBvcHRpb24gaXMgbm90IHNldCwgdGhlIGNoZWNrIHdpbGwgYWx3YXlzIGZhaWwsIHNvIHJvbGUgb2JqZWN0cyBjYW5ub3QgYmUgc3RvcmVkIGluIGEgcmVmZXJyYWwgdHJlZS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX3Jv\
bGVfbWFwcGVyX3JvbGVzX3Byb3BlcnRpZXM6ICZfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcm9sZXNfcHJvcGVydGllcwogIG5hbWU6IGFwYl9hdXRoX3JvbGVfbWFwcGVyX3JvbGVzX3Byb3BlcnRpZXMKICB0aXRsZTogUm9sZU1hcHBpbmcgcm9sZXNQcm9wZXJ0aWVzIGZpbGUgcGF0aAogIGRlc2NyaXB0aW9uOiBXaGVuIHByZXNlbnQsIHRoZSBSb2xlTWFwcGluZyBMb2dpbiBNb2R1bGUgd2lsbCBiZSBjb25maWd1cmVkIHRvIHVzZSB0aGUgcHJvdmlkZWQgZmlsZS4gVGhpcyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBmdWxseS1xdWFsaWZpZWQgZmlsZSBwYXRoIGFuZCBuYW1lIG9mIGEgcHJvcGVydGllcyBmaWxlIG9yIHJlc291cmNlIHdoaWNoIG1hcHMgcm9sZXMgdG8gcmVwbGFj\
ZW1lbnQgcm9sZXMuIFRoZSBmb3JtYXQgaXMgb3JpZ2luYWxfcm9sZT1yb2xlMSxyb2xlMixyb2xlMwogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IFJvbGVNYXBwaW5nIChPcHRpb25hbCkKX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JlcGxhY2Vfcm9sZTogJl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yZXBsYWNlX3JvbGUKICBuYW1lOiBhcGJfYXV0aF9yb2xlX21hcHBlcl9yZXBsYWNlX3JvbGUKICB0aXRsZTogUm9sZU1hcHBpbmcgcmVwbGFjZVJvbGUgcHJvcGVydHkKICBkZXNjcmlwdGlvbjogV2hldGhlciB0byBhZGQgdG8gdGhlIGN1cnJlbnQgcm9sZXMsIG9yIHJlcGxhY2UgdGhlIGN1cnJlbnQgcm9sZXMgd2l0aCB0aGUgbWFwcGVkIG9uZXMuIFJlcGxhY2VzIGlm\
IHNldCB0byB0cnVlLgogIHR5cGU6IGJvb2xlYW4KICBkaXNwbGF5X2dyb3VwOiBSb2xlTWFwcGluZyAoT3B0aW9uYWwpCgojIEFQQiBTcGVjIHZlcnNpb24KdmVyc2lvbjogMS4wCm5hbWU6IHJocGFtLWFwYgpkZXNjcmlwdGlvbjogUmVkIEhhdCBQcm9jZXNzIEF1dG9tYXRpb24gTWFuYWdlciAoQVBCKQpiaW5kYWJsZTogZmFsc2UKYXN5bmM6IHVuc3VwcG9ydGVkCm1ldGFkYXRhOgogIGRpc3BsYXlOYW1lOiBSZWQgSGF0IFByb2Nlc3MgQXV0b21hdGlvbiBNYW5hZ2VyIChBUEIpCiAgZG9jdW1lbnRhdGlvblVybDogaHR0cHM6Ly9kZXZlbG9wZXJzLnJlZGhhdC5jb20vcHJvZHVjdHMvYnBtc3VpdGUvZG9jcy1hbmQtYXBpcy8KICBsb25nRGVzY3JpcHRpb246CiAgICBBcyBh\
IHN5c3RlbSBlbmdpbmVlciwgeW91IGNhbiBkZXBsb3kgYSBSZWQgSGF0IFByb2Nlc3MgQXV0b21hdGlvbiBNYW5hZ2VyCiAgICBlbnZpcm9ubWVudCBvbiBSZWQgSGF0IE9wZW5TaGlmdCBDb250YWluZXIgUGxhdGZvcm0gdG8gcHJvdmlkZSBhbiBpbmZyYXN0cnVjdHVyZQogICAgdG8gZGV2ZWxvcCBvciBleGVjdXRlIHByb2Nlc3NlcyBhbmQgb3RoZXIgYnVzaW5lc3MgYXNzZXRzLgoKICAgIE1ha2Ugc3VyZSB0aGUgcmVxdWlyZWQgSW1hZ2VTdHJlYW1UYWdzIGV4aXN0IGluIHRoZSBvcGVuc2hpZnQgcHJvamVjdC4gU2VlIGJlbG93IGZvciB0aGUgcmVxdWlyZWQgaW1hZ2VzCiAgY29uc29sZS5vcGVuc2hpZnQuaW8vaWNvbkNsYXNzOiBpY29uLXByb2Nlc3NzZXJ2ZXIKICBw\
cm92aWRlckRpc3BsYXlOYW1lOiAiUmVkIEhhdCwgSW5jLiIKICBzZXJ2aWNlTmFtZTogcmhwYW0KICBkZXBlbmRlbmNpZXM6CiAgICAtICdyZWdpc3RyeS5yZWRoYXQuaW8vcmhwYW0tNy9yaHBhbTc0LWtpZXNlcnZlci1vcGVuc2hpZnQnCiAgICAtICdyZWdpc3RyeS5yZWRoYXQuaW8vcmhwYW0tNy9yaHBhbTc0LWJ1c2luZXNzY2VudHJhbC1vcGVuc2hpZnQnCiAgICAtICdyZWdpc3RyeS5yZWRoYXQuaW8vcmhwYW0tNy9yaHBhbTc0LWNvbnRyb2xsZXItb3BlbnNoaWZ0JwogICAgLSAncmVnaXN0cnkucmVkaGF0LmlvL3JocGFtLTcvcmhwYW03NC1zbWFydHJvdXRlci1vcGVuc2hpZnQnCiAgICAtICdyZWdpc3RyeS5yZWRoYXQuaW8vcmhwYW0tNy9yaHBhbTc0LWJ1c2luZXNz\
Y2VudHJhbC1tb25pdG9yaW5nLW9wZW5zaGlmdCcKICAgIC0gJ3JlZ2lzdHJ5LnJlZGhhdC5pby9yaHNjbC9wb3N0Z3Jlc3FsLTEwLXJoZWw3JwogICAgLSAncmVnaXN0cnkucmVkaGF0LmlvL3Joc2NsL215c3FsLTU3LXJoZWw3Jwp0YWdzOgogIC0gamJwbQogIC0gcmhwYW0KICAtIHByb2Nlc3NzZXJ2ZXIKICAtIGF1dGhvcmluZwogIC0gamJvc3MKcGxhbnM6CiAgLSBuYW1lOiB0cmlhbAogICAgZGVzY3JpcHRpb246CiAgICAgIERlcGxveSBhbiBlcGhlbWVyYWwgZW52aXJvbm1lbnQgZm9yIHRlc3RpbmcgQnVzaW5lc3MgQ2VudHJhbCBhbmQgUHJvY2VzcyBTZXJ2ZXIuIEEgZGVmYXVsdCBgYWRtaW5Vc2VyYCB1c2VyIHdpbGwgYmUgY3JlYXRlZCB3aXRoIHRoZSBgUmVkSGF0\
YCBwYXNzd29yZC4KICAgICAgSW4gY2FzZSB0aGUgZ2VuZXJhdGVkIHJvdXRlcyBuZWVkIHRvIGJlIG92ZXJyaWRkZW4sIGl0IGlzIHBvc3NpYmxlIHRvIHNldCBjdXN0b20gcm91dGVzIGZvciBib3RoIGFwcGxpY2F0aW9ucy4KICAgIGZyZWU6IHRydWUKICAgIG1ldGFkYXRhOgogICAgICBkaXNwbGF5TmFtZTogRXZhbHVhdGlvbiBFbnZpcm9ubWVudAogICAgcGFyYW1ldGVyczoKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lCiAgICAgICAgdGl0bGU6IEJ1c2luZXNzIENlbnRyYWwgUHVibGljIEhvc3RuYW1lCiAgICAgIC0gPDw6ICpfYXBiX2tpZXNlcnZlcl9ob3N0bmFtZQogICAgICAgIHRpdGxlOiBQcm9jZXNzIFNlcnZlciBQdWJsaWMgSG9z\
dG5hbWUKICAgICAgLSAqX2FwYl9pbWFnZV9zdHJlYW1fdGFnCgogIC0gbmFtZTogYXV0aG9yaW5nCiAgICBkZXNjcmlwdGlvbjoKICAgICAgQW4gZW52aXJvbm1lbnQgZm9yIGNyZWF0aW5nIGFuZCBtb2RpZnlpbmcgcHJvY2Vzc2VzIHVzaW5nIEJ1c2luZXNzIENlbnRyYWwuIEl0IGNvbnNpc3RzIG9mCiAgICAgIHBvZHMgdGhhdCBwcm92aWRlIEJ1c2luZXNzIENlbnRyYWwgZm9yIHRoZSBhdXRob3Jpbmcgd29yayBhbmQgYSBQcm9jZXNzIFNlcnZlciBmb3IgdGVzdCBleGVjdXRpb24gb2YgdGhlIHByb2Nlc3Nlcy4KICAgIGZyZWU6IHRydWUKICAgIG1ldGFkYXRhOgogICAgICBkaXNwbGF5TmFtZTogQXV0aG9yaW5nCiAgICBwYXJhbWV0ZXJzOgogICAgICAjIENvbW1vbiBD\
cmVkZW50aWFscwogICAgICAtICpfYXBiX2tpZV9hZG1pbl91c2VyCiAgICAgIC0gKl9hcGJfa2llX2FkbWluX3B3ZAogICAgICAtICpfYXBiX2ltYWdlX3N0cmVhbV90YWcKCiAgICAgICMgQnVzaW5lc3MgQ2VudHJhbAogICAgICAtIDw8OiAqX2FwYl92b2x1bWVfc2l6ZQogICAgICAgIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfdm9sdW1lX3NpemUKICAgICAgICBkZXNjcmlwdGlvbjogU3BlY2lmeSB0aGUgUGVyc2lzdGVudCBWb2x1bWUgQ2xhaW0gc2l6ZSB0byBjcmVhdGUgZm9yIHN0b3JpbmcgdGhlIFdvcmtzcGFjZS4gRm9yIGV4YW1wbGUsIDFHaQogICAgICAgIGRlZmF1bHQ6IDFHaQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAg\
IyBLZXlzdG9yZSBhbmQgU2VjcmV0CiAgICAgIC0gPDw6ICpfYXBiX2J1c2luZXNzY2VudHJhbF9zZWNyZXRfbmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX25hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCiAgICAgIC0gPDw6ICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9hbGlhcwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX3B3ZAogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgIyBIb3N0\
bmFtZQogICAgICAtIDw8OiAqX2FwYl9idXNpbmVzc2NlbnRyYWxfaG9zdG5hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCiAgICAgICMgT0NQIEVuYWJsZW1lbnQKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX29jcF9lbmFibGVkCiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9wcmVmZXJfa2llc2VydmVyX3N2YwogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfdGVtcGxhdGVfY2FjaGVfdHRsCiAgICAgICMgR2l0IGhvb2tzCiAgICAgIC0gKl9hcGJfZ2l0X2hvb2tzX2RpcgogICAgICAjIE90aGVyIHVzZXJzCiAgICAgIC0gPDw6ICpfYXBiX2NvbnRyb2xsZXJfdXNlcgogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAg\
LSA8PDogKl9hcGJfY29udHJvbGxlcl9wd2QKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCiAgICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFsX21hdmVuX3JlcG9fdXNlcgogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9tYXZlbl9yZXBvX3B3ZAoKICAgICAgIyBQcm9jZXNzIFNlcnZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9tb2RlCgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9kYl90eXBlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2RiX3NpemUKCiAgICAgICMgS2V5c3RvcmUgYW5kIFNlY3JldAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9zZWNyZXRfbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9uYW1lCiAgICAg\
IC0gKl9hcGJfa2llc2VydmVyX2tleXN0b3JlX2FsaWFzCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2tleXN0b3JlX3B3ZAoKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfdXNlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9wd2QKICAgICAgLSA8PDogKl9hcGJfa2llc2VydmVyX2hvc3RuYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfc3RhcnR1cF9zdHJhdGVneQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9pbWFnZV9zdHJlYW1fbmFtZQoKICAgICAgIyBFeHRlcm5hbCBEYXRhYmFzZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kcml2ZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0\
ZXJuYWxfZGJfZGlhbGVjdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9ob3N0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3BvcnQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl91cmwKCiAgICAgICMgSk1TCiAgICAgIC0gKl9hcGJfZW5hYmxlX2tpZXNlcnZlcl9qbXNfaW50ZWdyYXRpb24KICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9leGVjdXRvcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3JfdHJhbnNhY3RlZAogICAgICAtICpfYXBiX2tp\
ZXNlcnZlcl9qbXNfcXVldWVfcmVxdWVzdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVzcG9uc2UKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9zaWduYWwKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3NpZ25hbAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX2F1ZGl0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9hdWRpdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfYXVkaXRfdHJhbnNhY3RlZAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfdXNlcm5hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3Bhc3N3b3JkCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19hbXFf\
cXVldWVzCgogICAgICAjIE1hdmVuCiAgICAgIC0gKl9hcGJfbWF2ZW5fbWlycm9yX3VybAogICAgICAtICpfYXBiX21hdmVuX3JlcG9fdXJsCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb19pZAogICAgICAtICpfYXBiX21hdmVuX3JlcG9fdXNlcgogICAgICAtICpfYXBiX21hdmVuX3JlcG9fcHdkCgogICAgICAjIFJIIC0gU1NPCiAgICAgIC0gKl9hcGJfc3NvX3VybAogICAgICAtICpfYXBiX3Nzb19yZWFsbQogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50CiAgICAgICAgbmFtZTogYXBiX3Nzb19idXNpbmVzc2NlbnRyYWxfY2xpZW50CiAgICAgICAgdGl0bGU6IFJILVNTTyBCdXNpbmVzcyBDZW50cmFsIC0gQ2xpZW50CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQg\
U2luZ2xlIFNpZ24tT24gQ2xpZW50IG5hbWUgZm9yIEJ1c2luZXNzIENlbnRyYWwuIElmIHRoZSBzZWNyZXQsIHVzZXIgYW5kIHBhc3N3b3JkIGFyZSBwcm92aWRlZCBpdCB3aWxsIGJlIGNyZWF0ZWQuIEZvciBleGFtcGxlLCBidXNpbmVzc2NlbnRyYWwKICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICBuYW1lOiBhcGJfc3NvX2J1c2luZXNzY2VudHJhbF9jbGllbnRfc2VjcmV0CiAgICAgICAgdGl0bGU6IFJILVNTTyBCdXNpbmVzcyBDZW50cmFsIC0gQ2xpZW50IFNlY3JldAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBzZWNyZXQgZm9yIEJ1c2luZXNzIENlbnRyYWwuCiAgICAgIC0gPDw6ICpfYXBi\
X3Nzb19jbGllbnQKICAgICAgICBuYW1lOiBhcGJfa2llc2VydmVyX3Nzb19jbGllbnQKICAgICAgICB0aXRsZTogUkgtU1NPIFByb2Nlc3MgU2VydmVyIC0gQ2xpZW50CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IG5hbWUgZm9yIFByb2Nlc3MgU2VydmVyLiBJZiB0aGUgc2VjcmV0LCB1c2VyIGFuZCBwYXNzd29yZCBhcmUgcHJvdmlkZWQgaXQgd2lsbCBiZSBjcmVhdGVkLiBGb3IgZXhhbXBsZSwga2llc2VydmVyCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnRfc2VjcmV0CiAgICAgICAgbmFtZTogYXBiX2tpZXNlcnZlcl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIHRpdGxlOiBSSC1TU08gUHJvY2VzcyBTZXJ2ZXIgLSBD\
bGllbnQgU2VjcmV0CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IHNlY3JldCBmb3IgUHJvY2VzcyBTZXJ2ZXIuCiAgICAgIC0gKl9hcGJfc3NvX3VzZXIKICAgICAgLSAqX2FwYl9zc29fcHdkCiAgICAgIC0gKl9hcGJfc3NvX2Rpc2FibGVfc3NsX2NlcnRfdmFsaWRhdGlvbgogICAgICAtICpfYXBiX3Nzb19wcmluY2lwYWxfYXR0cmlidXRlCgogICAgICAjIExEQVAKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXJsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2JpbmRfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmluZF9jcmVkZW50aWFsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2phYXNfc2VjdXJpdHlfZG9tYWluCiAgICAg\
IC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfY3R4X2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfZmlsdGVyCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3NlYXJjaF9zY29wZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfdGltZV9saW1pdAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kaXN0aW5ndWlzaGVkX25hbWVfYXR0cmlidXRlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3BhcnNlX3VzZXJuYW1lCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2JlZ2luX3N0cmluZwogICAgICAtICpfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9lbmRfc3RyaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lkCiAgICAgIC0gKl9hcGJf\
YXV0aF9sZGFwX3JvbGVzX2N0eF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2ZpbHRlcgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX3JlY3Vyc2lvbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kZWZhdWx0X3JvbGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9uYW1lX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV9yb2xlX25hbWVfZnJvbV9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pc19kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yZWZlcnJhbF91c2VyX2F0dHJpYnV0ZV9pZF90b19jaGVjawoKICAgICAgIyBSb2xlTWFwcGluZwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBw\
ZXJfcm9sZXNfcHJvcGVydGllcwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcmVwbGFjZV9yb2xlCgogIC0gbmFtZTogaW1tdXRhYmxlLWtpZQogICAgZGVzY3JpcHRpb246CiAgICAgIEluIHRoaXMgZW52aXJvbm1lbnQsIHdoZW4geW91IGRlcGxveSBhIFByb2Nlc3MgU2VydmVyIHBvZCwgaXQgYnVpbGRzIGFuIGltYWdlIHRoYXQgbG9hZHMgYW5kIHN0YXJ0cwogICAgICBhIHByb2Nlc3Mgb3IgZ3JvdXAgb2YgcHJvY2Vzc2VzLiBZb3UgY2Fubm90IHN0b3AgYW55IHByb2Nlc3Mgb24gdGhlIHBvZCBvciBhZGQgYW55IG5ldyBwcm9jZXNzIHRvIHRoZSBwb2QuCiAgICAgIElmIHlvdSB3YW50IHRvIHVzZSBhbm90aGVyIHZlcnNpb24gb2YgYSBwcm9jZXNzIG9yIG1v\
ZGlmeSB0aGUgY29uZmlndXJhdGlvbiBpbiBhbnkgb3RoZXIgd2F5LCB5b3UgZGVwbG95IGEgbmV3CiAgICAgIHNlcnZlciBpbWFnZSBhbmQgZGlzcGxhY2UgdGhlIG9sZCBvbmUuCiAgICBmcmVlOiB0cnVlCiAgICBtZXRhZGF0YToKICAgICAgZGlzcGxheU5hbWU6IEltbXV0YWJsZSBTZXJ2ZXIgLSBQcm9jZXNzIFNlcnZlcgogICAgcGFyYW1ldGVyczoKICAgICAgIyBDb21tb24gQ3JlZGVudGlhbHMKICAgICAgLSAqX2FwYl9raWVfYWRtaW5fdXNlcgogICAgICAtICpfYXBiX2tpZV9hZG1pbl9wd2QKICAgICAgLSAqX2FwYl9pbWFnZV9zdHJlYW1fdGFnCiAgICAgICMgSEEKICAgICAgLSA8PDogKl9hcGJfcmVwbGljYXMKICAgICAgICBuYW1lOiBhcGJfa2llc2VydmVyX3Jl\
cGxpY2FzCiAgICAgICAgZGVzY3JpcHRpb246IE51bWJlciBvZiBSZXBsaWNhcyBvZiB0aGUgUHJvY2VzcyBTZXJ2ZXIgdGhhdCB3aWxsIGJlIGluaXRpYWxseSBkZXBsb3llZAogICAgICAgIGRlZmF1bHQ6IDIKCiAgICAgICMgQXJ0aWZhY3QgU291cmNlCiAgICAgIC0gbmFtZTogYXBiX2tpZXNlcnZlcl9jb250YWluZXJfZGVwbG95bWVudAogICAgICAgIHRpdGxlOiBQcm9jZXNzIFNlcnZlciBDb250YWluZXIgRGVwbG95bWVudAogICAgICAgIGRlc2NyaXB0aW9uOiAnUHJvY2VzcyBTZXJ2ZXIgQ29udGFpbmVyIGRlcGxveW1lbnQgY29uZmlndXJhdGlvbiBpbiBmb3JtYXQ6IGNvbnRhaW5lcklkPWdyb3VwSWQ6YXJ0aWZhY3RJZDp2ZXJzaW9ufGMyPWcyOmEyOnYyJwogICAg\
ICAgIHJlcXVpcmVkOiB0cnVlCiAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgZGlzcGxheV9ncm91cDogQXJ0aWZhY3Qgc291cmNlCiAgICAgIC0gbmFtZTogYXBiX2tpZXNlcnZlcl9zb3VyY2VfdXJsCiAgICAgICAgdGl0bGU6IEdpdCBSZXBvc2l0b3J5IFVSTAogICAgICAgIGRlc2NyaXB0aW9uOiBHaXQgc291cmNlIFVSSSBmb3IgYXBwbGljYXRpb24uIEZvciBleGFtcGxlLCBodHRwczovL2dpdGh1Yi5jb20vamJvc3MtY29udGFpbmVyLWltYWdlcy9yaHBhbS03LW9wZW5zaGlmdC1pbWFnZS5naXQKICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEFydGlmYWN0IHNvdXJjZQogICAgICAtIG5hbWU6\
IGFwYl9raWVzZXJ2ZXJfc291cmNlX3JlZgogICAgICAgIHRpdGxlOiBHaXQgUmVwb3NpdG9yeSBSZWZlcmVuY2UKICAgICAgICBkZXNjcmlwdGlvbjogR2l0IGJyYW5jaC90YWcgcmVmZXJlbmNlLiBGb3IgZXhhbXBsZSwgNy40LjAuR0Egb3IgbWFzdGVyCiAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICBkaXNwbGF5X2dyb3VwOiBBcnRpZmFjdCBzb3VyY2UKICAgICAgLSBuYW1lOiBhcGJfa2llc2VydmVyX3NvdXJjZV9jb250ZXh0CiAgICAgICAgdGl0bGU6IEdpdCBSZXBvc2l0b3J5IENvbnRleHQgRGlyCiAgICAgICAgZGVzY3JpcHRpb246IFBhdGggd2l0aGluIEdpdCBwcm9qZWN0IHRvIGJ1aWxkOyBlbXB0eSBmb3Igcm9vdCBw\
cm9qZWN0IGRpcmVjdG9yeS4gRm9yIGV4YW1wbGUsIHF1aWNrc3RhcnRzL2xpYnJhcnktcHJvY2Vzcy9saWJyYXJ5CiAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgZGlzcGxheV9ncm91cDogQXJ0aWZhY3Qgc291cmNlCiAgICAgIC0gbmFtZTogYXBiX2tpZXNlcnZlcl9naXRodWJfd2ViaG9va19zZWNyZXQKICAgICAgICB0aXRsZTogR2l0aHViIFdlYmhvb2sgU2VjcmV0CiAgICAgICAgZGVzY3JpcHRpb246IFNlY3JldCBrZXkgdG8gdXNlIHdoZW4gY29uZmlndXJpbmcgYSBHaXRIdWIgV2ViaG9vay4gR2VuZXJhdGVkIGlmIGVtcHR5LgogICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEFydGlmYWN0IHNvdXJjZQogICAgICAtIG5hbWU6IGFw\
Yl9raWVzZXJ2ZXJfZ2VuZXJpY193ZWJob29rX3NlY3JldAogICAgICAgIHRpdGxlOiBHZW5lcmljIFdlYmhvb2sgU2VjcmV0CiAgICAgICAgZGVzY3JpcHRpb246IFNlY3JldCBrZXkgdG8gdXNlIHdoZW4gY29uZmlndXJpbmcgYSBHZW5lcmljIFdlYmhvb2suIEdlbmVyYXRlZCBpZiBlbXB0eS4KICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICBkaXNwbGF5X2dyb3VwOiBBcnRpZmFjdCBzb3VyY2UKICAgICAgLSBuYW1lOiBhcGJfa2llc2VydmVyX2FydGlmYWN0X2RpcgogICAgICAgIHRpdGxlOiBBcnRpZmFjdCBkaXJlY3RvcmllcwogICAgICAgIGRlc2NyaXB0aW9uOiBMaXN0IG9mIGRpcmVjdG9yaWVzIGZyb20gd2hpY2ggYXJjaGl2ZXMgd2lsbCBiZSBjb3BpZWQgaW50\
byB0aGUgZGVwbG95bWVudCBmb2xkZXIuIElmIHVuc3BlY2lmaWVkLCBhbGwgYXJjaGl2ZXMgaW4gL3RhcmdldCB3aWxsIGJlIGNvcGllZC4KICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICBkaXNwbGF5X2dyb3VwOiBBcnRpZmFjdCBzb3VyY2UKICAgICAgLSA8PDogKl9hcGJfbWF2ZW5fbWlycm9yX3VybAogICAgICAgIGRlc2NyaXB0aW9uOiBNYXZlbiBNaXJyb3IgdG8gdXNlIGZvciBTMkkgYnVpbGRzCiAgICAgICAgZGlzcGxheV9ncm91cDogQXJ0aWZhY3Qgc291cmNlCgogICAgICAjIE1hdmVuCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb191cmwKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX2lkCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb191c2VyCiAgICAgIC0gKl9h\
cGJfbWF2ZW5fcmVwb19wd2QKCiAgICAgICMgSk1TCiAgICAgIC0gKl9hcGJfZW5hYmxlX2tpZXNlcnZlcl9qbXNfaW50ZWdyYXRpb24KICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9leGVjdXRvcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3JfdHJhbnNhY3RlZAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVxdWVzdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVzcG9uc2UKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9zaWduYWwKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3NpZ25hbAogICAgICAtICpf\
YXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX2F1ZGl0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9hdWRpdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfYXVkaXRfdHJhbnNhY3RlZAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfdXNlcm5hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3Bhc3N3b3JkCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19hbXFfcXVldWVzCgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9tb2RlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2RiX3R5cGUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZGJfc2l6ZQogICAgICAjIEtleXN0b3JlIGFuZCBTZWNyZXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfc2VjcmV0X25h\
bWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9hbGlhcwogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9wd2QKCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3VzZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfcHdkCiAgICAgIC0gPDw6ICpfYXBiX2tpZXNlcnZlcl9ob3N0bmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCiAgICAgIC0gPDw6ICpfYXBiX2tpZXNlcnZlcl9zdGFydHVwX3N0cmF0ZWd5CiAgICAgICAgZGVzY3JpcHRpb246ICJXaGVuIHNldCB0byBPcGVuU2hpZnRTdGFydHVwU3RyYXRlZ3ksIGFsbG93cyBQcm9jZXNzIFNlcnZlciB0byBzdGFy\
dCB1cCBpbmRlcGVuZGVudGx5IHVzZWQgc2hhcmVkIHN0YXRlIGZyb20gT3BlblNoaWZ0IEFQSSBzZXJ2aWNlOyB3aGVuIHNldCB0byBMb2NhbENvbnRhaW5lcnNTdGFydHVwU3RyYXRlZ3ksIGFsbG93cyBLSUUgc2VydmVyIHRvIHN0YXJ0IHVwIGFuZCBmdW5jdGlvbiB3aXRoIGxvY2FsIGNvbmZpZywgZXZlbiB3aGVuIGEgY29udHJvbGxlciBpcyBjb25maWd1cmVkIGFuZCB1bmF2YWlsYWJsZSIKICAgICAgICBlbnVtOiBbJ0xvY2FsQ29udGFpbmVyc1N0YXJ0dXBTdHJhdGVneScsJ09wZW5TaGlmdFN0YXJ0dXBTdHJhdGVneSddCiAgICAgICAgZGVmYXVsdDogTG9jYWxDb250YWluZXJzU3RhcnR1cFN0cmF0ZWd5CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ltYWdlX3N0cmVh\
bV9uYW1lCgogICAgICAjIEV4dGVybmFsIERhdGFiYXNlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RyaXZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kaWFsZWN0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2hvc3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfcG9ydAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3VybAoKICAgICAgIyBSb3V0ZXIKICAgICAgLSAqX2FwYl9yb3V0ZXJfc3ZjCiAgICAgIC0gKl9hcGJfcm91dGVyX2hvc3QKICAgICAgLSAqX2FwYl9yb3V0ZXJfcG9ydAogICAgICAt\
ICpfYXBiX3JvdXRlcl9wcm90b2NvbAoKICAgICAgIyBDb250cm9sbGVyCiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9zdmMKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX2hvc3QKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3BvcnQKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3Byb3RvY29sCiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl90b2tlbgogICAgICAtIDw8OiAqX2FwYl9jb250cm9sbGVyX3VzZXIKICAgICAgICBkaXNwbGF5X2dyb3VwOiBDb250cm9sbGVyIEludGVncmF0aW9uCiAgICAgIC0gPDw6ICpfYXBiX2NvbnRyb2xsZXJfcHdkCiAgICAgICAgZGlzcGxheV9ncm91cDogQ29udHJvbGxlciBJbnRlZ3JhdGlvbgoKICAgICAgIyBSSCAtIFNTTwogICAgICAtICpf\
YXBiX3Nzb191cmwKICAgICAgLSAqX2FwYl9zc29fcmVhbG0KICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudAogICAgICAgIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc3NvX2NsaWVudAogICAgICAgIHRpdGxlOiBSSC1TU08gUHJvY2VzcyBTZXJ2ZXIgLSBDbGllbnQKICAgICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgbmFtZSBmb3IgUHJvY2VzcyBTZXJ2ZXIuIElmIHRoZSBzZWNyZXQsIHVzZXIgYW5kIHBhc3N3b3JkIGFyZSBwcm92aWRlZCBpdCB3aWxsIGJlIGNyZWF0ZWQuIEZvciBleGFtcGxlLCBraWVzZXJ2ZXIKICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICBuYW1lOiBhcGJfa2llc2VydmVyX3Nzb19j\
bGllbnRfc2VjcmV0CiAgICAgICAgdGl0bGU6IFJILVNTTyBQcm9jZXNzIFNlcnZlciAtIENsaWVudCBTZWNyZXQKICAgICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgc2VjcmV0IGZvciBQcm9jZXNzIFNlcnZlci4KICAgICAgLSAqX2FwYl9zc29fdXNlcgogICAgICAtICpfYXBiX3Nzb19wd2QKICAgICAgLSAqX2FwYl9zc29fZGlzYWJsZV9zc2xfY2VydF92YWxpZGF0aW9uCiAgICAgIC0gKl9hcGJfc3NvX3ByaW5jaXBhbF9hdHRyaWJ1dGUKCiAgICAgICMgTERBUAogICAgICAtICpfYXBiX2F1dGhfbGRhcF91cmwKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmluZF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iaW5kX2NyZWRlbnRp\
YWwKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfamFhc19zZWN1cml0eV9kb21haW4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmFzZV9jdHhfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmFzZV9maWx0ZXIKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3Njb3BlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3NlYXJjaF90aW1lX2xpbWl0CiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Rpc3Rpbmd1aXNoZWRfbmFtZV9hdHRyaWJ1dGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcGFyc2VfdXNlcm5hbWUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfYmVnaW5fc3RyaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2VuZF9zdHJpbmcKICAg\
ICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaWQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZXNfY3R4X2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfZmlsdGVyCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfcmVjdXJzaW9uCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2RlZmF1bHRfcm9sZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX25hbWVfYXR0cmlidXRlX2lkCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3BhcnNlX3JvbGVfbmFtZV9mcm9tX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lzX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JlZmVycmFsX3VzZXJfYXR0cmlidXRlX2lkX3RvX2No\
ZWNrCgogICAgICAjIFJvbGVNYXBwaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yb2xlc19wcm9wZXJ0aWVzCiAgICAgIC0gKl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yZXBsYWNlX3JvbGUKCiAgLSBuYW1lOiBpbW11dGFibGUtbW9uCiAgICBkZXNjcmlwdGlvbjoKICAgICAgVXNlIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZyB0byBtb25pdG9yIHRoZSBwZXJmb3JtYW5jZSBvZiB0aGUgZW52aXJvbm1lbnQgYW5kIHRvIHN0b3AgYW5kCiAgICAgIHJlc3RhcnQgc29tZSBvZiB0aGUgcHJvY2VzcyBpbnN0YW5jZXMgaW4gYW4gaW1tdXRhYmxlIGVudmlyb25tZW50LCBidXQgbm90IHRvIGRlcGxveSBhZGRpdGlvbmFsIHByb2Nlc3NlcyB0byBhbnkgUHJvY2Vz\
cyBTZXJ2ZXIgb3IgdW5kZXBsb3kgYW55IGV4aXN0aW5nIG9uZXMgKHlvdSBjYW4gbm90IGFkZCBvciByZW1vdmUgY29udGFpbmVycykKICAgIGZyZWU6IHRydWUKICAgIG1ldGFkYXRhOgogICAgICBkaXNwbGF5TmFtZTogSW1tdXRhYmxlIFNlcnZlciAtIE1vbml0b3IKICAgIHBhcmFtZXRlcnM6CiAgICAgICMgQ29tbW9uIENyZWRlbnRpYWxzCiAgICAgIC0gKl9hcGJfa2llX2FkbWluX3VzZXIKICAgICAgLSAqX2FwYl9raWVfYWRtaW5fcHdkCiAgICAgIC0gKl9hcGJfaW1hZ2Vfc3RyZWFtX3RhZwoKICAgICAgIyBNYXZlbgogICAgICAtICpfYXBiX21hdmVuX21pcnJvcl91cmwKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VybAogICAgICAtICpfYXBiX21hdmVuX3JlcG9f\
aWQKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VzZXIKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3B3ZAoKICAgICAgIyBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgLSA8PDogKl9hcGJfcmVwbGljYXMKICAgICAgICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX3JlcGxpY2FzCiAgICAgICAgZGVzY3JpcHRpb246IE51bWJlciBvZiBSZXBsaWNhcyBvZiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcgdGhhdCB3aWxsIGJlIGluaXRpYWxseSBkZXBsb3llZAogICAgICAgIGRlZmF1bHQ6IDEKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgLSA8PDogKl9hcGJfdm9sdW1lX3NpemUKICAgICAgICBuYW1l\
OiBhcGJfYnVzaW5lc3NjZW50cmFsX3ZvbHVtZV9zaXplCiAgICAgICAgZGVzY3JpcHRpb246IFNwZWNpZnkgdGhlIFBlcnNpc3RlbnQgVm9sdW1lIENsYWltIHNpemUgdG8gY3JlYXRlIGZvciBzdG9yaW5nIHRoZSB1c2VyIGRhdGEuIEZvciBleGFtcGxlLCA2NE1pCiAgICAgICAgZGVmYXVsdDogNjRNaQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAjIEtleXN0b3JlIGFuZCBTZWNyZXQKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfc2VjcmV0X25hbWUKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfbmFtZQogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9hbGlhcwog\
ICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9wd2QKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lCiAgICAgICAgZGVzY3JpcHRpb246IFB1YmxpYyBob3N0bmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nLiBHZW5lcmF0ZWQgaWYgZW1wdHkKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgIyBPQ1AgRW5hYmxlbWVudAogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfb2NwX2VuYWJsZWQKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3ByZWZlcl9raWVzZXJ2ZXJfc3ZjCiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl90ZW1wbGF0ZV9jYWNoZV90dGwKICAgICAgIyBP\
dGhlciB1c2VycwogICAgICAtIDw8OiAqX2FwYl9jb250cm9sbGVyX3VzZXIKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgLSA8PDogKl9hcGJfY29udHJvbGxlcl9wd2QKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKCiAgICAgICMgU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX3JlcGxpY2FzCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX3JlcGxpY2FzCiAgICAgICAgZGVzY3JpcHRpb246IE51bWJlciBvZiBSZXBsaWNhcyBvZiBTbWFydCBSb3V0ZXIgdGhhdCB3aWxsIGJlIGluaXRpYWxseSBkZXBsb3llZAogICAgICAgIGRlZmF1bHQ6IDIKICAgICAgICBk\
aXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfdm9sdW1lX3NpemUKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfdm9sdW1lX3NpemUKICAgICAgICBkZXNjcmlwdGlvbjogU3BlY2lmeSB0aGUgUGVyc2lzdGVudCBWb2x1bWUgQ2xhaW0gc2l6ZSB0byBjcmVhdGUuIEZvciBleGFtcGxlLCA2NE1pCiAgICAgICAgZGVmYXVsdDogNjRNaQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9ob3N0bmFtZQogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9ob3N0bmFtZQogICAgICAgIGRlc2NyaXB0aW9uOiBQdWJsaWMgaG9zdG5hbWUgZm9yIFNtYXJ0IFJvdXRlci4gR2VuZXJhdGVkIGlmIGVt\
cHR5CiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX3NlY3JldF9uYW1lCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX3NlY3JldF9uYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX2tleXN0b3JlX25hbWUKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfa2V5c3RvcmVfbmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9rZXlzdG9yZV9hbGlhcwogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9rZXlzdG9yZV9hbGlhcwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8\
OiAqX2FwYl9rZXlzdG9yZV9wd2QKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfa2V5c3RvcmVfcHdkCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCgogICAgICAjIFJIIC0gU1NPCiAgICAgIC0gKl9hcGJfc3NvX3VybAogICAgICAtICpfYXBiX3Nzb19yZWFsbQogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50CiAgICAgICAgbmFtZTogYXBiX3Nzb19idXNpbmVzc2NlbnRyYWxfY2xpZW50CiAgICAgICAgdGl0bGU6IFJILVNTTyBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcgLSBDbGllbnQKICAgICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgbmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5n\
LiBJZiB0aGUgc2VjcmV0LCB1c2VyIGFuZCBwYXNzd29yZCBhcmUgcHJvdmlkZWQgaXQgd2lsbCBiZSBjcmVhdGVkLiBGb3IgZXhhbXBsZSwgYnVzaW5lc3NjZW50cmFsCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnRfc2VjcmV0CiAgICAgICAgbmFtZTogYXBiX3Nzb19idXNpbmVzc2NlbnRyYWxfY2xpZW50X3NlY3JldAogICAgICAgIHRpdGxlOiBSSC1TU08gQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nIC0gQ2xpZW50IFNlY3JldAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBzZWNyZXQgZm9yIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZy4KICAgICAgLSAqX2FwYl9zc29fdXNlcgogICAgICAtICpfYXBiX3Nzb19w\
d2QKICAgICAgLSAqX2FwYl9zc29fZGlzYWJsZV9zc2xfY2VydF92YWxpZGF0aW9uCiAgICAgIC0gKl9hcGJfc3NvX3ByaW5jaXBhbF9hdHRyaWJ1dGUKCiAgICAgICMgTERBUAogICAgICAtICpfYXBiX2F1dGhfbGRhcF91cmwKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmluZF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iaW5kX2NyZWRlbnRpYWwKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfamFhc19zZWN1cml0eV9kb21haW4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmFzZV9jdHhfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmFzZV9maWx0ZXIKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3Njb3BlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3NlYXJj\
aF90aW1lX2xpbWl0CiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Rpc3Rpbmd1aXNoZWRfbmFtZV9hdHRyaWJ1dGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcGFyc2VfdXNlcm5hbWUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfYmVnaW5fc3RyaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2VuZF9zdHJpbmcKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaWQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZXNfY3R4X2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfZmlsdGVyCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfcmVjdXJzaW9uCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2RlZmF1bHRfcm9s\
ZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX25hbWVfYXR0cmlidXRlX2lkCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3BhcnNlX3JvbGVfbmFtZV9mcm9tX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lzX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JlZmVycmFsX3VzZXJfYXR0cmlidXRlX2lkX3RvX2NoZWNrCgogICAgICAjIFJvbGVNYXBwaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yb2xlc19wcm9wZXJ0aWVzCiAgICAgIC0gKl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yZXBsYWNlX3JvbGUKCiAgLSBuYW1lOiBtYW5hZ2VkCiAgICBkZXNjcmlwdGlvbjoKICAgICAgQW4gZW52aXJvbm1lbnQgZm9yIHJ1bm5pbmcg\
ZXhpc3RpbmcgcHJvY2Vzc2VzIGZvciBzdGFnaW5nIGFuZCBwcm9kdWN0aW9uIHB1cnBvc2VzLgogICAgICBUaGlzIGVudmlyb25tZW50IGluY2x1ZGVzIHNldmVyYWwgZ3JvdXBzIG9mIFByb2Nlc3MgU2VydmVyIHBvZHM7IHlvdSBjYW4gZGVwbG95IGFuZCB1bmRlcGxveQogICAgICBwcm9jZXNzZXMgb24gZXZlcnkgc3VjaCBncm91cCBhbmQgYWxzbyBzY2FsZSB0aGUgZ3JvdXAgdXAgb3IgZG93biBhcyBuZWNlc3NhcnkuIFVzZSBCdXNpbmVzcwogICAgICBDZW50cmFsIE1vbml0b3JpbmcgdG8gZGVwbG95LCBydW4sIGFuZCBzdG9wIHRoZSBwcm9jZXNzZXMgYW5kIHRvIG1vbml0b3IgdGhlaXIgZXhlY3V0aW9uLgoKICAgIGZyZWU6IHRydWUKICAgIG1ldGFkYXRhOgogICAg\
ICBkaXNwbGF5TmFtZTogTWFuYWdlZCBFbnZpcm9ubWVudAogICAgcGFyYW1ldGVyczoKICAgICAgIyBDb21tb24gQ3JlZGVudGlhbHMKICAgICAgLSAqX2FwYl9raWVfYWRtaW5fdXNlcgogICAgICAtICpfYXBiX2tpZV9hZG1pbl9wd2QKICAgICAgLSAqX2FwYl9pbWFnZV9zdHJlYW1fdGFnCgogICAgICAjIE1hdmVuCiAgICAgIC0gKl9hcGJfbWF2ZW5fbWlycm9yX3VybAogICAgICAtIDw8OiAqX2FwYl9tYXZlbl9yZXBvX3VybAogICAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICAgICAgZGVzY3JpcHRpb246IEV4dGVybmFsIE1hdmVuIFJlcG9zaXRvcnkgVVJMLgogICAgICAtICpfYXBiX21hdmVuX3JlcG9faWQKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VzZXIKICAgICAg\
LSAqX2FwYl9tYXZlbl9yZXBvX3B3ZAoKICAgICAgIyBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgLSA8PDogKl9hcGJfcmVwbGljYXMKICAgICAgICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX3JlcGxpY2FzCiAgICAgICAgZGVmYXVsdDogMQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAtIDw8OiAqX2FwYl92b2x1bWVfc2l6ZQogICAgICAgIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfdm9sdW1lX3NpemUKICAgICAgICBkZXNjcmlwdGlvbjogU3BlY2lmeSB0aGUgUGVyc2lzdGVudCBWb2x1bWUgQ2xhaW0gc2l6ZSB0byBjcmVhdGUgZm9yIHN0b3JpbmcgdGhlIHVzZXIgZGF0YS4gRm9yIGV4YW1w\
bGUsIDY0TWkKICAgICAgICBkZWZhdWx0OiA2NE1pCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiAgICAgICMjIEtleXN0b3JlIGFuZCBTZWNyZXQKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfc2VjcmV0X25hbWUKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfbmFtZQogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9hbGlhcwogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9wd2QKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lCiAgICAgICAgZGVzY3JpcHRpb246IFB1YmxpYyBob3N0bmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJh\
bCBNb25pdG9yaW5nLiBHZW5lcmF0ZWQgaWYgZW1wdHkKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgIyBPQ1AgRW5hYmxlbWVudAogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfb2NwX2VuYWJsZWQKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3ByZWZlcl9raWVzZXJ2ZXJfc3ZjCiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl90ZW1wbGF0ZV9jYWNoZV90dGwKCiAgICAgICMgT3RoZXIgdXNlcnMKICAgICAgLSA8PDogKl9hcGJfY29udHJvbGxlcl91c2VyCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCiAgICAgIC0gPDw6ICpfYXBiX2NvbnRyb2xsZXJfcHdkCiAgICAgICAgZGlz\
cGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nCgogICAgICAjIFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9yZXBsaWNhcwogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9yZXBsaWNhcwogICAgICAgIGRlZmF1bHQ6IDIKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfdm9sdW1lX3NpemUKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfdm9sdW1lX3NpemUKICAgICAgICBkZXNjcmlwdGlvbjogU3BlY2lmeSB0aGUgUGVyc2lzdGVudCBWb2x1bWUgQ2xhaW0gc2l6ZSB0byBjcmVhdGUuIEZvciBleGFtcGxlLCA2NE1pCiAgICAgICAgZGVmYXVsdDogNjRNaQogICAgICAgIGRpc3BsYXlf\
Z3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9ob3N0bmFtZQogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9ob3N0bmFtZQogICAgICAgIGRlc2NyaXB0aW9uOiBQdWJsaWMgaG9zdG5hbWUgZm9yIFNtYXJ0IFJvdXRlci4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX3NlY3JldF9uYW1lCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX3NlY3JldF9uYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX2tleXN0b3JlX25hbWUKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfa2V5c3RvcmVfbmFtZQogICAg\
ICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9rZXlzdG9yZV9hbGlhcwogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9rZXlzdG9yZV9hbGlhcwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9rZXlzdG9yZV9wd2QKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfa2V5c3RvcmVfcHdkCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCgogICAgICAjIFByb2Nlc3MgU2VydmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX21vZGUKICAgICAgLSBuYW1lOiBhcGJfa2llc2VydmVyX3NldHMKICAgICAgICB0aXRsZTogU2V0cyBvZiBQcm9jZXNzIFNlcnZlcnMKICAg\
ICAgICBkZXNjcmlwdGlvbjoKICAgICAgICAgIE51bWJlciBvZiBzZXRzIG9mIEtpZSBQcm9jZXNzIFNlcnZlciBjbHVzdGVyICsgZGF0YWJhc2UgdGhhdCB3aWxsIGJlIGRlcGxveWVkLgogICAgICAgICAgRWFjaCBzZXQgY2FuIHJ1biBzZXBhcmF0ZSBzZXJ2aWNlcyBhbmQgb3RoZXIgYXNzZXRzLiBBbGwgc2V0cyBjb25uZWN0IHRvIHRoZSBzYW1lIFNtYXJ0IFJvdXRlcgogICAgICAgIGRlZmF1bHQ6IDIKICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgIHR5cGU6IG51bWJlcgogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCiAgICAgIC0gPDw6ICpfYXBiX3JlcGxpY2FzCiAgICAgICAgbmFtZTogYXBiX2tpZXNlcnZlcl9yZXBsaWNhcwogICAgICAg\
IGRlZmF1bHQ6IDMKICAgICAgICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9kYl90eXBlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2RiX3NpemUKCiAgICAgICMjIEtleXN0b3JlIGFuZCBTZWNyZXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfc2VjcmV0X25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9hbGlhcwogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9wd2QKCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3VzZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfcHdkCiAgICAgIC0gPDw6ICpfYXBiX2tpZXNlcnZlcl9ob3N0\
bmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3N0YXJ0dXBfc3RyYXRlZ3kKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfaW1hZ2Vfc3RyZWFtX25hbWUKCiAgICAgICMgRXh0ZXJuYWwgRGF0YWJhc2UKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZHJpdmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RpYWxlY3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfaG9zdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9wb3J0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2\
ZXJfZXh0ZXJuYWxfZGJfdXJsCgogICAgICAjIEpNUwogICAgICAtICpfYXBiX2VuYWJsZV9raWVzZXJ2ZXJfam1zX2ludGVncmF0aW9uCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfZXhlY3V0b3IKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yX3RyYW5zYWN0ZWQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3JlcXVlc3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3Jlc3BvbnNlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfc2lnbmFsCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9zaWduYWwKICAgICAgLSAq\
X2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9hdWRpdAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfYXVkaXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2F1ZGl0X3RyYW5zYWN0ZWQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3VzZXJuYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19wYXNzd29yZAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfYW1xX3F1ZXVlcwoKICAgICAgIyBSSCAtIFNTTwogICAgICAtICpfYXBiX3Nzb191cmwKICAgICAgLSAqX2FwYl9zc29fcmVhbG0KICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudAogICAgICAgIG5hbWU6IGFwYl9zc29fYnVzaW5lc3NjZW50cmFsX2NsaWVudAogICAgICAgIHRpdGxlOiBS\
SC1TU08gQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nIC0gQ2xpZW50CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IG5hbWUgZm9yIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZy4gSWYgdGhlIHNlY3JldCwgdXNlciBhbmQgcGFzc3dvcmQgYXJlIHByb3ZpZGVkIGl0IHdpbGwgYmUgY3JlYXRlZC4gRm9yIGV4YW1wbGUsIGJ1c2luZXNzY2VudHJhbAogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIG5hbWU6IGFwYl9zc29fYnVzaW5lc3NjZW50cmFsX2NsaWVudF9zZWNyZXQKICAgICAgICB0aXRsZTogUkgtU1NPIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZyAtIENsaWVudCBTZWNyZXQKICAg\
ICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgc2VjcmV0IGZvciBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcuCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnQKICAgICAgICBuYW1lOiBhcGJfa2llc2VydmVyX3Nzb19jbGllbnQKICAgICAgICB0aXRsZTogUkgtU1NPIFByb2Nlc3MgU2VydmVyIC0gQ2xpZW50CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IG5hbWUgZm9yIFByb2Nlc3MgU2VydmVyLiBJZiB0aGUgc2VjcmV0LCB1c2VyIGFuZCBwYXNzd29yZCBhcmUgcHJvdmlkZWQgaXQgd2lsbCBiZSBjcmVhdGVkLiBGb3IgZXhhbXBsZSwga2llc2VydmVyCiAgICAgIC0gPDw6ICpfYXBi\
X3Nzb19jbGllbnRfc2VjcmV0CiAgICAgICAgbmFtZTogYXBiX2tpZXNlcnZlcl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIHRpdGxlOiBSSC1TU08gUHJvY2VzcyBTZXJ2ZXIgLSBDbGllbnQgU2VjcmV0CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IHNlY3JldCBmb3IgUHJvY2VzcyBTZXJ2ZXIuCiAgICAgIC0gKl9hcGJfc3NvX3VzZXIKICAgICAgLSAqX2FwYl9zc29fcHdkCiAgICAgIC0gKl9hcGJfc3NvX2Rpc2FibGVfc3NsX2NlcnRfdmFsaWRhdGlvbgogICAgICAtICpfYXBiX3Nzb19wcmluY2lwYWxfYXR0cmlidXRlCgogICAgICAjIExEQVAKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXJsCiAgICAgIC0gKl9hcGJfYXV0\
aF9sZGFwX2JpbmRfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmluZF9jcmVkZW50aWFsCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2phYXNfc2VjdXJpdHlfZG9tYWluCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfY3R4X2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Jhc2VfZmlsdGVyCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3NlYXJjaF9zY29wZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfdGltZV9saW1pdAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kaXN0aW5ndWlzaGVkX25hbWVfYXR0cmlidXRlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3BhcnNlX3VzZXJuYW1lCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2JlZ2luX3N0\
cmluZwogICAgICAtICpfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9lbmRfc3RyaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lkCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVzX2N0eF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2ZpbHRlcgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX3JlY3Vyc2lvbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9kZWZhdWx0X3JvbGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9uYW1lX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV9yb2xlX25hbWVfZnJvbV9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pc19kbgogICAg\
ICAtICpfYXBiX2F1dGhfbGRhcF9yZWZlcnJhbF91c2VyX2F0dHJpYnV0ZV9pZF90b19jaGVjawoKICAgICAgIyBSb2xlTWFwcGluZwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcm9sZXNfcHJvcGVydGllcwogICAgICAtICpfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcmVwbGFjZV9yb2xlCg=="

modules:
  repositories:
    - path: modules
  install:
    - name: rhpam-apb
packages:
  content_sets_file: content_sets.yml
  repositories:
    - name: base
      id: rhel-7-server-rpms
  install:
    - java-1.8.0-openjdk-headless
osbs:
  configuration:
    container_file: container.yaml
  repository:
    name: apbs/rhpam-7-apb-openshift
    branch: rhpam-7-rhel-7
