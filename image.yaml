schema_version: 1

name: "rhpam-7/rhpam-apb"
description: "Red Hat Business Central 7.4 OpenShift Ansible Playbook Bundle"
version: "1.2"
from: "openshift3/apb-base:v3.11"
labels:
  - name: "com.redhat.component"
    value: "rhpam-apb"
  - name: "io.k8s.description"
    value: "Platform for running Red Hat Process Automation Manager"
  - name: "io.k8s.display-name"
    value: "Red Hat Process Automation Manager 7.4"
  - name: "io.openshift.tags"
    value: "javaee,eap,eap7,rhpam,rhpam7,apb"
  - name: "com.redhat.apb.spec"
    value: "LS0tCiMgQ29tbW9uIENyZWRlbnRpYWxzCl9hcGJfa2llX2FkbWluX3VzZXI6ICZfYXBiX2tpZV9hZG1pbl91c2VyCiAgbmFtZTogYXBiX2tpZV9hZG1pbl91c2VyCiAgdGl0bGU6IEFkbWluIFVzZXJuYW1lCiAgZGVzY3JpcHRpb246IEFkbWluIHVzZXIgbmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJhbCBhbmQgUHJvY2VzcyBTZXJ2ZXIKICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IGFkbWluVXNlcgpfYXBiX2tpZV9hZG1pbl9wd2Q6ICZfYXBiX2tpZV9hZG1pbl9wd2QKICBuYW1lOiBhcGJfa2llX2FkbWluX3B3ZAogIHRpdGxlOiBBZG1pbiBQYXNzd29yZAogIGRlc2NyaXB0aW9uOiBBZG1pbiB1c2VyIHBhc3N3b3JkIGZvciBCdXNpbmVzcyBDZW50\
cmFsIGFuZCBQcm9jZXNzIFNlcnZlci4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAojIEltYWdlU3RyZWFtcwpfYXBiX2ltYWdlX3N0cmVhbV90YWc6ICZfYXBiX2ltYWdlX3N0cmVhbV90YWcKICBuYW1lOiBhcGJfaW1hZ2Vfc3RyZWFtX3RhZwogIHRpdGxlOiBJbWFnZSB2ZXJzaW9uCiAgZGVzY3JpcHRpb246IFRhZyB2ZXJzaW9uIG9mIHRoZSBSSFBBTSBJbWFnZVN0cmVhbSB0byB1c2UuIEl0IG11c3QgZXhpc3QgaW4gdGhlIG9wZW5zaGlmdCBuYW1lc3BhY2UuCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBzdHJpbmcKICBkZWZhdWx0OiAnMS4wJwojIEhBCl9hcGJfcmVwbGljYXM6ICZfYXBiX3JlcGxpY2FzCiAg\
dGl0bGU6IE51bWJlciBvZiByZXBsaWNhcwogIGRlc2NyaXB0aW9uOiBOdW1iZXIgb2YgUmVwbGljYXMgdGhhdCB3aWxsIGJlIGluaXRpYWxseSBkZXBsb3llZAogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogbnVtYmVyCiAgZGVmYXVsdDogMwojIE1hdmVuCl9hcGJfbWF2ZW5fbWlycm9yX3VybDogJl9hcGJfbWF2ZW5fbWlycm9yX3VybAogIG5hbWU6IGFwYl9tYXZlbl9taXJyb3JfdXJsCiAgdGl0bGU6IE1hdmVuIE1pcnJvciBVUkwKICBkZXNjcmlwdGlvbjogTWF2ZW4gTWlycm9yIHRvIHVzZSBieSBCdXNpbmVzcyBDZW50cmFsIGFuZCBQcm9jZXNzIFNlcnZlcgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IE1hdmVuCl9hcGJfbWF2ZW5fcmVwb191cmw6ICZfYXBi\
X21hdmVuX3JlcG9fdXJsCiAgbmFtZTogYXBiX21hdmVuX3JlcG9fdXJsCiAgdGl0bGU6IE1hdmVuIFJlcG9zaXRvcnkgVVJMCiAgZGVzY3JpcHRpb246IEV4dGVybmFsIE1hdmVuIFJlcG9zaXRvcnkgVVJMLiBMZWF2ZSBlbXB0eSB0byB1c2UgdGhlIHJlcG9zaXRvcnkgcHJvdmlkZWQgYnkgQnVzaW5lc3MgQ2VudHJhbAogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IE1hdmVuCl9hcGJfbWF2ZW5fcmVwb19pZDogJl9hcGJfbWF2ZW5fcmVwb19pZAogIG5hbWU6IGFwYl9tYXZlbl9yZXBvX2lkCiAgdGl0bGU6IE1hdmVuIFJlcG9zaXRvcnkgSUQKICBkZXNjcmlwdGlvbjogVGhlIElEIHRvIHVzZSBmb3IgdGhlIG1hdmVuIHJlcG9zaXRvcnksIGlmIHNldC4gRGVmYXVs\
dCBpcyBnZW5lcmF0ZWQgcmFuZG9tbHkuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTWF2ZW4KX2FwYl9tYXZlbl9yZXBvX3VzZXI6ICZfYXBiX21hdmVuX3JlcG9fdXNlcgogIG5hbWU6IGFwYl9tYXZlbl9yZXBvX3VzZXIKICB0aXRsZTogTWF2ZW4gUmVwb3NpdG9yeSBVc2VybmFtZQogIGRlc2NyaXB0aW9uOiBVc2VybmFtZSB0byB1c2UgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgZXh0ZXJuYWwgTWF2ZW4gcmVwb3NpdG9yeS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBNYXZlbgpfYXBiX21hdmVuX3JlcG9fcHdkOiAmX2FwYl9tYXZlbl9yZXBvX3B3ZAogIG5hbWU6IGFwYl9tYXZlbl9yZXBvX3B3ZAogIHRpdGxlOiBNYXZlbiBSZXBvc2l0b3J5IFBh\
c3N3b3JkCiAgZGVzY3JpcHRpb246IFBhc3N3b3JkIHRvIHVzZSB0byBpbnRlcmFjdCB3aXRoIHRoZSBleHRlcm5hbCBNYXZlbiByZXBvc2l0b3J5LgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfdHlwZTogcGFzc3dvcmQKICBkaXNwbGF5X2dyb3VwOiBNYXZlbgojIEdlbmVyaWMgS2V5c3RvcmUgcGFyYW1ldGVycwpfYXBiX3NlY3JldF9uYW1lOiAmX2FwYl9zZWNyZXRfbmFtZQogIHRpdGxlOiBTZWNyZXQgTmFtZQogIGRlc2NyaXB0aW9uOiBOYW1lIG9mIHRoZSBzZWNyZXQgY29udGFpbmluZyB0aGUga2V5c3RvcmUgdG8gYmUgdXNlZCBieSB0aGUgc2VydmVyIHRvIGFjY2VwdCBIVFRQUyBjb25uZWN0aW9ucy4gR2VuZXJhdGVkIGlmIGVtcHR5CiAgdHlwZTogc3RyaW5nCl9h\
cGJfa2V5c3RvcmVfbmFtZTogJl9hcGJfa2V5c3RvcmVfbmFtZQogIHRpdGxlOiBLZXlzdG9yZSBGaWxlIE5hbWUKICBkZXNjcmlwdGlvbjogTmFtZSBvZiB0aGUga2V5c3RvcmUgZmlsZSBjb250YWluaW5nIHRoZSBjZXJ0aWZpY2F0ZSB0byBiZSB1c2VkIGJ5IHRoZSBzZXJ2ZXIgdG8gYWNjZXB0IEhUVFBTIGNvbm5lY3Rpb25zLiBJZiBhIHNlY3JldCBuYW1lIGlzIG5vdCBwcm92aWRlZCwgdGhlIHNlcnZlciBnZW5lcmF0ZXMgYSBzZWNyZXQgd2l0aCB0aGlzIGtleXN0b3JlIGZpbGUgbmFtZS4KICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IGtleXN0b3JlLmprcwpfYXBiX2tleXN0b3JlX2FsaWFzOiAmX2FwYl9rZXlzdG9yZV9hbGlhcwogIHRp\
dGxlOiBLZXlzdG9yZSBjZXJ0aWZpY2F0ZSBhbGlhcwogIGRlc2NyaXB0aW9uOiBOYW1lIG9mIHRoZSBjZXJ0aWZpY2F0ZSBhbGlhcyBpbmNsdWRlZCBpbiB0aGUga2V5c3RvcmUgdG8gYmUgdXNlZCBieSB0aGUgc2VydmVyIHRvIGFjY2VwdCBIVFRQUyBjb25uZWN0aW9ucy4gSWYgYSBzZWNyZXQgbmFtZSBpcyBub3QgcHJvdmlkZWQsIHRoZSBzZXJ2ZXIgZ2VuZXJhdGVzIGEgc2VyZXQgd2l0aCB0aGlzIGFsaWFzLgogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogc3RyaW5nCiAgZGVmYXVsdDogamJvc3MKX2FwYl9rZXlzdG9yZV9wd2Q6ICZfYXBiX2tleXN0b3JlX3B3ZAogIHRpdGxlOiBLZXlzdG9yZSBhbmQgQ2VydGlmaWNhdGUgUGFzc3dvcmQKICBkZXNjcmlwdGlvbjogUGFz\
c3dvcmQgcHJvdGVjdGluZyBib3RoIHRoZSBLZXlzdG9yZSBhbmQgdGhlIENlcnRpZmljYXRlLiBHZW5lcmF0ZWQgaWYgZW1wdHkKICB0eXBlOiBzdHJpbmcKICBtaW5fbGVuZ3RoOiA2CiAgZGlzcGxheV90eXBlOiBwYXNzd29yZApfYXBiX3ZvbHVtZV9zaXplOiAmX2FwYl92b2x1bWVfc2l6ZQogIHRpdGxlOiBXb3Jrc3BhY2UgU3RvcmFnZSBTaXplCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBzdHJpbmcKICBwYXR0ZXJuOiAiXlswLTldK1ttTWdHdFRdaT8kIgpfYXBiX2hvc3RuYW1lOiAmX2FwYl9ob3N0bmFtZQogIHRpdGxlOiBQdWJsaWMgSG9zdG5hbWUKICB0eXBlOiBzdHJpbmcKIyBCdXNpbmVzcyBDZW50cmFsCl9hcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lOiAm\
X2FwYl9idXNpbmVzc2NlbnRyYWxfaG9zdG5hbWUKICA8PDogKl9hcGJfaG9zdG5hbWUKICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lCiAgZGVzY3JpcHRpb246IFB1YmxpYyBob3N0bmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJhbC4gR2VuZXJhdGVkIGlmIGVtcHR5CiMgT0NQIEVuYWJsZW1lbnQKX2FwYl9jb250cm9sbGVyX2dsb2JhbF9kaXNjb3Zlcnk6ICZfYXBiX2NvbnRyb2xsZXJfZ2xvYmFsX2Rpc2NvdmVyeQogIG5hbWU6IGFwYl9jb250cm9sbGVyX2dsb2JhbF9kaXNjb3ZlcnkKICB0aXRsZTogRW5hYmxlIEtJRSBzZXJ2ZXIgZ2xvYmFsIGRpc2NvdmVyeQogIGRlc2NyaXB0aW9uOiBJZiBzZXQgdG8gdHJ1ZSwgdHVybnMgb24gS0lFIHNlcnZlciBnbG9i\
YWwgZGlzY292ZXJ5IGZlYXR1cmUgKFNldHMgdGhlIG9yZy5raWUuc2VydmVyLmNvbnRyb2xsZXIub3BlbnNoaWZ0Lmdsb2JhbC5kaXNjb3ZlcnkuZW5hYmxlZCBzeXN0ZW0gcHJvcGVydHkpCiAgdHlwZTogYm9vbGVhbgogIGRlZmF1bHQ6IGZhbHNlCiAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbApfYXBiX2NvbnRyb2xsZXJfcHJlZmVyX2tpZXNlcnZlcl9zdmM6ICZfYXBiX2NvbnRyb2xsZXJfcHJlZmVyX2tpZXNlcnZlcl9zdmMKICBuYW1lOiBhcGJfY29udHJvbGxlcl9wcmVmZXJfa2llc2VydmVyX3N2YwogIHRpdGxlOiBQcmVmZXIgUHJvY2VzcyBTZXJ2ZXIgT3BlblNoaWZ0IFNlcnZpY2UKICBkZXNjcmlwdGlvbjogRW5hYmxlcyBjb25uZWN0aW9uIHRvIFBy\
b2Nlc3MgU2VydmVyIHZpYSBPcGVuU2hpZnQgaW50ZXJuYWwgU2VydmljZSBlbmRwb2ludCAoU2V0cyB0aGUgb3JnLmtpZS5zZXJ2ZXIuY29udHJvbGxlci5vcGVuc2hpZnQucHJlZmVyLmtpZXNlcnZlci5zZXJ2aWNlIHN5c3RlbSBwcm9wZXJ0eSkKICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDogdHJ1ZQogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKX2FwYl9jb250cm9sbGVyX3RlbXBsYXRlX2NhY2hlX3R0bDogJl9hcGJfY29udHJvbGxlcl90ZW1wbGF0ZV9jYWNoZV90dGwKICBuYW1lOiBhcGJfY29udHJvbGxlcl90ZW1wbGF0ZV9jYWNoZV90dGwKICB0aXRsZTogUHJvY2VzcyBTZXJ2ZXIgVGVtcGxhdGUgQ2FjaGUgVFRMCiAgZGVzY3JpcHRpb246IFByb2Nl\
c3MgU2VydmVyIFRlbXBsYXRlIENhY2hlIFRUTCBpbiBtaWxsaXNlY29uZHMgKFNldHMgdGhlIG9yZy5raWUuc2VydmVyLmNvbnRyb2xsZXIudGVtcGxhdGUuY2FjaGUudHRsIHN5c3RlbSBwcm9wZXJ0eSkKICB0eXBlOiBudW1iZXIKICBkZWZhdWx0OiA2MDAwMAogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKX2FwYl9idXNpbmVzc2NlbnRyYWxfc2VjcmV0X25hbWU6ICZfYXBiX2J1c2luZXNzY2VudHJhbF9zZWNyZXRfbmFtZQogIDw8OiAqX2FwYl9zZWNyZXRfbmFtZQogIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfc2VjcmV0X25hbWUKICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5\
c3RvcmVfbmFtZTogJl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX25hbWUKICA8PDogKl9hcGJfa2V5c3RvcmVfbmFtZQogIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfbmFtZQogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9hbGlhczogJl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX2FsaWFzCiAgPDw6ICpfYXBiX2tleXN0b3JlX2FsaWFzCiAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9hbGlhcwogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9wd2Q6\
ICZfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9wd2QKICA8PDogKl9hcGJfa2V5c3RvcmVfcHdkCiAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9wd2QKICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKIyBHaXQgSG9va3MKX2FwYl9naXRfaG9va3NfZGlyOiAmX2FwYl9naXRfaG9va3NfZGlyCiAgbmFtZTogYXBiX2dpdF9ob29rc19kaXIKICB0aXRsZTogR2l0IGhvb2tzIGRpcmVjdG9yeQogIGRlc2NyaXB0aW9uOiBUaGUgZGlyZWN0b3J5IHRvIHVzZSBmb3IgZ2l0IGhvb2tzLCBpZiByZXF1aXJlZC4gZS5nLiAvb3B0L2tpZS9kYXRhL2dpdC9ob29rcwogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEJ1c2lu\
ZXNzIENlbnRyYWwKX2FwYl9idXNpbmVzc2NlbnRyYWxfbWF2ZW5fcmVwb191c2VyOiAmX2FwYl9idXNpbmVzc2NlbnRyYWxfbWF2ZW5fcmVwb191c2VyCiAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF9tYXZlbl9yZXBvX3VzZXIKICB0aXRsZTogTWF2ZW4gUmVwb3NpdG9yeSBVc2VybmFtZQogIGRlc2NyaXB0aW9uOiBVc2VybmFtZSB0byB1c2UgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgQnVzaW5lc3MgQ2VudHJhbCBNYXZlbiByZXBvc2l0b3J5LgogIHR5cGU6IHN0cmluZwogIGRlZmF1bHQ6IG1hdmVuVXNlcgogIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKX2FwYl9idXNpbmVzc2NlbnRyYWxfbWF2ZW5fcmVwb19wd2Q6ICZfYXBiX2J1c2luZXNzY2VudHJhbF9t\
YXZlbl9yZXBvX3B3ZAogIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfbWF2ZW5fcmVwb19wd2QKICB0aXRsZTogTWF2ZW4gUmVwb3NpdG9yeSBQYXNzd29yZAogIGRlc2NyaXB0aW9uOiBQYXNzd29yZCB0byB1c2UgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgQnVzaW5lc3MgQ2VudHJhbCBNYXZlbiByZXBvc2l0b3J5LiBHZW5lcmF0ZWQgaWYgZW1wdHkKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X3R5cGU6IHBhc3N3b3JkCiAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbAojIFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX21vZGU6ICZfYXBiX2tpZXNlcnZlcl9tb2RlCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9tb2RlCiAgdGl0bGU6IFByb2Nlc3MgU2VydmVyIE1v\
ZGUKICBkZXNjcmlwdGlvbjogVGhlIEtJRSBTZXJ2ZXIgbW9kZS4gVmFsaWQgdmFsdWVzIGFyZSAnREVWRUxPUE1FTlQnIG9yICdQUk9EVUNUSU9OJy4gKFNldHMgdGhlIG9yZy5raWUuc2VydmVyLm1vZGUgc3lzdGVtIHByb3BlcnR5KS4KICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IGVudW0KICBlbnVtOiBbJ0RFVkVMT1BNRU5UJywgJ1BST0RVQ1RJT04nXQogIGRlZmF1bHQ6IERFVkVMT1BNRU5UCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfaW1hZ2Vfc3RyZWFtX25hbWU6ICZfYXBiX2tpZXNlcnZlcl9pbWFnZV9zdHJlYW1fbmFtZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfaW1hZ2Vfc3RyZWFtX25hbWUKICB0aXRsZTogUHJvY2VzcyBT\
ZXJ2ZXIgSW1hZ2UgU3RyZWFtIE5hbWUKICBkZXNjcmlwdGlvbjogSW1hZ2UgU3RyZWFtIE5hbWUgdG8gdXNlIGZvciBQcm9jZXNzIFNlcnZlci4gSWYgeW91IGhhdmUgZ2VuZXJhdGVkIGEgY3VzdG9tIGltYWdlIChmb3IgZXhhbXBsZSwgdG8gcHJvdmlkZSBhIGRhdGFiYXNlIHNlcnZlciBkcml2ZXIpLCB5b3UgY2FuIGNoYW5nZSB0aGlzIHBhcmFtZXRlciB0byB1c2UgaXQuCiAgcmVxdWlyZWQ6IHRydWUKICB0eXBlOiBzdHJpbmcKICBkZWZhdWx0OiByaHBhbTc0LWtpZXNlcnZlci1vcGVuc2hpZnQKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl91c2VyOiAmX2FwYl9raWVzZXJ2ZXJfdXNlcgogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfdXNl\
cgogIHRpdGxlOiBQcm9jZXNzIFNlcnZlciBVc2VybmFtZQogIGRlc2NyaXB0aW9uOiBVc2VyIHRvIGludGVyYWN0IHdpdGggdGhlIFByb2Nlc3MgU2VydmVyIHVzaW5nIHRoZSBSRVNUIEFQSQogIHJlcXVpcmVkOiB0cnVlCiAgdHlwZTogc3RyaW5nCiAgZGVmYXVsdDogZXhlY3V0aW9uVXNlcgogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX3B3ZDogJl9hcGJfa2llc2VydmVyX3B3ZAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfcHdkCiAgdGl0bGU6IFByb2Nlc3MgU2VydmVyIFBhc3N3b3JkCiAgZGVzY3JpcHRpb246IFVzZXIgcGFzc3dvcmQgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgUHJvY2VzcyBTZXJ2ZXIgdXNpbmcgdGhlIFJFU1QgQVBJLiBH\
ZW5lcmF0ZWQgaWYgZW1wdHkKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X3R5cGU6IHBhc3N3b3JkCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfc2VjcmV0X25hbWU6ICZfYXBiX2tpZXNlcnZlcl9zZWNyZXRfbmFtZQogIDw8OiAqX2FwYl9zZWNyZXRfbmFtZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc2VjcmV0X25hbWUKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9uYW1lOiAmX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfbmFtZQogIDw8OiAqX2FwYl9rZXlzdG9yZV9uYW1lCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9uYW1lCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBT\
ZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfYWxpYXM6ICZfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9hbGlhcwogIDw8OiAqX2FwYl9rZXlzdG9yZV9hbGlhcwogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfYWxpYXMKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9wd2Q6ICZfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9wd2QKICA8PDogKl9hcGJfa2V5c3RvcmVfcHdkCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9wd2QKICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgpfYXBiX2tpZXNlcnZlcl9ob3N0bmFtZTogJl9hcGJfa2llc2VydmVyX2hvc3RuYW1lCiAgPDw6ICpfYXBiX2hvc3RuYW1l\
CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9ob3N0bmFtZQogIGRlc2NyaXB0aW9uOiBQdWJsaWMgaG9zdG5hbWUgZm9yIFByb2Nlc3MgU2VydmVyLiBHZW5lcmF0ZWQgaWYgZW1wdHkKX2FwYl9raWVzZXJ2ZXJfc3RhcnR1cF9zdHJhdGVneTogJl9hcGJfa2llc2VydmVyX3N0YXJ0dXBfc3RyYXRlZ3kKICBuYW1lOiBhcGJfa2llc2VydmVyX3N0YXJ0dXBfc3RyYXRlZ3kKICB0aXRsZTogU3RhcnR1cCBTdHJhdGVneQogIGRlc2NyaXB0aW9uOiAiV2hlbiBzZXQgdG8gT3BlblNoaWZ0U3RhcnR1cFN0cmF0ZWd5LCBhbGxvd3MgUHJvY2VzcyBTZXJ2ZXIgdG8gc3RhcnQgdXAgaW5kZXBlbmRlbnRseSB1c2VkIHNoYXJlZCBzdGF0ZSBmcm9tIE9wZW5TaGlmdCBBUEkgc2VydmljZS4gVGhl\
IE9wZW5TaGlmdFN0YXJ0dXBTdHJhdGVneSBzdHJhdGVneSBpcyBzdGlsbCBUZWNobm9sb2d5IFByZXZpZXcuIERlZmF1bHQ6IENvbnRyb2xsZXJCYXNlZFN0YXJ0dXBTdHJhdGVneSIKICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IGVudW0KICBlbnVtOiBbJ0NvbnRyb2xsZXJCYXNlZFN0YXJ0dXBTdHJhdGVneScsICdPcGVuU2hpZnRTdGFydHVwU3RyYXRlZ3knXQogIGRlZmF1bHQ6IE9wZW5TaGlmdFN0YXJ0dXBTdHJhdGVneQogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX3Byb21ldGhldXNfZXh0X2Rpc2FibGVkOiAmX2FwYl9raWVzZXJ2ZXJfcHJvbWV0aGV1c19leHRfZGlzYWJsZWQKICBuYW1lOiBhcGJfa2llc2VydmVyX3Byb21ldGhl\
dXNfZXh0X2Rpc2FibGVkCiAgdGl0bGU6IFByb21ldGhldXMgU2VydmVyIEV4dGVuc2lvbiBEaXNhYmxlZAogIGRlc2NyaXB0aW9uOiBJZiB1bmNoZWNrZWQsIHRoZSBwcm9tZXRoZXVzIHNlcnZlciBleHRlbnNpb24gd2lsbCBiZSBlbmFibGVkLiAoU2V0cyB0aGUgb3JnLmtpZS5wcm9tZXRoZXVzLnNlcnZlci5leHQuZGlzYWJsZWQgc3lzdGVtIHByb3BlcnR5KQogIHJlcXVpcmVkOiBmYWxzZQogIHR5cGU6IGJvb2xlYW4KICBkZWZhdWx0OiB0cnVlCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfZGJfdHlwZTogJl9hcGJfa2llc2VydmVyX2RiX3R5cGUKICBuYW1lOiBhcGJfa2llc2VydmVyX2RiX3R5cGUKICB0aXRsZTogRGF0YWJhc2Ug\
VHlwZQogIGRlc2NyaXB0aW9uOiBEYXRhYmFzZSBUeXBlIHRvIHBlcnNpc3QgdGhlIFByb2Nlc3MgU2VydmVyIHJ1bnRpbWUgaW5mb3JtYXRpb24uIERPIE5PVCBVU0UgSDIgZm9yIGRlcGxveWluZyBtb3JlIHRoYW4gMSBpbnN0YW5jZSBvZiBQcm9jZXNzIFNlcnZlci4gRm9yIEgyLCBQb3N0Z3JlU1FMLCBhbmQgTXlTUUwgdGhlIGRhdGFiYXNlIHNlcnZlciB3aWxsIGJlIGRlcGxveWVkIGluIGEgcG9kLiBUbyB1c2UgYSBkYXRhYmFzZSBzZXJ2ZXIgdGhhdCBpcyBkZXBsb3llZCBlbHNld2hlcmUsIHNlbGVjdCBFeHRlcm5hbC4KICByZXF1aXJlZDogdHJ1ZQogIHR5cGU6IGVudW0KICBlbnVtOiBbICdIMicsICdQb3N0Z3JlU1FMJywgJ015U1FMJywgJ0V4dGVybmFsJyBdCiAg\
ZGVmYXVsdDogUG9zdGdyZVNRTAogIGRpc3BsYXlfZ3JvdXA6IFByb2Nlc3MgU2VydmVyCl9hcGJfa2llc2VydmVyX2RiX3NpemU6ICZfYXBiX2tpZXNlcnZlcl9kYl9zaXplCiAgPDw6ICpfYXBiX3ZvbHVtZV9zaXplCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9kYl9zaXplCiAgdGl0bGU6IERhdGFiYXNlIFN0b3JhZ2UgU2l6ZQogIGRlc2NyaXB0aW9uOiBQZXJzaXN0ZW50IFZvbHVtZSBDbGFpbSBzaXplIHRvIGNyZWF0ZSBmb3IgdGhlIERhdGFiYXNlLiBGb3IgZXhhbXBsZSwgMUdpLiBJZ25vcmVkIGlmIEV4dGVybmFsIGlzIHNlbGVjdGVkCiAgZGVmYXVsdDogMUdpCiAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZHJp\
dmVyOiAmX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZHJpdmVyCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kcml2ZXIKICB0aXRsZTogRHJpdmVyIG5hbWUKICBkZXNjcmlwdGlvbjogRGF0YWJhc2UgZHJpdmVyIHR5cGUuIFJlcXVpcmVkIGZvciBFeHRlcm5hbCBkYXRhYmFzZS4gRm9yIGV4YW1wbGUsIG15c3FsIG9yIHBvc3RncmVzcWwKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBFeHRlcm5hbCBEYXRhYmFzZSAob25seSBpZiBEYXRhYmFzZSB0eXBlIGlzIEV4dGVybmFsKQpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kaWFsZWN0OiAmX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfZGlhbGVjdAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJf\
ZXh0ZXJuYWxfZGJfZGlhbGVjdAogIHRpdGxlOiBEaWFsZWN0IGNsYXNzCiAgZGVzY3JpcHRpb246IEhpYmVybmF0ZSBkaWFsZWN0IGNsYXNzIHRvIHVzZS4gUmVxdWlyZWQgZm9yIEV4dGVybmFsIGRhdGFiYXNlLiBGb3IgZXhhbXBsZSwgb3JnLmhpYmVybmF0ZS5kaWFsZWN0Lk15U1FMNTdEaWFsZWN0CiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogRXh0ZXJuYWwgRGF0YWJhc2UgKG9ubHkgaWYgRGF0YWJhc2UgdHlwZSBpcyBFeHRlcm5hbCkKX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfaG9zdDogJl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2hvc3QKICBuYW1lOiBhcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2hvc3QKICB0aXRsZTogSG9zdAogIGRlc2Ny\
aXB0aW9uOiBFeHRlcm5hbCBkYXRhYmFzZSBzZXJ2ZXIgaG9zdC4gUmVxdWlyZWQgZm9yIEV4dGVybmFsIGRhdGFiYXNlLiBGb3IgZXhhbXBsZSwgMTI3LjAuMC4xCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogRXh0ZXJuYWwgRGF0YWJhc2UgKG9ubHkgaWYgRGF0YWJhc2UgdHlwZSBpcyBFeHRlcm5hbCkKX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfcG9ydDogJl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3BvcnQKICBuYW1lOiBhcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3BvcnQKICB0aXRsZTogUG9ydAogIGRlc2NyaXB0aW9uOiBFeHRlcm5hbCBkYXRhYmFzZSBzZXJ2ZXIgcG9ydC4gUmVxdWlyZWQgZm9yIEV4dGVybmFsIGRhdGFiYXNlLiBGb3IgZXhh\
bXBsZSwgMzMwNgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEV4dGVybmFsIERhdGFiYXNlIChvbmx5IGlmIERhdGFiYXNlIHR5cGUgaXMgRXh0ZXJuYWwpCl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX25hbWU6ICZfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9uYW1lCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9uYW1lCiAgdGl0bGU6IERhdGFiYXNlIE5hbWUKICBkZXNjcmlwdGlvbjogRXh0ZXJuYWwgRGF0YWJhc2UgbmFtZS4gUmVxdWlyZWQgZm9yIEV4dGVybmFsIGRhdGFiYXNlLiBGb3IgZXhhbXBsZSwgcmhwYW0KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBFeHRlcm5hbCBEYXRhYmFzZSAob25seSBpZiBEYXRhYmFzZSB0\
eXBlIGlzIEV4dGVybmFsKQpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl91cmw6ICZfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl91cmwKICBuYW1lOiBhcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3VybAogIHRpdGxlOiBEYXRhYmFzZSBKREJDIFVSTAogIGRlc2NyaXB0aW9uOiBFeHRlcm5hbCBkYXRhYmFzZSBzZXJ2ZXIgSkRCQyBVUkwuIFJlcXVpcmVkIGZvciBFeHRlcm5hbCBkYXRhYmFzZS4gRm9yIGV4YW1wbGUsIGpkYmM6bXlzcWw6MTI3LjAuMC4xOjMzMDYvcmhwYW0KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBFeHRlcm5hbCBEYXRhYmFzZSAob25seSBpZiBEYXRhYmFzZSB0eXBlIGlzIEV4dGVybmFsKQoKIyBKTVMgZW52cwpfYXBiX2VuYWJsZV9r\
aWVzZXJ2ZXJfam1zX2ludGVncmF0aW9uOiAmX2FwYl9lbmFibGVfa2llc2VydmVyX2ptc19pbnRlZ3JhdGlvbgogIG5hbWU6IGFwYl9lbmFibGVfa2llc2VydmVyX2ptc19pbnRlZ3JhdGlvbgogIHRpdGxlOiBFbmFibGUgSk1TIGludGVncmF0aW9uCiAgZGVzY3JpcHRpb246IFdoZW4gc2V0IHRvIHRydWUgd2lsbCBjb25maWd1cmUgdGhlIEtJRSBTZXJ2ZXIgd2l0aCBKTVMgaW50ZWdyYXRpb24sIGlmIG5vIGNvbmZpZ3VyYXRpb24gaXMgYWRkZWQsIHRoZSBkZWZhdWx0IHdpbGwgYmUgdXNlZC4KICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDogZmFsc2UKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX2V4ZWN1dG9yOiAmX2FwYl9r\
aWVzZXJ2ZXJfam1zX2V4ZWN1dG9yCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3IKICB0aXRsZTogRW5hYmxlIEpNUyBFeGVjdXRvcgogIGRlc2NyaXB0aW9uOiBFbmFibGVzIHRoZSBKTVMgZXhlY3V0b3IsIHVuY2hlY2sgdG8gZGlzYWJsZSBpdC4KICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDogdHJ1ZQogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfZXhlY3V0b3I6ICZfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfZXhlY3V0b3IKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19xdWV1ZV9leGVjdXRvcgogIHRpdGxlOiBLSUUgU2VydmVyIEpNUyBFeGVjdXRvciBRdWV1ZQogIGRlc2NyaXB0aW9uOiBKTkRJ\
IG5hbWUgb2YgZXhlY3V0b3IgcXVldWUgZm9yIEpNUywgZXhhbXBsZSBxdWV1ZS9DVVNUT00uS0lFLlNFUlZFUi5FWEVDVVRPUiwgZGVmYXVsdCBpcyBxdWV1ZS9LSUUuU0VSVkVSLkVYRUNVVE9SLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3JfdHJhbnNhY3RlZDogJl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcl90cmFuc2FjdGVkCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3JfdHJhbnNhY3RlZAogIHRpdGxlOiBLSUUgU2VydmVyIFRyYW5zYWN0ZWQgRXhlY3V0b3IKICBkZXNjcmlwdGlvbjogRW5hYmxlIHRyYW5zYWN0aW9ucyBmb3IgSk1TIGV4ZWN1dG9yLCBkaXNh\
YmxlZCBieSBkZWZhdWx0LgogIHR5cGU6IGJvb2xlYW4KICBkZWZhdWx0OiBmYWxzZQogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVxdWVzdDogJl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXF1ZXN0CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfcmVxdWVzdAogIHRpdGxlOiBLSUUgU2VydmVyIEpNUyBSZXF1ZXN0IFF1ZXVlCiAgZGVzY3JpcHRpb246IEpOREkgbmFtZSBvZiByZXF1ZXN0IHF1ZXVlIGZvciBKTVMsIGV4YW1wbGUgcXVldWUvQ1VTVE9NLktJRS5TRVJWRVIuUkVRVUVTVCwgZGVmYXVsdCBpcyBxdWV1ZS9LSUUuU0VSVkVSLlJFUVVFU1QuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9n\
cm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXNwb25zZTogJl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXNwb25zZQogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3Jlc3BvbnNlCiAgdGl0bGU6IEtJRSBTZXJ2ZXIgSk1TIFJlc3BvbnNlIFF1ZXVlCiAgZGVzY3JpcHRpb246IEpOREkgbmFtZSBvZiByZXNwb25zZSBxdWV1ZSBmb3IgSk1TLCBleGFtcGxlIHF1ZXVlL0NVU1RPTS5LSUUuU0VSVkVSLlJFU1BPTlNFLCBkZWZhdWx0IGlzIHF1ZXVlL0tJRS5TRVJWRVIuUkVTUE9OU0UuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfc2lnbmFs\
OiAmX2FwYl9raWVzZXJ2ZXJfam1zX2VuYWJsZV9zaWduYWwKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19lbmFibGVfc2lnbmFsCiAgdGl0bGU6IEVuYWJsZSBLSUUgU2VydmVyIEpNUyBTaWduYWwgUXVldWUKICBkZXNjcmlwdGlvbjogRW5hYmxlIHRoZSBTaWduYWwgY29uZmlndXJhdGlvbiB0aHJvdWdoIEpNUy4gRGVmYXVsdCBpcyBmYWxzZS4KICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDogZmFsc2UKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX3NpZ25hbDogJl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9zaWduYWwKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19xdWV1ZV9zaWduYWwKICB0aXRsZTogS0lFIFNl\
cnZlciBKTVMgU2lnbmFsIFF1ZXVlCiAgZGVzY3JpcHRpb246IEpOREkgbmFtZSBvZiBzaWduYWwgcXVldWUgZm9yIEpNUywgZXhhbXBsZSBxdWV1ZS9DVVNUT00uS0lFLlNFUlZFUi5TSUdOQUwsIGRlZmF1bHQgaXMgcXVldWUvS0lFLlNFUlZFUi5TSUdOQUwuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfYXVkaXQ6ICZfYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX2F1ZGl0CiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX2F1ZGl0CiAgdGl0bGU6IEVuYWJsZSBLSUUgU2VydmVyIEpNUyBBdWRpdAogIGRlc2NyaXB0aW9uOiBFbmFibGUgdGhlIEF1ZGl0IGxvZ2dpbmcgdGhyb3Vn\
aCBKTVMuIERlZmF1bHQgaXMgZmFsc2UuCiAgdHlwZTogYm9vbGVhbgogIGRlZmF1bHQ6IGZhbHNlCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9hdWRpdDogJl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9hdWRpdAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2F1ZGl0CiAgdGl0bGU6IEtJRSBTZXJ2ZXIgSk1TIEF1ZGl0IFF1ZXVlCiAgZGVzY3JpcHRpb246IEpOREkgbmFtZSBvZiBhdWRpdCBsb2dnaW5nIHF1ZXVlIGZvciBKTVMsIGV4YW1wbGUgcXVldWUvQ1VTVE9NLktJRS5TRVJWRVIuQVVESVQsIGRlZmF1bHQgaXMgcXVldWUvS0lFLlNFUlZFUi5BVURJVC4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5\
X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX2F1ZGl0X3RyYW5zYWN0ZWQ6ICZfYXBiX2tpZXNlcnZlcl9qbXNfYXVkaXRfdHJhbnNhY3RlZAogIG5hbWU6IGFwYl9raWVzZXJ2ZXJfam1zX2F1ZGl0X3RyYW5zYWN0ZWQKICB0aXRsZTogS0lFIFNlcnZlciBKTVMgQXVkaXQgbG9nZ2VyIHRyYW5zYWN0ZWQKICBkZXNjcmlwdGlvbjogRGV0ZXJtaW5lcyBpZiBKTVMgc2Vzc2lvbiBpcyB0cmFuc2FjdGVkIG9yIG5vdCAtIGRlZmF1bHQgdHJ1ZS4KICB0eXBlOiBib29sZWFuCiAgZGVmYXVsdDogdHJ1ZQogIGRpc3BsYXlfZ3JvdXA6IEpNUyBJbnRlZ3JhdGlvbgpfYXBiX2tpZXNlcnZlcl9qbXNfdXNlcm5hbWU6ICZfYXBiX2tpZXNlcnZlcl9qbXNfdXNl\
cm5hbWUKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc191c2VybmFtZQogIHRpdGxlOiBBTVEgVXNlcm5hbWUKICBkZXNjcmlwdGlvbjogQU1RIGJyb2tlciB1c2VybmFtZSB0byBjb25uZWN0IGRvIHRoZSBBTVEsIGdlbmVyYXRlZCBpZiBlbXB0eS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBKTVMgSW50ZWdyYXRpb24KX2FwYl9raWVzZXJ2ZXJfam1zX3Bhc3N3b3JkOiAmX2FwYl9raWVzZXJ2ZXJfam1zX3Bhc3N3b3JkCiAgbmFtZTogYXBiX2tpZXNlcnZlcl9qbXNfcGFzc3dvcmQKICB0aXRsZTogQU1RIFBhc3N3b3JkCiAgZGVzY3JpcHRpb246IEFNUSBicm9rZXIgcGFzc3dvcmQgdG8gY29ubmVjdCBkbyB0aGUgQU1RLCBnZW5lcmF0ZWQgaWYgZW1wdHkuCiAg\
dHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCl9hcGJfa2llc2VydmVyX2ptc19hbXFfcXVldWVzOiAmX2FwYl9raWVzZXJ2ZXJfam1zX2FtcV9xdWV1ZXMKICBuYW1lOiBhcGJfa2llc2VydmVyX2ptc19hbXFfcXVldWVzCiAgdGl0bGU6IEFNUSBRdWV1ZXMKICBkZXNjcmlwdGlvbjogQU1RIGJyb2tlciBicm9rZXIgY29tbWEgc2VwYXJhdGVkIHF1ZXVlcywgaWYgc2V0IHRoZSBRVUVVRVMgbmFtZSB3aWxsIGJlIGlnbm9yZWQsIGlmIGVtcHR5IHRoZSB2YWx1ZXMgZnJvbSBkZWZhdWx0IHF1ZXVlcyB3aWxsIGJlIHVzZWQuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogSk1TIEludGVncmF0aW9uCgojIEV4dGVybmFsIFNlcnZpY2Vz\
IEludGVncmF0aW9uCl9hcGJfc3ZjOiAmX2FwYl9zdmMKICB0aXRsZTogU2VydmljZSBuYW1lCiAgZGVzY3JpcHRpb246IE5hbWUgb2YgdGhlIFNlcnZpY2UKICB0eXBlOiBzdHJpbmcKX2FwYl9ob3N0OiAmX2FwYl9ob3N0CiAgdGl0bGU6IEhvc3QKICBkZXNjcmlwdGlvbjogSG9zdAogIHR5cGU6IHN0cmluZwpfYXBiX3BvcnQ6ICZfYXBiX3BvcnQKICB0aXRsZTogSG9zdCBwb3J0CiAgZGVzY3JpcHRpb246IEhvc3QgcG9ydAogIHR5cGU6IHN0cmluZwpfYXBiX3Byb3RvY29sX3R5cGU6ICZfYXBiX3Byb3RvY29sX3R5cGUKICB0aXRsZTogSG9zdCBQcm90b2NvbAogIGRlc2NyaXB0aW9uOiBIb3N0IHByb3RvY29sIChodHRwL2h0dHBzKQogIHR5cGU6IGVudW0KICBlbnVtOiBb\
ICdodHRwJywgJ2h0dHBzJyBdCiMgUm91dGVyCl9hcGJfcm91dGVyX3N2YzogJl9hcGJfcm91dGVyX3N2YwogIDw8OiAqX2FwYl9zdmMKICBuYW1lOiBhcGJfcm91dGVyX3N2YwogIGRpc3BsYXlfZ3JvdXA6IFJvdXRlciBJbnRlZ3JhdGlvbgpfYXBiX3JvdXRlcl9ob3N0OiAmX2FwYl9yb3V0ZXJfaG9zdAogIDw8OiAqX2FwYl9ob3N0CiAgbmFtZTogYXBiX3JvdXRlcl9ob3N0CiAgZGlzcGxheV9ncm91cDogUm91dGVyIEludGVncmF0aW9uCl9hcGJfcm91dGVyX3BvcnQ6ICZfYXBiX3JvdXRlcl9wb3J0CiAgPDw6ICpfYXBiX3BvcnQKICBuYW1lOiBhcGJfcm91dGVyX3BvcnQKICBkaXNwbGF5X2dyb3VwOiBSb3V0ZXIgSW50ZWdyYXRpb24KX2FwYl9yb3V0ZXJfcHJvdG9jb2w6\
ICZfYXBiX3JvdXRlcl9wcm90b2NvbAogIDw8OiAqX2FwYl9wcm90b2NvbF90eXBlCiAgbmFtZTogYXBiX3JvdXRlcl9wcm90b2NvbAogIGRpc3BsYXlfZ3JvdXA6IFJvdXRlciBJbnRlZ3JhdGlvbgojIENvbnRyb2xsZXIKX2FwYl9jb250cm9sbGVyX3N2YzogJl9hcGJfY29udHJvbGxlcl9zdmMKICA8PDogKl9hcGJfc3ZjCiAgbmFtZTogYXBiX2NvbnRyb2xsZXJfc3ZjCiAgZGlzcGxheV9ncm91cDogQ29udHJvbGxlciBJbnRlZ3JhdGlvbgpfYXBiX2NvbnRyb2xsZXJfaG9zdDogJl9hcGJfY29udHJvbGxlcl9ob3N0CiAgPDw6ICpfYXBiX2hvc3QKICBuYW1lOiBhcGJfY29udHJvbGxlcl9ob3N0CiAgZGlzcGxheV9ncm91cDogQ29udHJvbGxlciBJbnRlZ3JhdGlvbgpfYXBi\
X2NvbnRyb2xsZXJfcG9ydDogJl9hcGJfY29udHJvbGxlcl9wb3J0CiAgPDw6ICpfYXBiX3BvcnQKICBuYW1lOiBhcGJfY29udHJvbGxlcl9wb3J0CiAgZGlzcGxheV9ncm91cDogQ29udHJvbGxlciBJbnRlZ3JhdGlvbgpfYXBiX2NvbnRyb2xsZXJfcHJvdG9jb2w6ICZfYXBiX2NvbnRyb2xsZXJfcHJvdG9jb2wKICA8PDogKl9hcGJfcHJvdG9jb2xfdHlwZQogIG5hbWU6IGFwYl9jb250cm9sbGVyX3Byb3RvY29sCiAgZGlzcGxheV9ncm91cDogQ29udHJvbGxlciBJbnRlZ3JhdGlvbgpfYXBiX2NvbnRyb2xsZXJfdG9rZW46ICZfYXBiX2NvbnRyb2xsZXJfdG9rZW4KICBuYW1lOiBhcGJfY29udHJvbGxlcl90b2tlbgogIHRpdGxlOiBDb250cm9sbGVyIEF1dGggVG9rZW4KICBk\
ZXNjcmlwdGlvbjogQ29udHJvbGxlciBhdXRoZW50aWNhdGlvbiBUb2tlbgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IENvbnRyb2xsZXIgSW50ZWdyYXRpb24KX2FwYl9jb250cm9sbGVyX3VzZXI6ICZfYXBiX2NvbnRyb2xsZXJfdXNlcgogIG5hbWU6IGFwYl9jb250cm9sbGVyX3VzZXIKICB0aXRsZTogQ29udHJvbGxlciBVc2VybmFtZQogIGRlc2NyaXB0aW9uOiBVc2VybmFtZSB0byBhY2Nlc3MgdGhlIENvbnRyb2xsZXIKICB0eXBlOiBzdHJpbmcKICBkZWZhdWx0OiBtb25pdG9yVXNlcgpfYXBiX2NvbnRyb2xsZXJfcHdkOiAmX2FwYl9jb250cm9sbGVyX3B3ZAogIG5hbWU6IGFwYl9jb250cm9sbGVyX3B3ZAogIHRpdGxlOiBDb250cm9sbGVyIFBhc3N3b3Jk\
CiAgZGVzY3JpcHRpb246IFVzZXIgcGFzc3dvcmQgdG8gYWNjZXNzIHRoZSBDb250cm9sbGVyLiBHZW5lcmF0ZWQgaWYgZW1wdHkuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV90eXBlOiBwYXNzd29yZAojIFJILVNTTwpfYXBiX3Nzb191cmw6ICZfYXBiX3Nzb191cmwKICBuYW1lOiBhcGJfc3NvX3VybAogIHRpdGxlOiBSSC1TU08gVVJMCiAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gKFNTTykgVVJMLiBMZWF2ZSBlbXB0eSB0byBhdm9pZCB1c2luZyBTU08uIEZvciBleGFtcGxlLCBodHRwczovL3Joc3NvLmV4YW1wbGUuY29tL2F1dGgKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlvbmFs\
KQpfYXBiX3Nzb19yZWFsbTogJl9hcGJfc3NvX3JlYWxtCiAgbmFtZTogYXBiX3Nzb19yZWFsbQogIHRpdGxlOiBSSC1TU08gUmVhbG0KICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBSZWFsbSBuYW1lLiBGb3IgZXhhbXBsZSwgcmhwYW0KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlvbmFsKQpfYXBiX3Nzb19jbGllbnQ6ICZfYXBiX3Nzb19jbGllbnQKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlvbmFsKQpfYXBiX3Nzb19jbGllbnRfc2VjcmV0OiAmX2FwYl9zc29fY2xpZW50X3NlY3JldAogIHR5cGU6IHN0cmluZwogIGRp\
c3BsYXlfdHlwZTogcGFzc3dvcmQKICBkaXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlvbmFsKQpfYXBiX3Nzb191c2VyOiAmX2FwYl9zc29fdXNlcgogIG5hbWU6IGFwYl9zc29fdXNlcgogIHRpdGxlOiBSSC1TU08gQWRtaW4gVXNlcgogIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIFVzZXIgdG8gYmUgdXNlZCB0byBjcmVhdGUgdGhlIENsaWVudCBpZiBpdCBkb2Vzbid0IGV4aXN0LiBUaGUgdXNlciBtdXN0IGJlIGFibGUgdG8gY3JlYXRlIHNlY3JldHMgb24gdGhlIGdpdmVuIHJlYWxtLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IFJlZCBIYXQgLSBTaW5nbGUgU2lnbi1PbiAoT3B0aW9uYWwpCl9hcGJfc3Nv\
X3B3ZDogJl9hcGJfc3NvX3B3ZAogIG5hbWU6IGFwYl9zc29fcHdkCiAgdGl0bGU6IFJILVNTTyBBZG1pbiBQYXNzd29yZAogIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIFBhc3N3b3JkIHRvIHVzZSB0byBjcmVhdGUgdGhlIENsaWVudCBpZiBpdCBkb2Vzbid0IGV4aXN0LgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfdHlwZTogcGFzc3dvcmQKICBkaXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlvbmFsKQpfYXBiX3Nzb19kaXNhYmxlX3NzbF9jZXJ0X3ZhbGlkYXRpb246ICZfYXBiX3Nzb19kaXNhYmxlX3NzbF9jZXJ0X3ZhbGlkYXRpb24KICBuYW1lOiBhcGJfc3NvX2Rpc2FibGVfc3NsX2NlcnRfdmFsaWRhdGlvbgogIHRp\
dGxlOiBSSC1TU08gRGlzYWJsZSBTU0wgVmFsaWRhdGlvbgogIGRlc2NyaXB0aW9uOiBEaXNhYmxlIFNTTCBDZXJ0aWZpY2F0ZSBWYWxpZGF0aW9uIHdoZW4gY29ubmVjdGluZyB0byBSSC1TU08KICB0eXBlOiBib29sZWFuCiAgZGlzcGxheV9ncm91cDogUmVkIEhhdCAtIFNpbmdsZSBTaWduLU9uIChPcHRpb25hbCkKX2FwYl9zc29fcHJpbmNpcGFsX2F0dHJpYnV0ZTogJl9hcGJfc3NvX3ByaW5jaXBhbF9hdHRyaWJ1dGUKICBuYW1lOiBhcGJfc3NvX3ByaW5jaXBhbF9hdHRyaWJ1dGUKICB0aXRsZTogUkgtU1NPIFByaW5jaXBhbCBBdHRyaWJ1dGUKICBkZXNjcmlwdGlvbjogUHJpbmNpcGFsIGF0dHJpYnV0ZSB0byB1c2UgYXMgdXNlcm5hbWUKICB0eXBlOiBzdHJpbmcKICBk\
aXNwbGF5X2dyb3VwOiBSZWQgSGF0IC0gU2luZ2xlIFNpZ24tT24gKE9wdGlvbmFsKQojIExEQVAgQXV0aApfYXBiX2F1dGhfbGRhcF91cmw6ICZfYXBiX2F1dGhfbGRhcF91cmwKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3VybAogIHRpdGxlOiBMREFQIEVuZHBvaW50CiAgZGVzY3JpcHRpb246IExEQVAgRW5kcG9pbnQgdG8gY29ubmVjdCBmb3IgYXV0aGVudGljYXRpb24uIGUuZy4gImxkYXA6Ly9teWxkYXAuZXhhbXBsZS5jb20iCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX2JpbmRfZG46ICZfYXBiX2F1dGhfbGRhcF9iaW5kX2RuCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9iaW5kX2RuCiAgdGl0bGU6IExEQVAg\
QmluZCBETgogIGRlc2NyaXB0aW9uOiBCaW5kIEROIHVzZWQgZm9yIGF1dGhlbnRpY2F0aW9uLiBlLmcuICJ1aWQ9YWRtaW4sb3U9dXNlcnMsb3U9ZXhtYW1wbGUsb3U9Y29tIgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9iaW5kX2NyZWRlbnRpYWw6ICZfYXBiX2F1dGhfbGRhcF9iaW5kX2NyZWRlbnRpYWwKICBuYW1lOiBhcGJfYXV0aF9sZGFwX2JpbmRfY3JlZGVudGlhbAogIHRpdGxlOiBMREFQIEJpbmQgQ3JlZGVudGlhbHMKICBkZXNjcmlwdGlvbjogTERBUCBDcmVkZW50aWFscyB1c2VkIGZvciBhdXRoZW50aWNhdGlvbgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfdHlwZTogcGFzc3dvcmQKICBkaXNw\
bGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfamFhc19zZWN1cml0eV9kb21haW46ICZfYXBiX2F1dGhfbGRhcF9qYWFzX3NlY3VyaXR5X2RvbWFpbgogIG5hbWU6IGFwYl9hdXRoX2xkYXBfamFhc19zZWN1cml0eV9kb21haW4KICB0aXRsZTogTERBUCBKQUFTIFNlY3VyaXR5IERvbWFpbgogIGRlc2NyaXB0aW9uOiBUaGUgSk1YIE9iamVjdE5hbWUgb2YgdGhlIEphYXNTZWN1cml0eURvbWFpbiB1c2VkIHRvIGRlY3J5cHQgdGhlIHBhc3N3b3JkLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9iYXNlX2N0eF9kbjogJl9hcGJfYXV0aF9sZGFwX2Jhc2VfY3R4X2RuCiAgbmFtZTogYXBi\
X2F1dGhfbGRhcF9iYXNlX2N0eF9kbgogIHRpdGxlOiBMREFQIEJhc2UgRE4KICBkZXNjcmlwdGlvbjogTERBUCBCYXNlIEROIG9mIHRoZSB0b3AtbGV2ZWwgY29udGV4dCB0byBiZWdpbiB0aGUgdXNlciBzZWFyY2guIGUuZy4gIm91PXVzZXJzLG91PWV4YW1wbGUsb3U9Y29tIgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9iYXNlX2ZpbHRlcjogJl9hcGJfYXV0aF9sZGFwX2Jhc2VfZmlsdGVyCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9iYXNlX2ZpbHRlcgogIHRpdGxlOiBMREFQIEJhc2UgU2VhcmNoIGZpbHRlcgogIGRlc2NyaXB0aW9uOiBMREFQIHNlYXJjaCBmaWx0ZXIgdXNlZCB0byBsb2NhdGUgdGhlIGNv\
bnRleHQgb2YgdGhlIHVzZXIgdG8gYXV0aGVudGljYXRlLiBUaGUgaW5wdXQgdXNlcm5hbWUgb3IgdXNlckROIG9idGFpbmVkIGZyb20gdGhlIGxvZ2luIG1vZHVsZSBjYWxsYmFjayBpcyBzdWJzdGl0dXRlZCBpbnRvIHRoZSBmaWx0ZXIgYW55d2hlcmUgYSB7MH0gZXhwcmVzc2lvbiBpcyB1c2VkLiBBIGNvbW1vbiBleGFtcGxlIGZvciB0aGUgc2VhcmNoIGZpbHRlciBpcyAodWlkPXswfSkuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3NlYXJjaF9zY29wZTogJl9hcGJfYXV0aF9sZGFwX3NlYXJjaF9zY29wZQogIG5hbWU6IGFwYl9hdXRoX2xkYXBfc2VhcmNoX3Njb3BlCiAgdGl0bGU6IExEQVAgU2VhcmNo\
IHNjb3BlCiAgZGVzY3JpcHRpb246IFRoZSBzZWFyY2ggc2NvcGUgdG8gdXNlLgogIHR5cGU6IGVudW0KICBlbnVtOiBbICdTVUJUUkVFX1NDT1BFJywgJ09CSkVDVF9TQ09QRScsICdPTkVMRVZFTF9TQ09QRScgXQogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfdGltZV9saW1pdDogJl9hcGJfYXV0aF9sZGFwX3NlYXJjaF90aW1lX2xpbWl0CiAgbmFtZTogYXBiX2F1dGhfbGRhcF9zZWFyY2hfdGltZV9saW1pdAogIHRpdGxlOiBMREFQIFNlYXJjaCB0aW1lIGxpbWl0CiAgZGVzY3JpcHRpb246IFRoZSB0aW1lb3V0IGluIG1pbGxpc2Vjb25kcyBmb3IgdXNlciBvciByb2xlIHNlYXJjaGVzLiBlLmcuICIxMDAwMCIKICB0eXBl\
OiBudW1iZXIKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfZGlzdGluZ3Vpc2hlZF9uYW1lX2F0dHJpYnV0ZTogJl9hcGJfYXV0aF9sZGFwX2Rpc3Rpbmd1aXNoZWRfbmFtZV9hdHRyaWJ1dGUKICBuYW1lOiBhcGJfYXV0aF9sZGFwX2Rpc3Rpbmd1aXNoZWRfbmFtZV9hdHRyaWJ1dGUKICB0aXRsZTogTERBUCBETiBhdHRyaWJ1dGUKICBkZXNjcmlwdGlvbjogVGhlIG5hbWUgb2YgdGhlIGF0dHJpYnV0ZSBpbiB0aGUgdXNlciBlbnRyeSB0aGF0IGNvbnRhaW5zIHRoZSBETiBvZiB0aGUgdXNlci4gVGhpcyBtYXkgYmUgbmVjZXNzYXJ5IGlmIHRoZSBETiBvZiB0aGUgdXNlciBpdHNlbGYgY29udGFpbnMgc3BlY2lhbCBjaGFyYWN0ZXJzLCBi\
YWNrc2xhc2ggZm9yIGV4YW1wbGUsIHRoYXQgcHJldmVudCBjb3JyZWN0IHVzZXIgbWFwcGluZy4gSWYgdGhlIGF0dHJpYnV0ZSBkb2VzIG5vdCBleGlzdCwgdGhlIGVudHJ54oCZcyBETiBpcyB1c2VkLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9wYXJzZV91c2VybmFtZTogJl9hcGJfYXV0aF9sZGFwX3BhcnNlX3VzZXJuYW1lCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9wYXJzZV91c2VybmFtZQogIHRpdGxlOiBMREFQIFBhcnNlIHVzZXJuYW1lCiAgZGVzY3JpcHRpb246IEEgZmxhZyBpbmRpY2F0aW5nIGlmIHRoZSBETiBpcyB0byBiZSBwYXJzZWQgZm9yIHRoZSB1c2VybmFtZS4gSWYgc2V0IHRvIHRydWUs\
IHRoZSBETiBpcyBwYXJzZWQgZm9yIHRoZSB1c2VybmFtZS4gSWYgc2V0IHRvIGZhbHNlIHRoZSBETiBpcyBub3QgcGFyc2VkIGZvciB0aGUgdXNlcm5hbWUuIFRoaXMgb3B0aW9uIGlzIHVzZWQgdG9nZXRoZXIgd2l0aCB1c2VybmFtZUJlZ2luU3RyaW5nIGFuZCB1c2VybmFtZUVuZFN0cmluZy4KICB0eXBlOiBib29sZWFuCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2JlZ2luX3N0cmluZzogJl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2JlZ2luX3N0cmluZwogIG5hbWU6IGFwYl9hdXRoX2xkYXBfdXNlcm5hbWVfYmVnaW5fc3RyaW5nCiAgdGl0bGU6IExEQVAgVXNlcm5hbWUgYmVnaW4gc3RyaW5nCiAgZGVzY3JpcHRp\
b246IERlZmluZXMgdGhlIFN0cmluZyB3aGljaCBpcyB0byBiZSByZW1vdmVkIGZyb20gdGhlIHN0YXJ0IG9mIHRoZSBETiB0byByZXZlYWwgdGhlIHVzZXJuYW1lLiBUaGlzIG9wdGlvbiBpcyB1c2VkIHRvZ2V0aGVyIHdpdGggdXNlcm5hbWVFbmRTdHJpbmcgYW5kIG9ubHkgdGFrZW4gaW50byBhY2NvdW50IGlmIHBhcnNlVXNlcm5hbWUgaXMgc2V0IHRvIHRydWUuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2VuZF9zdHJpbmc6ICZfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9lbmRfc3RyaW5nCiAgbmFtZTogYXBiX2F1dGhfbGRhcF91c2VybmFtZV9lbmRfc3RyaW5nCiAgdGl0bGU6IExEQVAg\
VXNlcm5hbWUgZW5kIHN0cmluZwogIGRlc2NyaXB0aW9uOiBEZWZpbmVzIHRoZSBTdHJpbmcgd2hpY2ggaXMgdG8gYmUgcmVtb3ZlZCBmcm9tIHRoZSBlbmQgb2YgdGhlIEROIHRvIHJldmVhbCB0aGUgdXNlcm5hbWUuIFRoaXMgb3B0aW9uIGlzIHVzZWQgdG9nZXRoZXIgd2l0aCB1c2VybmFtZUVuZFN0cmluZyBhbmQgb25seSB0YWtlbiBpbnRvIGFjY291bnQgaWYgcGFyc2VVc2VybmFtZSBpcyBzZXQgdG8gdHJ1ZS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaWQ6ICZfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pZAogIG5hbWU6IGFwYl9hdXRoX2xkYXBfcm9sZV9hdHRy\
aWJ1dGVfaWQKICB0aXRsZTogTERBUCBSb2xlIGF0dHJpYnV0ZUlECiAgZGVzY3JpcHRpb246IE5hbWUgb2YgdGhlIGF0dHJpYnV0ZSBjb250YWluaW5nIHRoZSB1c2VyIHJvbGVzLiBlLmcuICJtZW1iZXJPZiIKICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfcm9sZXNfY3R4X2RuOiAmX2FwYl9hdXRoX2xkYXBfcm9sZXNfY3R4X2RuCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9yb2xlc19jdHhfZG4KICB0aXRsZTogTERBUCBSb2xlcyBTZWFyY2ggRE4KICBkZXNjcmlwdGlvbjogVGhlIGZpeGVkIEROIG9mIHRoZSBjb250ZXh0IHRvIHNlYXJjaCBmb3IgdXNlciByb2xlcy4gVGhpcyBpcyBub3QgdGhlIEROIHdoZXJl\
IHRoZSBhY3R1YWwgcm9sZXMgYXJlLCBidXQgdGhlIEROIHdoZXJlIHRoZSBvYmplY3RzIGNvbnRhaW5pbmcgdGhlIHVzZXIgcm9sZXMgYXJlLiBGb3IgZXhhbXBsZSwgaW4gYSBNaWNyb3NvZnQgQWN0aXZlIERpcmVjdG9yeSBzZXJ2ZXIsIHRoaXMgaXMgdGhlIEROIHdoZXJlIHRoZSB1c2VyIGFjY291bnQgaXMuCiAgdHlwZTogc3RyaW5nCiAgZGlzcGxheV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3JvbGVfZmlsdGVyOiAmX2FwYl9hdXRoX2xkYXBfcm9sZV9maWx0ZXIKICBuYW1lOiBhcGJfYXV0aF9sZGFwX3JvbGVfZmlsdGVyCiAgdGl0bGU6IExEQVAgUm9sZSBzZWFyY2ggZmlsdGVyCiAgZGVzY3JpcHRpb246IEEgc2VhcmNoIGZpbHRlciB1c2Vk\
IHRvIGxvY2F0ZSB0aGUgcm9sZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBhdXRoZW50aWNhdGVkIHVzZXIuIFRoZSBpbnB1dCB1c2VybmFtZSBvciB1c2VyRE4gb2J0YWluZWQgZnJvbSB0aGUgbG9naW4gbW9kdWxlIGNhbGxiYWNrIGlzIHN1YnN0aXR1dGVkIGludG8gdGhlIGZpbHRlciBhbnl3aGVyZSBhIHswfSBleHByZXNzaW9uIGlzIHVzZWQuIFRoZSBhdXRoZW50aWNhdGVkIHVzZXJETiBpcyBzdWJzdGl0dXRlZCBpbnRvIHRoZSBmaWx0ZXIgYW55d2hlcmUgYSB7MX0gaXMgdXNlZC4gQW4gZXhhbXBsZSBzZWFyY2ggZmlsdGVyIHRoYXQgbWF0Y2hlcyBvbiB0aGUgaW5wdXQgdXNlcm5hbWUgaXMgKG1lbWJlcj17MH0pLiBBbiBhbHRlcm5hdGl2ZSB0aGF0IG1hdGNoZXMgb24g\
dGhlIGF1dGhlbnRpY2F0ZWQgdXNlckROIGlzIChtZW1iZXI9ezF9KS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfcm9sZV9yZWN1cnNpb246ICZfYXBiX2F1dGhfbGRhcF9yb2xlX3JlY3Vyc2lvbgogIG5hbWU6IGFwYl9hdXRoX2xkYXBfcm9sZV9yZWN1cnNpb24KICB0aXRsZTogTERBUCBSb2xlIHJlY3Vyc2lvbgogIGRlc2NyaXB0aW9uOiBUaGUgbnVtYmVyIG9mIGxldmVscyBvZiByZWN1cnNpb24gdGhlIHJvbGUgc2VhcmNoIHdpbGwgZ28gYmVsb3cgYSBtYXRjaGluZyBjb250ZXh0LiBEaXNhYmxlIHJlY3Vyc2lvbiBieSBzZXR0aW5nIHRoaXMgdG8gMC4KICB0eXBlOiBudW1iZXIKICBkaXNwbGF5X2dy\
b3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfZGVmYXVsdF9yb2xlOiAmX2FwYl9hdXRoX2xkYXBfZGVmYXVsdF9yb2xlCiAgbmFtZTogYXBiX2F1dGhfbGRhcF9kZWZhdWx0X3JvbGUKICB0aXRsZTogTERBUCBEZWZhdWx0IHJvbGUKICBkZXNjcmlwdGlvbjogQSByb2xlIGluY2x1ZGVkIGZvciBhbGwgYXV0aGVudGljYXRlZCB1c2VycwogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9yb2xlX25hbWVfYXR0cmlidXRlX2lkOiAmX2FwYl9hdXRoX2xkYXBfcm9sZV9uYW1lX2F0dHJpYnV0ZV9pZAogIG5hbWU6IGFwYl9hdXRoX2xkYXBfcm9sZV9uYW1lX2F0dHJpYnV0ZV9pZAogIHRpdGxlOiBMREFQ\
IFJvbGUgbmFtZSBhdHRyaWJ1dGUgSUQKICBkZXNjcmlwdGlvbjogTmFtZSBvZiB0aGUgYXR0cmlidXRlIHdpdGhpbiB0aGUgcm9sZUN0eEROIGNvbnRleHQgd2hpY2ggY29udGFpbnMgdGhlIHJvbGUgbmFtZS4gSWYgdGhlIHJvbGVBdHRyaWJ1dGVJc0ROIHByb3BlcnR5IGlzIHNldCB0byB0cnVlLCB0aGlzIHByb3BlcnR5IGlzIHVzZWQgdG8gZmluZCB0aGUgcm9sZSBvYmplY3TigJlzIG5hbWUgYXR0cmlidXRlLgogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IExEQVAgKE9wdGlvbmFsKQpfYXBiX2F1dGhfbGRhcF9wYXJzZV9yb2xlX25hbWVfZnJvbV9kbjogJl9hcGJfYXV0aF9sZGFwX3BhcnNlX3JvbGVfbmFtZV9mcm9tX2RuCiAgbmFtZTogYXBiX2F1dGhfbGRh\
cF9wYXJzZV9yb2xlX25hbWVfZnJvbV9kbgogIHRpdGxlOiBMREFQIFJvbGUgRE4gY29udGFpbnMgcm9sZU5hbWVBdHRyaWJ1dGVJRAogIGRlc2NyaXB0aW9uOiBBIGZsYWcgaW5kaWNhdGluZyBpZiB0aGUgRE4gcmV0dXJuZWQgYnkgYSBxdWVyeSBjb250YWlucyB0aGUgcm9sZU5hbWVBdHRyaWJ1dGVJRC4gSWYgc2V0IHRvIHRydWUsIHRoZSBETiBpcyBjaGVja2VkIGZvciB0aGUgcm9sZU5hbWVBdHRyaWJ1dGVJRC4gSWYgc2V0IHRvIGZhbHNlLCB0aGUgRE4gaXMgbm90IGNoZWNrZWQgZm9yIHRoZSByb2xlTmFtZUF0dHJpYnV0ZUlELiBUaGlzIGZsYWcgY2FuIGltcHJvdmUgdGhlIHBlcmZvcm1hbmNlIG9mIExEQVAgcXVlcmllcy4KICB0eXBlOiBib29sZWFuCiAgZGlzcGxh\
eV9ncm91cDogTERBUCAoT3B0aW9uYWwpCl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lzX2RuOiAmX2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaXNfZG4KICBuYW1lOiBhcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lzX2RuCiAgdGl0bGU6IExEQVAgUm9sZSBBdHRyaWJ1dGUgSUQgaXMgRE4KICBkZXNjcmlwdGlvbjogV2hldGhlciBvciBub3QgdGhlIHJvbGVBdHRyaWJ1dGVJRCBjb250YWlucyB0aGUgZnVsbHktcXVhbGlmaWVkIEROIG9mIGEgcm9sZSBvYmplY3QuIElmIGZhbHNlLCB0aGUgcm9sZSBuYW1lIGlzIHRha2VuIGZyb20gdGhlIHZhbHVlIG9mIHRoZSByb2xlTmFtZUF0dHJpYnV0ZUlkIGF0dHJpYnV0ZSBvZiB0aGUgY29udGV4dCBuYW1l\
LiBDZXJ0YWluIGRpcmVjdG9yeSBzY2hlbWFzLCBzdWNoIGFzIE1pY3Jvc29mdCBBY3RpdmUgRGlyZWN0b3J5LCByZXF1aXJlIHRoaXMgYXR0cmlidXRlIHRvIGJlIHNldCB0byB0cnVlLgogIHR5cGU6IGJvb2xlYW4KICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX2xkYXBfcmVmZXJyYWxfdXNlcl9hdHRyaWJ1dGVfaWRfdG9fY2hlY2s6ICZfYXBiX2F1dGhfbGRhcF9yZWZlcnJhbF91c2VyX2F0dHJpYnV0ZV9pZF90b19jaGVjawogIG5hbWU6IGFwYl9hdXRoX2xkYXBfcmVmZXJyYWxfdXNlcl9hdHRyaWJ1dGVfaWRfdG9fY2hlY2sKICB0aXRsZTogTERBUCBSZWZlcnJhbCB1c2VyIGF0dHJpYnV0ZSBJRAogIGRlc2NyaXB0aW9uOiBJZiB5b3UgYXJl\
IG5vdCB1c2luZyByZWZlcnJhbHMsIHRoaXMgb3B0aW9uIGNhbiBiZSBpZ25vcmVkLiBXaGVuIHVzaW5nIHJlZmVycmFscywgdGhpcyBvcHRpb24gZGVub3RlcyB0aGUgYXR0cmlidXRlIG5hbWUgd2hpY2ggY29udGFpbnMgdXNlcnMgZGVmaW5lZCBmb3IgYSBjZXJ0YWluIHJvbGUsIGZvciBleGFtcGxlIG1lbWJlciwgaWYgdGhlIHJvbGUgb2JqZWN0IGlzIGluc2lkZSB0aGUgcmVmZXJyYWwuIFVzZXJzIGFyZSBjaGVja2VkIGFnYWluc3QgdGhlIGNvbnRlbnQgb2YgdGhpcyBhdHRyaWJ1dGUgbmFtZS4gSWYgdGhpcyBvcHRpb24gaXMgbm90IHNldCwgdGhlIGNoZWNrIHdpbGwgYWx3YXlzIGZhaWwsIHNvIHJvbGUgb2JqZWN0cyBjYW5ub3QgYmUgc3RvcmVkIGluIGEgcmVmZXJy\
YWwgdHJlZS4KICB0eXBlOiBzdHJpbmcKICBkaXNwbGF5X2dyb3VwOiBMREFQIChPcHRpb25hbCkKX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JvbGVzX3Byb3BlcnRpZXM6ICZfYXBiX2F1dGhfcm9sZV9tYXBwZXJfcm9sZXNfcHJvcGVydGllcwogIG5hbWU6IGFwYl9hdXRoX3JvbGVfbWFwcGVyX3JvbGVzX3Byb3BlcnRpZXMKICB0aXRsZTogUm9sZU1hcHBpbmcgcm9sZXNQcm9wZXJ0aWVzIGZpbGUgcGF0aAogIGRlc2NyaXB0aW9uOiBXaGVuIHByZXNlbnQsIHRoZSBSb2xlTWFwcGluZyBMb2dpbiBNb2R1bGUgd2lsbCBiZSBjb25maWd1cmVkIHRvIHVzZSB0aGUgcHJvdmlkZWQgZmlsZS4gVGhpcyBwcm9wZXJ0eSBkZWZpbmVzIHRoZSBmdWxseS1xdWFsaWZpZWQgZmlsZSBwYXRo\
IGFuZCBuYW1lIG9mIGEgcHJvcGVydGllcyBmaWxlIG9yIHJlc291cmNlIHdoaWNoIG1hcHMgcm9sZXMgdG8gcmVwbGFjZW1lbnQgcm9sZXMuIFRoZSBmb3JtYXQgaXMgb3JpZ2luYWxfcm9sZT1yb2xlMSxyb2xlMixyb2xlMwogIHR5cGU6IHN0cmluZwogIGRpc3BsYXlfZ3JvdXA6IFJvbGVNYXBwaW5nIChPcHRpb25hbCkKX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JlcGxhY2Vfcm9sZTogJl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yZXBsYWNlX3JvbGUKICBuYW1lOiBhcGJfYXV0aF9yb2xlX21hcHBlcl9yZXBsYWNlX3JvbGUKICB0aXRsZTogUm9sZU1hcHBpbmcgcmVwbGFjZVJvbGUgcHJvcGVydHkKICBkZXNjcmlwdGlvbjogV2hldGhlciB0byBhZGQgdG8gdGhlIGN1cnJlbnQg\
cm9sZXMsIG9yIHJlcGxhY2UgdGhlIGN1cnJlbnQgcm9sZXMgd2l0aCB0aGUgbWFwcGVkIG9uZXMuIFJlcGxhY2VzIGlmIHNldCB0byB0cnVlLgogIHR5cGU6IGJvb2xlYW4KICBkaXNwbGF5X2dyb3VwOiBSb2xlTWFwcGluZyAoT3B0aW9uYWwpCgojIEFQQiBTcGVjIHZlcnNpb24KdmVyc2lvbjogMS4wCm5hbWU6IHJocGFtLWFwYgpkZXNjcmlwdGlvbjogUmVkIEhhdCBQcm9jZXNzIEF1dG9tYXRpb24gTWFuYWdlciAoQVBCKQpiaW5kYWJsZTogZmFsc2UKYXN5bmM6IHVuc3VwcG9ydGVkCm1ldGFkYXRhOgogIGRpc3BsYXlOYW1lOiBSZWQgSGF0IFByb2Nlc3MgQXV0b21hdGlvbiBNYW5hZ2VyIChBUEIpCiAgZG9jdW1lbnRhdGlvblVybDogaHR0cHM6Ly9kZXZlbG9wZXJzLnJl\
ZGhhdC5jb20vcHJvZHVjdHMvYnBtc3VpdGUvZG9jcy1hbmQtYXBpcy8KICBsb25nRGVzY3JpcHRpb246CiAgICBBcyBhIHN5c3RlbSBlbmdpbmVlciwgeW91IGNhbiBkZXBsb3kgYSBSZWQgSGF0IFByb2Nlc3MgQXV0b21hdGlvbiBNYW5hZ2VyCiAgICBlbnZpcm9ubWVudCBvbiBSZWQgSGF0IE9wZW5TaGlmdCBDb250YWluZXIgUGxhdGZvcm0gdG8gcHJvdmlkZSBhbiBpbmZyYXN0cnVjdHVyZQogICAgdG8gZGV2ZWxvcCBvciBleGVjdXRlIHByb2Nlc3NlcyBhbmQgb3RoZXIgYnVzaW5lc3MgYXNzZXRzLgoKICAgIE1ha2Ugc3VyZSB0aGUgcmVxdWlyZWQgSW1hZ2VTdHJlYW1UYWdzIGV4aXN0IGluIHRoZSBvcGVuc2hpZnQgcHJvamVjdC4gU2VlIGJlbG93IGZvciB0aGUgcmVx\
dWlyZWQgaW1hZ2VzCiAgY29uc29sZS5vcGVuc2hpZnQuaW8vaWNvbkNsYXNzOiBpY29uLXByb2Nlc3NzZXJ2ZXIKICBwcm92aWRlckRpc3BsYXlOYW1lOiAiUmVkIEhhdCwgSW5jLiIKICBzZXJ2aWNlTmFtZTogcmhwYW0KICBkZXBlbmRlbmNpZXM6CiAgICAtICdyZWdpc3RyeS5yZWRoYXQuaW8vcmhwYW0tNy9yaHBhbTc0LWtpZXNlcnZlci1vcGVuc2hpZnQnCiAgICAtICdyZWdpc3RyeS5yZWRoYXQuaW8vcmhwYW0tNy9yaHBhbTc0LWJ1c2luZXNzY2VudHJhbC1vcGVuc2hpZnQnCiAgICAtICdyZWdpc3RyeS5yZWRoYXQuaW8vcmhwYW0tNy9yaHBhbTc0LWNvbnRyb2xsZXItb3BlbnNoaWZ0JwogICAgLSAncmVnaXN0cnkucmVkaGF0LmlvL3JocGFtLTcvcmhwYW03NC1zbWFy\
dHJvdXRlci1vcGVuc2hpZnQnCiAgICAtICdyZWdpc3RyeS5yZWRoYXQuaW8vcmhwYW0tNy9yaHBhbTc0LWJ1c2luZXNzY2VudHJhbC1tb25pdG9yaW5nLW9wZW5zaGlmdCcKICAgIC0gJ3JlZ2lzdHJ5LnJlZGhhdC5pby9yaHNjbC9wb3N0Z3Jlc3FsLTEwLXJoZWw3JwogICAgLSAncmVnaXN0cnkucmVkaGF0LmlvL3Joc2NsL215c3FsLTU3LXJoZWw3Jwp0YWdzOgogIC0gamJwbQogIC0gcmhwYW0KICAtIHByb2Nlc3NzZXJ2ZXIKICAtIGF1dGhvcmluZwogIC0gamJvc3MKcGxhbnM6CiAgLSBuYW1lOiB0cmlhbAogICAgZGVzY3JpcHRpb246CiAgICAgIERlcGxveSBhbiBlcGhlbWVyYWwgZW52aXJvbm1lbnQgZm9yIHRlc3RpbmcgQnVzaW5lc3MgQ2VudHJhbCBhbmQgUHJvY2Vz\
cyBTZXJ2ZXIuIEEgZGVmYXVsdCBgYWRtaW5Vc2VyYCB1c2VyIHdpbGwgYmUgY3JlYXRlZCB3aXRoIHRoZSBgUmVkSGF0YCBwYXNzd29yZC4KICAgICAgSW4gY2FzZSB0aGUgZ2VuZXJhdGVkIHJvdXRlcyBuZWVkIHRvIGJlIG92ZXJyaWRkZW4sIGl0IGlzIHBvc3NpYmxlIHRvIHNldCBjdXN0b20gcm91dGVzIGZvciBib3RoIGFwcGxpY2F0aW9ucy4KICAgIGZyZWU6IHRydWUKICAgIG1ldGFkYXRhOgogICAgICBkaXNwbGF5TmFtZTogRXZhbHVhdGlvbiBFbnZpcm9ubWVudAogICAgcGFyYW1ldGVyczoKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lCiAgICAgICAgdGl0bGU6IEJ1c2luZXNzIENlbnRyYWwgUHVibGljIEhvc3RuYW1lCiAgICAgIC0g\
PDw6ICpfYXBiX2tpZXNlcnZlcl9ob3N0bmFtZQogICAgICAgIHRpdGxlOiBQcm9jZXNzIFNlcnZlciBQdWJsaWMgSG9zdG5hbWUKICAgICAgLSAqX2FwYl9pbWFnZV9zdHJlYW1fdGFnCgogIC0gbmFtZTogYXV0aG9yaW5nCiAgICBkZXNjcmlwdGlvbjoKICAgICAgQW4gZW52aXJvbm1lbnQgZm9yIGNyZWF0aW5nIGFuZCBtb2RpZnlpbmcgcHJvY2Vzc2VzIHVzaW5nIEJ1c2luZXNzIENlbnRyYWwuIEl0IGNvbnNpc3RzIG9mCiAgICAgIHBvZHMgdGhhdCBwcm92aWRlIEJ1c2luZXNzIENlbnRyYWwgZm9yIHRoZSBhdXRob3Jpbmcgd29yayBhbmQgYSBQcm9jZXNzIFNlcnZlciBmb3IgdGVzdCBleGVjdXRpb24gb2YgdGhlIHByb2Nlc3Nlcy4KICAgIGZyZWU6IHRydWUKICAgIG1l\
dGFkYXRhOgogICAgICBkaXNwbGF5TmFtZTogQXV0aG9yaW5nCiAgICBwYXJhbWV0ZXJzOgogICAgICAjIENvbW1vbiBDcmVkZW50aWFscwogICAgICAtICpfYXBiX2tpZV9hZG1pbl91c2VyCiAgICAgIC0gKl9hcGJfa2llX2FkbWluX3B3ZAogICAgICAtICpfYXBiX2ltYWdlX3N0cmVhbV90YWcKCiAgICAgICMgQnVzaW5lc3MgQ2VudHJhbAogICAgICAtIDw8OiAqX2FwYl92b2x1bWVfc2l6ZQogICAgICAgIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfdm9sdW1lX3NpemUKICAgICAgICBkZXNjcmlwdGlvbjogU3BlY2lmeSB0aGUgUGVyc2lzdGVudCBWb2x1bWUgQ2xhaW0gc2l6ZSB0byBjcmVhdGUgZm9yIHN0b3JpbmcgdGhlIFdvcmtzcGFjZS4gRm9yIGV4YW1wbGUsIDFH\
aQogICAgICAgIGRlZmF1bHQ6IDFHaQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgIyBLZXlzdG9yZSBhbmQgU2VjcmV0CiAgICAgIC0gPDw6ICpfYXBiX2J1c2luZXNzY2VudHJhbF9zZWNyZXRfbmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX25hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCiAgICAgIC0gPDw6ICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9hbGlhcwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50\
cmFsX2tleXN0b3JlX3B3ZAogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgIyBIb3N0bmFtZQogICAgICAtIDw8OiAqX2FwYl9idXNpbmVzc2NlbnRyYWxfaG9zdG5hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsCiAgICAgICMgT0NQIEVuYWJsZW1lbnQKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX2dsb2JhbF9kaXNjb3ZlcnkKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3ByZWZlcl9raWVzZXJ2ZXJfc3ZjCiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl90ZW1wbGF0ZV9jYWNoZV90dGwKICAgICAgIyBHaXQgaG9va3MKICAgICAgLSAqX2FwYl9naXRfaG9va3NfZGlyCiAgICAgICMgT3RoZXIgdXNlcnMKICAgICAg\
LSA8PDogKl9hcGJfY29udHJvbGxlcl91c2VyCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbAogICAgICAtIDw8OiAqX2FwYl9jb250cm9sbGVyX3B3ZAogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfbWF2ZW5fcmVwb191c2VyCiAgICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFsX21hdmVuX3JlcG9fcHdkCgogICAgICAjIFByb2Nlc3MgU2VydmVyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX21vZGUKCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2RiX3R5cGUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZGJfc2l6ZQoKICAgICAgIyBLZXlzdG9yZSBhbmQgU2VjcmV0CiAgICAg\
IC0gKl9hcGJfa2llc2VydmVyX3NlY3JldF9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2tleXN0b3JlX25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfYWxpYXMKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfcHdkCgogICAgICAtICpfYXBiX2tpZXNlcnZlcl91c2VyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3B3ZAogICAgICAtIDw8OiAqX2FwYl9raWVzZXJ2ZXJfaG9zdG5hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9zdGFydHVwX3N0cmF0ZWd5CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ltYWdlX3N0cmVhbV9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVy\
X3Byb21ldGhldXNfZXh0X2Rpc2FibGVkCgogICAgICAjIEV4dGVybmFsIERhdGFiYXNlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RyaXZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kaWFsZWN0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2hvc3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfcG9ydAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3VybAoKICAgICAgIyBKTVMKICAgICAgLSAqX2FwYl9lbmFibGVfa2llc2VydmVyX2ptc19pbnRlZ3JhdGlvbgogICAgICAtICpfYXBiX2tpZXNlcnZl\
cl9qbXNfZXhlY3V0b3IKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2V4ZWN1dG9yCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcl90cmFuc2FjdGVkCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXF1ZXN0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXNwb25zZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX3NpZ25hbAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfc2lnbmFsCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfYXVkaXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2F1ZGl0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19h\
dWRpdF90cmFuc2FjdGVkCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc191c2VybmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcGFzc3dvcmQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2FtcV9xdWV1ZXMKCiAgICAgICMgTWF2ZW4KICAgICAgLSAqX2FwYl9tYXZlbl9taXJyb3JfdXJsCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb191cmwKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX2lkCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb191c2VyCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb19wd2QKCiAgICAgICMgUkggLSBTU08KICAgICAgLSAqX2FwYl9zc29fdXJsCiAgICAgIC0gKl9hcGJfc3NvX3JlYWxtCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnQK\
ICAgICAgICBuYW1lOiBhcGJfc3NvX2J1c2luZXNzY2VudHJhbF9jbGllbnQKICAgICAgICB0aXRsZTogUkgtU1NPIEJ1c2luZXNzIENlbnRyYWwgLSBDbGllbnQKICAgICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgbmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJhbC4gSWYgdGhlIHNlY3JldCwgdXNlciBhbmQgcGFzc3dvcmQgYXJlIHByb3ZpZGVkIGl0IHdpbGwgYmUgY3JlYXRlZC4gRm9yIGV4YW1wbGUsIGJ1c2luZXNzY2VudHJhbAogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIG5hbWU6IGFwYl9zc29fYnVzaW5lc3NjZW50cmFsX2NsaWVudF9zZWNyZXQKICAgICAgICB0aXRsZTogUkgtU1NPIEJ1c2luZXNz\
IENlbnRyYWwgLSBDbGllbnQgU2VjcmV0CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IHNlY3JldCBmb3IgQnVzaW5lc3MgQ2VudHJhbC4KICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudAogICAgICAgIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc3NvX2NsaWVudAogICAgICAgIHRpdGxlOiBSSC1TU08gUHJvY2VzcyBTZXJ2ZXIgLSBDbGllbnQKICAgICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgbmFtZSBmb3IgUHJvY2VzcyBTZXJ2ZXIuIElmIHRoZSBzZWNyZXQsIHVzZXIgYW5kIHBhc3N3b3JkIGFyZSBwcm92aWRlZCBpdCB3aWxsIGJlIGNyZWF0ZWQuIEZvciBleGFtcGxlLCBraWVzZXJ2ZXIK\
ICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICBuYW1lOiBhcGJfa2llc2VydmVyX3Nzb19jbGllbnRfc2VjcmV0CiAgICAgICAgdGl0bGU6IFJILVNTTyBQcm9jZXNzIFNlcnZlciAtIENsaWVudCBTZWNyZXQKICAgICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgc2VjcmV0IGZvciBQcm9jZXNzIFNlcnZlci4KICAgICAgLSAqX2FwYl9zc29fdXNlcgogICAgICAtICpfYXBiX3Nzb19wd2QKICAgICAgLSAqX2FwYl9zc29fZGlzYWJsZV9zc2xfY2VydF92YWxpZGF0aW9uCiAgICAgIC0gKl9hcGJfc3NvX3ByaW5jaXBhbF9hdHRyaWJ1dGUKCiAgICAgICMgTERBUAogICAgICAtICpfYXBiX2F1dGhfbGRhcF91cmwK\
ICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmluZF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iaW5kX2NyZWRlbnRpYWwKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfamFhc19zZWN1cml0eV9kb21haW4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmFzZV9jdHhfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmFzZV9maWx0ZXIKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3Njb3BlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3NlYXJjaF90aW1lX2xpbWl0CiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Rpc3Rpbmd1aXNoZWRfbmFtZV9hdHRyaWJ1dGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcGFyc2VfdXNlcm5hbWUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBf\
dXNlcm5hbWVfYmVnaW5fc3RyaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2VuZF9zdHJpbmcKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaWQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZXNfY3R4X2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfZmlsdGVyCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfcmVjdXJzaW9uCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2RlZmF1bHRfcm9sZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX25hbWVfYXR0cmlidXRlX2lkCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3BhcnNlX3JvbGVfbmFtZV9mcm9tX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0\
cmlidXRlX2lzX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JlZmVycmFsX3VzZXJfYXR0cmlidXRlX2lkX3RvX2NoZWNrCgogICAgICAjIFJvbGVNYXBwaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yb2xlc19wcm9wZXJ0aWVzCiAgICAgIC0gKl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yZXBsYWNlX3JvbGUKCiAgLSBuYW1lOiBpbW11dGFibGUta2llCiAgICBkZXNjcmlwdGlvbjoKICAgICAgSW4gdGhpcyBlbnZpcm9ubWVudCwgd2hlbiB5b3UgZGVwbG95IGEgUHJvY2VzcyBTZXJ2ZXIgcG9kLCBpdCBidWlsZHMgYW4gaW1hZ2UgdGhhdCBsb2FkcyBhbmQgc3RhcnRzCiAgICAgIGEgcHJvY2VzcyBvciBncm91cCBvZiBwcm9jZXNzZXMuIFlvdSBjYW5ub3Qg\
c3RvcCBhbnkgcHJvY2VzcyBvbiB0aGUgcG9kIG9yIGFkZCBhbnkgbmV3IHByb2Nlc3MgdG8gdGhlIHBvZC4KICAgICAgSWYgeW91IHdhbnQgdG8gdXNlIGFub3RoZXIgdmVyc2lvbiBvZiBhIHByb2Nlc3Mgb3IgbW9kaWZ5IHRoZSBjb25maWd1cmF0aW9uIGluIGFueSBvdGhlciB3YXksIHlvdSBkZXBsb3kgYSBuZXcKICAgICAgc2VydmVyIGltYWdlIGFuZCBkaXNwbGFjZSB0aGUgb2xkIG9uZS4KICAgIGZyZWU6IHRydWUKICAgIG1ldGFkYXRhOgogICAgICBkaXNwbGF5TmFtZTogSW1tdXRhYmxlIFNlcnZlciAtIFByb2Nlc3MgU2VydmVyCiAgICBwYXJhbWV0ZXJzOgogICAgICAjIENvbW1vbiBDcmVkZW50aWFscwogICAgICAtICpfYXBiX2tpZV9hZG1pbl91c2VyCiAgICAg\
IC0gKl9hcGJfa2llX2FkbWluX3B3ZAogICAgICAtICpfYXBiX2ltYWdlX3N0cmVhbV90YWcKICAgICAgIyBIQQogICAgICAtIDw8OiAqX2FwYl9yZXBsaWNhcwogICAgICAgIG5hbWU6IGFwYl9raWVzZXJ2ZXJfcmVwbGljYXMKICAgICAgICBkZXNjcmlwdGlvbjogTnVtYmVyIG9mIFJlcGxpY2FzIG9mIHRoZSBQcm9jZXNzIFNlcnZlciB0aGF0IHdpbGwgYmUgaW5pdGlhbGx5IGRlcGxveWVkCiAgICAgICAgZGVmYXVsdDogMgoKICAgICAgIyBBcnRpZmFjdCBTb3VyY2UKICAgICAgLSBuYW1lOiBhcGJfa2llc2VydmVyX2NvbnRhaW5lcl9kZXBsb3ltZW50CiAgICAgICAgdGl0bGU6IFByb2Nlc3MgU2VydmVyIENvbnRhaW5lciBEZXBsb3ltZW50CiAgICAgICAgZGVzY3JpcHRp\
b246ICdQcm9jZXNzIFNlcnZlciBDb250YWluZXIgZGVwbG95bWVudCBjb25maWd1cmF0aW9uIGluIGZvcm1hdDogY29udGFpbmVySWQ9Z3JvdXBJZDphcnRpZmFjdElkOnZlcnNpb258YzI9ZzI6YTI6djInCiAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICBkaXNwbGF5X2dyb3VwOiBBcnRpZmFjdCBzb3VyY2UKICAgICAgLSBuYW1lOiBhcGJfa2llc2VydmVyX3NvdXJjZV91cmwKICAgICAgICB0aXRsZTogR2l0IFJlcG9zaXRvcnkgVVJMCiAgICAgICAgZGVzY3JpcHRpb246IEdpdCBzb3VyY2UgVVJJIGZvciBhcHBsaWNhdGlvbi4gRm9yIGV4YW1wbGUsIGh0dHBzOi8vZ2l0aHViLmNvbS9qYm9zcy1jb250YWluZXItaW1hZ2VzL3Jo\
cGFtLTctb3BlbnNoaWZ0LWltYWdlLmdpdAogICAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgZGlzcGxheV9ncm91cDogQXJ0aWZhY3Qgc291cmNlCiAgICAgIC0gbmFtZTogYXBiX2tpZXNlcnZlcl9zb3VyY2VfcmVmCiAgICAgICAgdGl0bGU6IEdpdCBSZXBvc2l0b3J5IFJlZmVyZW5jZQogICAgICAgIGRlc2NyaXB0aW9uOiBHaXQgYnJhbmNoL3RhZyByZWZlcmVuY2UuIEZvciBleGFtcGxlLCA3LjQuMC5HQSBvciBtYXN0ZXIKICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEFydGlmYWN0IHNvdXJjZQogICAgICAtIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc291cmNl\
X2NvbnRleHQKICAgICAgICB0aXRsZTogR2l0IFJlcG9zaXRvcnkgQ29udGV4dCBEaXIKICAgICAgICBkZXNjcmlwdGlvbjogUGF0aCB3aXRoaW4gR2l0IHByb2plY3QgdG8gYnVpbGQ7IGVtcHR5IGZvciByb290IHByb2plY3QgZGlyZWN0b3J5LiBGb3IgZXhhbXBsZSwgcXVpY2tzdGFydHMvbGlicmFyeS1wcm9jZXNzL2xpYnJhcnkKICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICBkaXNwbGF5X2dyb3VwOiBBcnRpZmFjdCBzb3VyY2UKICAgICAgLSBuYW1lOiBhcGJfa2llc2VydmVyX2dpdGh1Yl93ZWJob29rX3NlY3JldAogICAgICAgIHRpdGxlOiBHaXRodWIgV2ViaG9vayBTZWNyZXQKICAgICAgICBkZXNjcmlwdGlvbjogU2VjcmV0IGtleSB0byB1c2Ugd2hlbiBjb25m\
aWd1cmluZyBhIEdpdEh1YiBXZWJob29rLiBHZW5lcmF0ZWQgaWYgZW1wdHkuCiAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgZGlzcGxheV9ncm91cDogQXJ0aWZhY3Qgc291cmNlCiAgICAgIC0gbmFtZTogYXBiX2tpZXNlcnZlcl9nZW5lcmljX3dlYmhvb2tfc2VjcmV0CiAgICAgICAgdGl0bGU6IEdlbmVyaWMgV2ViaG9vayBTZWNyZXQKICAgICAgICBkZXNjcmlwdGlvbjogU2VjcmV0IGtleSB0byB1c2Ugd2hlbiBjb25maWd1cmluZyBhIEdlbmVyaWMgV2ViaG9vay4gR2VuZXJhdGVkIGlmIGVtcHR5LgogICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEFydGlmYWN0IHNvdXJjZQogICAgICAtIG5hbWU6IGFwYl9raWVzZXJ2ZXJfYXJ0aWZh\
Y3RfZGlyCiAgICAgICAgdGl0bGU6IEFydGlmYWN0IGRpcmVjdG9yaWVzCiAgICAgICAgZGVzY3JpcHRpb246IExpc3Qgb2YgZGlyZWN0b3JpZXMgZnJvbSB3aGljaCBhcmNoaXZlcyB3aWxsIGJlIGNvcGllZCBpbnRvIHRoZSBkZXBsb3ltZW50IGZvbGRlci4gSWYgdW5zcGVjaWZpZWQsIGFsbCBhcmNoaXZlcyBpbiAvdGFyZ2V0IHdpbGwgYmUgY29waWVkLgogICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEFydGlmYWN0IHNvdXJjZQogICAgICAtIDw8OiAqX2FwYl9tYXZlbl9taXJyb3JfdXJsCiAgICAgICAgZGVzY3JpcHRpb246IE1hdmVuIE1pcnJvciB0byB1c2UgZm9yIFMySSBidWlsZHMKICAgICAgICBkaXNwbGF5X2dyb3VwOiBBcnRpZmFj\
dCBzb3VyY2UKCiAgICAgICMgTWF2ZW4KICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VybAogICAgICAtICpfYXBiX21hdmVuX3JlcG9faWQKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VzZXIKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3B3ZAoKICAgICAgIyBKTVMKICAgICAgLSAqX2FwYl9lbmFibGVfa2llc2VydmVyX2ptc19pbnRlZ3JhdGlvbgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3IKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2V4ZWN1dG9yCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcl90cmFuc2FjdGVkCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXF1ZXN0CiAgICAgIC0gKl9hcGJf\
a2llc2VydmVyX2ptc19xdWV1ZV9yZXNwb25zZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX3NpZ25hbAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfc2lnbmFsCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfYXVkaXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2F1ZGl0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19hdWRpdF90cmFuc2FjdGVkCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc191c2VybmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcGFzc3dvcmQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2FtcV9xdWV1ZXMKCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX21vZGUKICAg\
ICAgLSAqX2FwYl9raWVzZXJ2ZXJfZGJfdHlwZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9kYl9zaXplCiAgICAgICMgS2V5c3RvcmUgYW5kIFNlY3JldAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9zZWNyZXRfbmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9rZXlzdG9yZV9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2tleXN0b3JlX2FsaWFzCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2tleXN0b3JlX3B3ZAoKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfdXNlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9wd2QKICAgICAgLSA8PDogKl9hcGJfa2llc2VydmVyX2hvc3RuYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKICAgICAgLSA8PDog\
Kl9hcGJfa2llc2VydmVyX3N0YXJ0dXBfc3RyYXRlZ3kKICAgICAgICBkZXNjcmlwdGlvbjogIldoZW4gc2V0IHRvIE9wZW5TaGlmdFN0YXJ0dXBTdHJhdGVneSwgYWxsb3dzIFByb2Nlc3MgU2VydmVyIHRvIHN0YXJ0IHVwIGluZGVwZW5kZW50bHkgdXNlZCBzaGFyZWQgc3RhdGUgZnJvbSBPcGVuU2hpZnQgQVBJIHNlcnZpY2U7IHdoZW4gc2V0IHRvIExvY2FsQ29udGFpbmVyc1N0YXJ0dXBTdHJhdGVneSwgYWxsb3dzIEtJRSBzZXJ2ZXIgdG8gc3RhcnQgdXAgYW5kIGZ1bmN0aW9uIHdpdGggbG9jYWwgY29uZmlnLCBldmVuIHdoZW4gYSBjb250cm9sbGVyIGlzIGNvbmZpZ3VyZWQgYW5kIHVuYXZhaWxhYmxlIgogICAgICAgIGVudW06IFsnTG9jYWxDb250YWluZXJzU3RhcnR1\
cFN0cmF0ZWd5JywgJ09wZW5TaGlmdFN0YXJ0dXBTdHJhdGVneSddCiAgICAgICAgZGVmYXVsdDogT3BlblNoaWZ0U3RhcnR1cFN0cmF0ZWd5CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ltYWdlX3N0cmVhbV9uYW1lCiAgICAgICAgIyBQcm9tZXRoZXVzCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3Byb21ldGhldXNfZXh0X2Rpc2FibGVkCgogICAgICAjIEV4dGVybmFsIERhdGFiYXNlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RyaXZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kaWFsZWN0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2hvc3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJf\
cG9ydAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3VybAoKICAgICAgIyBSb3V0ZXIKICAgICAgLSAqX2FwYl9yb3V0ZXJfc3ZjCiAgICAgIC0gKl9hcGJfcm91dGVyX2hvc3QKICAgICAgLSAqX2FwYl9yb3V0ZXJfcG9ydAogICAgICAtICpfYXBiX3JvdXRlcl9wcm90b2NvbAoKICAgICAgIyBDb250cm9sbGVyCiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9zdmMKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX2hvc3QKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3BvcnQKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3Byb3RvY29sCiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl90b2tlbgog\
ICAgICAtIDw8OiAqX2FwYl9jb250cm9sbGVyX3VzZXIKICAgICAgICBkaXNwbGF5X2dyb3VwOiBDb250cm9sbGVyIEludGVncmF0aW9uCiAgICAgIC0gPDw6ICpfYXBiX2NvbnRyb2xsZXJfcHdkCiAgICAgICAgZGlzcGxheV9ncm91cDogQ29udHJvbGxlciBJbnRlZ3JhdGlvbgoKICAgICAgIyBSSCAtIFNTTwogICAgICAtICpfYXBiX3Nzb191cmwKICAgICAgLSAqX2FwYl9zc29fcmVhbG0KICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudAogICAgICAgIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc3NvX2NsaWVudAogICAgICAgIHRpdGxlOiBSSC1TU08gUHJvY2VzcyBTZXJ2ZXIgLSBDbGllbnQKICAgICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGll\
bnQgbmFtZSBmb3IgUHJvY2VzcyBTZXJ2ZXIuIElmIHRoZSBzZWNyZXQsIHVzZXIgYW5kIHBhc3N3b3JkIGFyZSBwcm92aWRlZCBpdCB3aWxsIGJlIGNyZWF0ZWQuIEZvciBleGFtcGxlLCBraWVzZXJ2ZXIKICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICBuYW1lOiBhcGJfa2llc2VydmVyX3Nzb19jbGllbnRfc2VjcmV0CiAgICAgICAgdGl0bGU6IFJILVNTTyBQcm9jZXNzIFNlcnZlciAtIENsaWVudCBTZWNyZXQKICAgICAgICBkZXNjcmlwdGlvbjogUmVkIEhhdCBTaW5nbGUgU2lnbi1PbiBDbGllbnQgc2VjcmV0IGZvciBQcm9jZXNzIFNlcnZlci4KICAgICAgLSAqX2FwYl9zc29fdXNlcgogICAgICAtICpfYXBiX3Nzb19wd2QKICAgICAgLSAq\
X2FwYl9zc29fZGlzYWJsZV9zc2xfY2VydF92YWxpZGF0aW9uCiAgICAgIC0gKl9hcGJfc3NvX3ByaW5jaXBhbF9hdHRyaWJ1dGUKCiAgICAgICMgTERBUAogICAgICAtICpfYXBiX2F1dGhfbGRhcF91cmwKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmluZF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iaW5kX2NyZWRlbnRpYWwKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfamFhc19zZWN1cml0eV9kb21haW4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmFzZV9jdHhfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfYmFzZV9maWx0ZXIKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3Njb3BlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3NlYXJjaF90aW1lX2xpbWl0\
CiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2Rpc3Rpbmd1aXNoZWRfbmFtZV9hdHRyaWJ1dGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcGFyc2VfdXNlcm5hbWUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfYmVnaW5fc3RyaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VzZXJuYW1lX2VuZF9zdHJpbmcKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaWQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZXNfY3R4X2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfZmlsdGVyCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfcmVjdXJzaW9uCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2RlZmF1bHRfcm9sZQogICAgICAtICpf\
YXBiX2F1dGhfbGRhcF9yb2xlX25hbWVfYXR0cmlidXRlX2lkCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3BhcnNlX3JvbGVfbmFtZV9mcm9tX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfYXR0cmlidXRlX2lzX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JlZmVycmFsX3VzZXJfYXR0cmlidXRlX2lkX3RvX2NoZWNrCgogICAgICAjIFJvbGVNYXBwaW5nCiAgICAgIC0gKl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yb2xlc19wcm9wZXJ0aWVzCiAgICAgIC0gKl9hcGJfYXV0aF9yb2xlX21hcHBlcl9yZXBsYWNlX3JvbGUKCiAgLSBuYW1lOiBpbW11dGFibGUtbW9uCiAgICBkZXNjcmlwdGlvbjoKICAgICAgVXNlIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZyB0\
byBtb25pdG9yIHRoZSBwZXJmb3JtYW5jZSBvZiB0aGUgZW52aXJvbm1lbnQgYW5kIHRvIHN0b3AgYW5kCiAgICAgIHJlc3RhcnQgc29tZSBvZiB0aGUgcHJvY2VzcyBpbnN0YW5jZXMgaW4gYW4gaW1tdXRhYmxlIGVudmlyb25tZW50LCBidXQgbm90IHRvIGRlcGxveSBhZGRpdGlvbmFsIHByb2Nlc3NlcyB0byBhbnkgUHJvY2VzcyBTZXJ2ZXIgb3IgdW5kZXBsb3kgYW55IGV4aXN0aW5nIG9uZXMgKHlvdSBjYW4gbm90IGFkZCBvciByZW1vdmUgY29udGFpbmVycykKICAgIGZyZWU6IHRydWUKICAgIG1ldGFkYXRhOgogICAgICBkaXNwbGF5TmFtZTogSW1tdXRhYmxlIFNlcnZlciAtIE1vbml0b3IKICAgIHBhcmFtZXRlcnM6CiAgICAgICMgQ29tbW9uIENyZWRlbnRpYWxzCiAg\
ICAgIC0gKl9hcGJfa2llX2FkbWluX3VzZXIKICAgICAgLSAqX2FwYl9raWVfYWRtaW5fcHdkCiAgICAgIC0gKl9hcGJfaW1hZ2Vfc3RyZWFtX3RhZwoKICAgICAgIyBNYXZlbgogICAgICAtICpfYXBiX21hdmVuX21pcnJvcl91cmwKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VybAogICAgICAtICpfYXBiX21hdmVuX3JlcG9faWQKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3VzZXIKICAgICAgLSAqX2FwYl9tYXZlbl9yZXBvX3B3ZAoKICAgICAgIyBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgLSA8PDogKl9hcGJfcmVwbGljYXMKICAgICAgICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX3JlcGxpY2FzCiAgICAgICAgZGVzY3JpcHRpb246IE51bWJlciBv\
ZiBSZXBsaWNhcyBvZiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcgdGhhdCB3aWxsIGJlIGluaXRpYWxseSBkZXBsb3llZAogICAgICAgIGRlZmF1bHQ6IDEKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgLSA8PDogKl9hcGJfdm9sdW1lX3NpemUKICAgICAgICBuYW1lOiBhcGJfYnVzaW5lc3NjZW50cmFsX3ZvbHVtZV9zaXplCiAgICAgICAgZGVzY3JpcHRpb246IFNwZWNpZnkgdGhlIFBlcnNpc3RlbnQgVm9sdW1lIENsYWltIHNpemUgdG8gY3JlYXRlIGZvciBzdG9yaW5nIHRoZSB1c2VyIGRhdGEuIEZvciBleGFtcGxlLCA2NE1pCiAgICAgICAgZGVmYXVsdDogNjRNaQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1\
c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAjIEtleXN0b3JlIGFuZCBTZWNyZXQKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfc2VjcmV0X25hbWUKICAgICAgLSAqX2FwYl9idXNpbmVzc2NlbnRyYWxfa2V5c3RvcmVfbmFtZQogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9hbGlhcwogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9wd2QKICAgICAgLSA8PDogKl9hcGJfYnVzaW5lc3NjZW50cmFsX2hvc3RuYW1lCiAgICAgICAgZGVzY3JpcHRpb246IFB1YmxpYyBob3N0bmFtZSBmb3IgQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nLiBHZW5lcmF0ZWQgaWYgZW1wdHkKICAgICAgICBkaXNwbGF5X2dyb3VwOiBC\
dXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgIyBPQ1AgRW5hYmxlbWVudAogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfZ2xvYmFsX2Rpc2NvdmVyeQogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfcHJlZmVyX2tpZXNlcnZlcl9zdmMKICAgICAgLSAqX2FwYl9jb250cm9sbGVyX3RlbXBsYXRlX2NhY2hlX3R0bAogICAgICAjIE90aGVyIHVzZXJzCiAgICAgIC0gPDw6ICpfYXBiX2NvbnRyb2xsZXJfdXNlcgogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAtIDw8OiAqX2FwYl9jb250cm9sbGVyX3B3ZAogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwoKICAgICAgIyBTbWFy\
dCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfcmVwbGljYXMKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfcmVwbGljYXMKICAgICAgICBkZXNjcmlwdGlvbjogTnVtYmVyIG9mIFJlcGxpY2FzIG9mIFNtYXJ0IFJvdXRlciB0aGF0IHdpbGwgYmUgaW5pdGlhbGx5IGRlcGxveWVkCiAgICAgICAgZGVmYXVsdDogMgogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl92b2x1bWVfc2l6ZQogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl92b2x1bWVfc2l6ZQogICAgICAgIGRlc2NyaXB0aW9uOiBTcGVjaWZ5IHRoZSBQZXJzaXN0ZW50IFZvbHVtZSBDbGFpbSBzaXplIHRvIGNyZWF0ZS4gRm9yIGV4YW1wbGUsIDY0TWkKICAg\
ICAgICBkZWZhdWx0OiA2NE1pCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX2hvc3RuYW1lCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX2hvc3RuYW1lCiAgICAgICAgZGVzY3JpcHRpb246IFB1YmxpYyBob3N0bmFtZSBmb3IgU21hcnQgUm91dGVyLiBHZW5lcmF0ZWQgaWYgZW1wdHkKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfc2VjcmV0X25hbWUKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfc2VjcmV0X25hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfa2V5c3RvcmVfbmFtZQogICAgICAgIG5hbWU6\
IGFwYl9zbWFydHJvdXRlcl9rZXlzdG9yZV9uYW1lCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX2tleXN0b3JlX2FsaWFzCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX2tleXN0b3JlX2FsaWFzCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAgIC0gPDw6ICpfYXBiX2tleXN0b3JlX3B3ZAogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9rZXlzdG9yZV9wd2QKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKCiAgICAgICMgUkggLSBTU08KICAgICAgLSAqX2FwYl9zc29fdXJsCiAgICAgIC0gKl9hcGJfc3NvX3JlYWxtCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnQK\
ICAgICAgICBuYW1lOiBhcGJfc3NvX2J1c2luZXNzY2VudHJhbF9jbGllbnQKICAgICAgICB0aXRsZTogUkgtU1NPIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZyAtIENsaWVudAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBuYW1lIGZvciBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcuIElmIHRoZSBzZWNyZXQsIHVzZXIgYW5kIHBhc3N3b3JkIGFyZSBwcm92aWRlZCBpdCB3aWxsIGJlIGNyZWF0ZWQuIEZvciBleGFtcGxlLCBidXNpbmVzc2NlbnRyYWwKICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICBuYW1lOiBhcGJfc3NvX2J1c2luZXNzY2VudHJhbF9jbGllbnRfc2VjcmV0CiAgICAgICAg\
dGl0bGU6IFJILVNTTyBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcgLSBDbGllbnQgU2VjcmV0CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IHNlY3JldCBmb3IgQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nLgogICAgICAtICpfYXBiX3Nzb191c2VyCiAgICAgIC0gKl9hcGJfc3NvX3B3ZAogICAgICAtICpfYXBiX3Nzb19kaXNhYmxlX3NzbF9jZXJ0X3ZhbGlkYXRpb24KICAgICAgLSAqX2FwYl9zc29fcHJpbmNpcGFsX2F0dHJpYnV0ZQoKICAgICAgIyBMREFQCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VybAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iaW5kX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2JpbmRfY3Jl\
ZGVudGlhbAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9qYWFzX3NlY3VyaXR5X2RvbWFpbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iYXNlX2N0eF9kbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iYXNlX2ZpbHRlcgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfc2NvcGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3RpbWVfbGltaXQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfZGlzdGluZ3Vpc2hlZF9uYW1lX2F0dHJpYnV0ZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV91c2VybmFtZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9iZWdpbl9zdHJpbmcKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfZW5kX3N0cmlu\
ZwogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlc19jdHhfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9maWx0ZXIKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9yZWN1cnNpb24KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfZGVmYXVsdF9yb2xlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfbmFtZV9hdHRyaWJ1dGVfaWQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcGFyc2Vfcm9sZV9uYW1lX2Zyb21fZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaXNfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcmVmZXJyYWxfdXNlcl9hdHRyaWJ1dGVfaWRf\
dG9fY2hlY2sKCiAgICAgICMgUm9sZU1hcHBpbmcKICAgICAgLSAqX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JvbGVzX3Byb3BlcnRpZXMKICAgICAgLSAqX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JlcGxhY2Vfcm9sZQoKICAtIG5hbWU6IG1hbmFnZWQKICAgIGRlc2NyaXB0aW9uOgogICAgICBBbiBlbnZpcm9ubWVudCBmb3IgcnVubmluZyBleGlzdGluZyBwcm9jZXNzZXMgZm9yIHN0YWdpbmcgYW5kIHByb2R1Y3Rpb24gcHVycG9zZXMuCiAgICAgIFRoaXMgZW52aXJvbm1lbnQgaW5jbHVkZXMgc2V2ZXJhbCBncm91cHMgb2YgUHJvY2VzcyBTZXJ2ZXIgcG9kczsgeW91IGNhbiBkZXBsb3kgYW5kIHVuZGVwbG95CiAgICAgIHByb2Nlc3NlcyBvbiBldmVyeSBzdWNoIGdyb3VwIGFu\
ZCBhbHNvIHNjYWxlIHRoZSBncm91cCB1cCBvciBkb3duIGFzIG5lY2Vzc2FyeS4gVXNlIEJ1c2luZXNzCiAgICAgIENlbnRyYWwgTW9uaXRvcmluZyB0byBkZXBsb3ksIHJ1biwgYW5kIHN0b3AgdGhlIHByb2Nlc3NlcyBhbmQgdG8gbW9uaXRvciB0aGVpciBleGVjdXRpb24uCgogICAgZnJlZTogdHJ1ZQogICAgbWV0YWRhdGE6CiAgICAgIGRpc3BsYXlOYW1lOiBNYW5hZ2VkIEVudmlyb25tZW50CiAgICBwYXJhbWV0ZXJzOgogICAgICAjIENvbW1vbiBDcmVkZW50aWFscwogICAgICAtICpfYXBiX2tpZV9hZG1pbl91c2VyCiAgICAgIC0gKl9hcGJfa2llX2FkbWluX3B3ZAogICAgICAtICpfYXBiX2ltYWdlX3N0cmVhbV90YWcKCiAgICAgICMgTWF2ZW4KICAgICAgLSAqX2Fw\
Yl9tYXZlbl9taXJyb3JfdXJsCiAgICAgIC0gPDw6ICpfYXBiX21hdmVuX3JlcG9fdXJsCiAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgICBkZXNjcmlwdGlvbjogRXh0ZXJuYWwgTWF2ZW4gUmVwb3NpdG9yeSBVUkwuCiAgICAgIC0gKl9hcGJfbWF2ZW5fcmVwb19pZAogICAgICAtICpfYXBiX21hdmVuX3JlcG9fdXNlcgogICAgICAtICpfYXBiX21hdmVuX3JlcG9fcHdkCgogICAgICAjIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAtIDw8OiAqX2FwYl9yZXBsaWNhcwogICAgICAgIG5hbWU6IGFwYl9idXNpbmVzc2NlbnRyYWxfcmVwbGljYXMKICAgICAgICBkZWZhdWx0OiAxCiAgICAgICAgZGlzcGxheV9ncm91cDogQnVzaW5lc3MgQ2VudHJhbCBNb25p\
dG9yaW5nCiAgICAgIC0gPDw6ICpfYXBiX3ZvbHVtZV9zaXplCiAgICAgICAgbmFtZTogYXBiX2J1c2luZXNzY2VudHJhbF92b2x1bWVfc2l6ZQogICAgICAgIGRlc2NyaXB0aW9uOiBTcGVjaWZ5IHRoZSBQZXJzaXN0ZW50IFZvbHVtZSBDbGFpbSBzaXplIHRvIGNyZWF0ZSBmb3Igc3RvcmluZyB0aGUgdXNlciBkYXRhLiBGb3IgZXhhbXBsZSwgNjRNaQogICAgICAgIGRlZmF1bHQ6IDY0TWkKICAgICAgICBkaXNwbGF5X2dyb3VwOiBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcKICAgICAgIyMgS2V5c3RvcmUgYW5kIFNlY3JldAogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9zZWNyZXRfbmFtZQogICAgICAtICpfYXBiX2J1c2luZXNzY2VudHJhbF9rZXlzdG9yZV9u\
YW1lCiAgICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX2FsaWFzCiAgICAgIC0gKl9hcGJfYnVzaW5lc3NjZW50cmFsX2tleXN0b3JlX3B3ZAogICAgICAtIDw8OiAqX2FwYl9idXNpbmVzc2NlbnRyYWxfaG9zdG5hbWUKICAgICAgICBkZXNjcmlwdGlvbjogUHVibGljIGhvc3RuYW1lIGZvciBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcuIEdlbmVyYXRlZCBpZiBlbXB0eQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAjIE9DUCBFbmFibGVtZW50CiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9nbG9iYWxfZGlzY292ZXJ5CiAgICAgIC0gKl9hcGJfY29udHJvbGxlcl9wcmVmZXJfa2llc2VydmVyX3N2\
YwogICAgICAtICpfYXBiX2NvbnRyb2xsZXJfdGVtcGxhdGVfY2FjaGVfdHRsCgogICAgICAjIE90aGVyIHVzZXJzCiAgICAgIC0gPDw6ICpfYXBiX2NvbnRyb2xsZXJfdXNlcgogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwogICAgICAtIDw8OiAqX2FwYl9jb250cm9sbGVyX3B3ZAogICAgICAgIGRpc3BsYXlfZ3JvdXA6IEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZwoKICAgICAgIyBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfcmVwbGljYXMKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfcmVwbGljYXMKICAgICAgICBkZWZhdWx0OiAyCiAgICAgICAgZGlzcGxheV9ncm91cDogU21hcnQgUm91dGVyCiAgICAg\
IC0gPDw6ICpfYXBiX3ZvbHVtZV9zaXplCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX3ZvbHVtZV9zaXplCiAgICAgICAgZGVzY3JpcHRpb246IFNwZWNpZnkgdGhlIFBlcnNpc3RlbnQgVm9sdW1lIENsYWltIHNpemUgdG8gY3JlYXRlLiBGb3IgZXhhbXBsZSwgNjRNaQogICAgICAgIGRlZmF1bHQ6IDY0TWkKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfaG9zdG5hbWUKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfaG9zdG5hbWUKICAgICAgICBkZXNjcmlwdGlvbjogUHVibGljIGhvc3RuYW1lIGZvciBTbWFydCBSb3V0ZXIuIEdlbmVyYXRlZCBpZiBlbXB0eQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0\
IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9zZWNyZXRfbmFtZQogICAgICAgIG5hbWU6IGFwYl9zbWFydHJvdXRlcl9zZWNyZXRfbmFtZQogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgogICAgICAtIDw8OiAqX2FwYl9rZXlzdG9yZV9uYW1lCiAgICAgICAgbmFtZTogYXBiX3NtYXJ0cm91dGVyX2tleXN0b3JlX25hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfa2V5c3RvcmVfYWxpYXMKICAgICAgICBuYW1lOiBhcGJfc21hcnRyb3V0ZXJfa2V5c3RvcmVfYWxpYXMKICAgICAgICBkaXNwbGF5X2dyb3VwOiBTbWFydCBSb3V0ZXIKICAgICAgLSA8PDogKl9hcGJfa2V5c3RvcmVfcHdkCiAgICAgICAgbmFt\
ZTogYXBiX3NtYXJ0cm91dGVyX2tleXN0b3JlX3B3ZAogICAgICAgIGRpc3BsYXlfZ3JvdXA6IFNtYXJ0IFJvdXRlcgoKICAgICAgIyBQcm9jZXNzIFNlcnZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9tb2RlCiAgICAgIC0gbmFtZTogYXBiX2tpZXNlcnZlcl9zZXRzCiAgICAgICAgdGl0bGU6IFNldHMgb2YgUHJvY2VzcyBTZXJ2ZXJzCiAgICAgICAgZGVzY3JpcHRpb246CiAgICAgICAgICBOdW1iZXIgb2Ygc2V0cyBvZiBLaWUgUHJvY2VzcyBTZXJ2ZXIgY2x1c3RlciArIGRhdGFiYXNlIHRoYXQgd2lsbCBiZSBkZXBsb3llZC4KICAgICAgICAgIEVhY2ggc2V0IGNhbiBydW4gc2VwYXJhdGUgc2VydmljZXMgYW5kIG90aGVyIGFzc2V0cy4gQWxsIHNldHMgY29ubmVjdCB0\
byB0aGUgc2FtZSBTbWFydCBSb3V0ZXIKICAgICAgICBkZWZhdWx0OiAyCiAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgICB0eXBlOiBudW1iZXIKICAgICAgICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgogICAgICAtIDw8OiAqX2FwYl9yZXBsaWNhcwogICAgICAgIG5hbWU6IGFwYl9raWVzZXJ2ZXJfcmVwbGljYXMKICAgICAgICBkZWZhdWx0OiAzCiAgICAgICAgZGlzcGxheV9ncm91cDogUHJvY2VzcyBTZXJ2ZXIKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZGJfdHlwZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9kYl9zaXplCgogICAgICAjIyBLZXlzdG9yZSBhbmQgU2VjcmV0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3NlY3JldF9uYW1lCiAgICAgIC0g\
Kl9hcGJfa2llc2VydmVyX2tleXN0b3JlX25hbWUKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfYWxpYXMKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfa2V5c3RvcmVfcHdkCgogICAgICAtICpfYXBiX2tpZXNlcnZlcl91c2VyCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3B3ZAogICAgICAtIDw8OiAqX2FwYl9raWVzZXJ2ZXJfaG9zdG5hbWUKICAgICAgICBkaXNwbGF5X2dyb3VwOiBQcm9jZXNzIFNlcnZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9zdGFydHVwX3N0cmF0ZWd5CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ltYWdlX3N0cmVhbV9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX3Byb21ldGhldXNfZXh0X2Rpc2FibGVkCgogICAgICAjIEV4dGVy\
bmFsIERhdGFiYXNlCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2RyaXZlcgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9kaWFsZWN0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX2hvc3QKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfZXh0ZXJuYWxfZGJfcG9ydAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9leHRlcm5hbF9kYl9uYW1lCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2V4dGVybmFsX2RiX3VybAoKICAgICAgIyBKTVMKICAgICAgLSAqX2FwYl9lbmFibGVfa2llc2VydmVyX2ptc19pbnRlZ3JhdGlvbgogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZXhlY3V0b3IKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJf\
am1zX3F1ZXVlX2V4ZWN1dG9yCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19leGVjdXRvcl90cmFuc2FjdGVkCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXF1ZXN0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19xdWV1ZV9yZXNwb25zZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfZW5hYmxlX3NpZ25hbAogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcXVldWVfc2lnbmFsCiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19lbmFibGVfYXVkaXQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX3F1ZXVlX2F1ZGl0CiAgICAgIC0gKl9hcGJfa2llc2VydmVyX2ptc19hdWRpdF90cmFuc2FjdGVkCiAgICAgIC0gKl9hcGJfa2llc2VydmVy\
X2ptc191c2VybmFtZQogICAgICAtICpfYXBiX2tpZXNlcnZlcl9qbXNfcGFzc3dvcmQKICAgICAgLSAqX2FwYl9raWVzZXJ2ZXJfam1zX2FtcV9xdWV1ZXMKCiAgICAgICMgUkggLSBTU08KICAgICAgLSAqX2FwYl9zc29fdXJsCiAgICAgIC0gKl9hcGJfc3NvX3JlYWxtCiAgICAgIC0gPDw6ICpfYXBiX3Nzb19jbGllbnQKICAgICAgICBuYW1lOiBhcGJfc3NvX2J1c2luZXNzY2VudHJhbF9jbGllbnQKICAgICAgICB0aXRsZTogUkgtU1NPIEJ1c2luZXNzIENlbnRyYWwgTW9uaXRvcmluZyAtIENsaWVudAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBuYW1lIGZvciBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcuIElmIHRoZSBz\
ZWNyZXQsIHVzZXIgYW5kIHBhc3N3b3JkIGFyZSBwcm92aWRlZCBpdCB3aWxsIGJlIGNyZWF0ZWQuIEZvciBleGFtcGxlLCBidXNpbmVzc2NlbnRyYWwKICAgICAgLSA8PDogKl9hcGJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICBuYW1lOiBhcGJfc3NvX2J1c2luZXNzY2VudHJhbF9jbGllbnRfc2VjcmV0CiAgICAgICAgdGl0bGU6IFJILVNTTyBCdXNpbmVzcyBDZW50cmFsIE1vbml0b3JpbmcgLSBDbGllbnQgU2VjcmV0CiAgICAgICAgZGVzY3JpcHRpb246IFJlZCBIYXQgU2luZ2xlIFNpZ24tT24gQ2xpZW50IHNlY3JldCBmb3IgQnVzaW5lc3MgQ2VudHJhbCBNb25pdG9yaW5nLgogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50CiAgICAgICAgbmFtZTogYXBiX2tpZXNl\
cnZlcl9zc29fY2xpZW50CiAgICAgICAgdGl0bGU6IFJILVNTTyBQcm9jZXNzIFNlcnZlciAtIENsaWVudAogICAgICAgIGRlc2NyaXB0aW9uOiBSZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBuYW1lIGZvciBQcm9jZXNzIFNlcnZlci4gSWYgdGhlIHNlY3JldCwgdXNlciBhbmQgcGFzc3dvcmQgYXJlIHByb3ZpZGVkIGl0IHdpbGwgYmUgY3JlYXRlZC4gRm9yIGV4YW1wbGUsIGtpZXNlcnZlcgogICAgICAtIDw8OiAqX2FwYl9zc29fY2xpZW50X3NlY3JldAogICAgICAgIG5hbWU6IGFwYl9raWVzZXJ2ZXJfc3NvX2NsaWVudF9zZWNyZXQKICAgICAgICB0aXRsZTogUkgtU1NPIFByb2Nlc3MgU2VydmVyIC0gQ2xpZW50IFNlY3JldAogICAgICAgIGRlc2NyaXB0aW9uOiBS\
ZWQgSGF0IFNpbmdsZSBTaWduLU9uIENsaWVudCBzZWNyZXQgZm9yIFByb2Nlc3MgU2VydmVyLgogICAgICAtICpfYXBiX3Nzb191c2VyCiAgICAgIC0gKl9hcGJfc3NvX3B3ZAogICAgICAtICpfYXBiX3Nzb19kaXNhYmxlX3NzbF9jZXJ0X3ZhbGlkYXRpb24KICAgICAgLSAqX2FwYl9zc29fcHJpbmNpcGFsX2F0dHJpYnV0ZQoKICAgICAgIyBMREFQCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3VybAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iaW5kX2RuCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX2JpbmRfY3JlZGVudGlhbAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9qYWFzX3NlY3VyaXR5X2RvbWFpbgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9iYXNlX2N0eF9kbgogICAg\
ICAtICpfYXBiX2F1dGhfbGRhcF9iYXNlX2ZpbHRlcgogICAgICAtICpfYXBiX2F1dGhfbGRhcF9zZWFyY2hfc2NvcGUKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfc2VhcmNoX3RpbWVfbGltaXQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfZGlzdGluZ3Vpc2hlZF9uYW1lX2F0dHJpYnV0ZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF9wYXJzZV91c2VybmFtZQogICAgICAtICpfYXBiX2F1dGhfbGRhcF91c2VybmFtZV9iZWdpbl9zdHJpbmcKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfdXNlcm5hbWVfZW5kX3N0cmluZwogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlX2F0dHJpYnV0ZV9pZAogICAgICAtICpfYXBiX2F1dGhfbGRhcF9yb2xlc19jdHhfZG4KICAgICAgLSAqX2Fw\
Yl9hdXRoX2xkYXBfcm9sZV9maWx0ZXIKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9yZWN1cnNpb24KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfZGVmYXVsdF9yb2xlCiAgICAgIC0gKl9hcGJfYXV0aF9sZGFwX3JvbGVfbmFtZV9hdHRyaWJ1dGVfaWQKICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcGFyc2Vfcm9sZV9uYW1lX2Zyb21fZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcm9sZV9hdHRyaWJ1dGVfaXNfZG4KICAgICAgLSAqX2FwYl9hdXRoX2xkYXBfcmVmZXJyYWxfdXNlcl9hdHRyaWJ1dGVfaWRfdG9fY2hlY2sKCiAgICAgICMgUm9sZU1hcHBpbmcKICAgICAgLSAqX2FwYl9hdXRoX3JvbGVfbWFwcGVyX3JvbGVzX3Byb3BlcnRpZXMKICAgICAgLSAqX2FwYl9h\
dXRoX3JvbGVfbWFwcGVyX3JlcGxhY2Vfcm9sZQo="

modules:
  repositories:
    - path: modules
  install:
    - name: rhpam-apb
packages:
  content_sets_file: content_sets.yml
  repositories:
    - name: base
      id: rhel-7-server-rpms
  install:
    - java-1.8.0-openjdk-headless
osbs:
  configuration:
    container_file: container.yaml
  repository:
    name: apbs/rhpam-7-apb-openshift
    branch: rhpam-7-rhel-7
