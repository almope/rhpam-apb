---
- name: Check secret exists
  shell: >
    oc get secret -n {{ namespace }} {{ secret_name }} --no-headers -o jsonpath='{.metadata.annotations.rhpam-apb/generated}'
  ignore_errors: yes
  register: secret_cmd

- name: Generate secret if it does not exist
  block:
    - name: Generate keystore
      shell: >
        keytool --genkeypair -keyalg RSA -storetype pkcs12 -keysize 2048 -dname "CN={{ route_host }}" -alias {{ keystore_alias }} -keystore {{ keystore_path }} -keypass {{ keystore_pwd }} -storepass {{ keystore_pwd }}

    - name: Convert keystore to b64file
      shell: >
        cat '{{ keystore_path }}' | base64 -w 0 > '{{ keystore_path }}.txt'

    - name: Create secret from keystore
      k8s:
        state: '{{ state }}'
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: '{{ secret_name }}'
            namespace: '{{ namespace }}'
            annotations:
              rhpam-apb/generated: "true"
            labels:
              app: '{{ application_name }}'
              service: '{{ service_name }}'
          data: "{{ lookup('template', 'secret.yml.j2') | from_yaml }}"
  when:
    - secret_cmd.rc != 0
    - state == 'present'

- name: Remove secret
  k8s:
    api_version: v1
    kind: Secret
    name: '{{ secret_name }}'
    namespace: '{{ namespace }}'
    state: '{{ state }}'
  when:
    - secret_cmd.rc == 0
    - secret_cmd.stdout == "true"
    - state == 'absent'