---
- name: "[KIE SERVER] check requirements"
  block:
    - include_role:
        name: check-image-requirements
      vars:
        image_namespace: "{{ kieserver_image_namespace }}"
        image_name: "{{ kieserver_image_name }}"
        image_tag: "{{ kieserver_image_tag }}"

    - include_tasks: check-ha-configuration.yml
  when: state == "present"

- name: "[KIE SERVER] configure application"
  block:
    - name: "[KIE SERVER] configure services"
      include_tasks: services.yml

    - name: "[KIE SERVER] configure routes"
      include_tasks: routes.yml

    - name: "[KIE SERVER] set default secret name if none provided"
      set_fact:
        ks_secret_name: "{{ kieserver_secret_name | default(kieserver_default_secret_name, true) }}"

    - name: "[KIE SERVER] generate secret if not present"
      include_role:
        name: generate-secret
      vars:
        secret_name: '{{ ks_secret_name }}'
        service_name: '{{ kieserver_service_name }}'
        keystore_name: '{{ kieserver_keystore_name }}'
        keystore_alias: '{{ kieserver_keystore_alias }}'
        keystore_pwd: '{{ kieserver_keystore_pwd }}'
        route_host: '{{ route_raw.result.spec.host }}'

    - name: "[KIE SERVER] configure persistence"
      include_tasks: persistence.yml
      when:
        - kieserver_db_size != ""
        - kieserver_db_type == "H2"

    - name: "[KIE SERVER] set db facts for any DB"
      set_fact:
        # e.g. authoring-kieserver-postgresql
        kieserver_db_deployment: '{{ kieserver_deployment_name }}-{{ kieserver_db_type | lower }}'
        # e.g. rhpam-kieserver-postgresql
        kieserver_db_service: '{{ kieserver_service_name }}-{{ kieserver_db_type | lower }}'

    - name: "[KIE SERVER] call PostgreSQL role"
      include_role:
        name: deploy-postgresql
      vars:
        service_name: '{{ kieserver_db_service }}'
        deployment_name: '{{ kieserver_db_deployment }}'
        postgresql_volume_size: '{{ kieserver_db_size }}'
        postgresql_database: '{{ kieserver_db_name }}'
        postgresql_user: '{{ kieserver_db_user }}'
        postgresql_pwd: '{{ kieserver_db_pwd }}'
      when: kieserver_db_type == "PostgreSQL"

    - name: "[KIE SERVER] call MySQL role"
      include_role:
        name: deploy-mysql
      vars:
        service_name: '{{ kieserver_db_service }}'
        deployment_name: '{{ kieserver_db_deployment }}'
        mysql_volume_size: '{{ kieserver_db_size }}'
        mysql_database: '{{ kieserver_db_name }}'
        mysql_user: '{{ kieserver_db_user }}'
        mysql_pwd: '{{ kieserver_db_pwd }}'
      when: kieserver_db_type == "MySQL"

    - name: "[KIE SERVER] configure S2I"
      include_tasks: s2i.yml
      when: kieserver_s2i

    - name: "[KIE SERVER] set kieserver state to {{ state }}"
      openshift_raw:
        state: '{{ state }}'
        definition: "{{ lookup('template', 'kieserver-dc.yml.j2') | from_yaml }}"
  when: not provision_failed
